# compiler: R8
# compiler_version: 8.5.10
# min_api: 19
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: 962d2d0
# pg_map_hash: SHA-256 962d2d0ec7c8e8e4aafa20c3e8d77d7f9d4bc5991028c5f3f887e500f56876ec
android.support.customtabs.ICustomTabsCallback -> a.a:
# {"id":"sourceFile","fileName":"ICustomTabsCallback.java"}
    void onPostMessage(java.lang.String,android.os.Bundle) -> b
    void extraCallback(java.lang.String,android.os.Bundle) -> d
    void onMessageChannelReady(android.os.Bundle) -> e
    void onActivityResized(int,int,android.os.Bundle) -> f
    android.os.Bundle extraCallbackWithResult(java.lang.String,android.os.Bundle) -> j
    void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle) -> n
    void onNavigationEvent(int,android.os.Bundle) -> s
android.support.customtabs.ICustomTabsCallback$Stub -> a.a$a:
# {"id":"sourceFile","fileName":"ICustomTabsCallback.java"}
    1:9:void <init>():0:0 -> <init>
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
    1:170:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.ICustomTabsCallback$_Parcel -> a.a$b:
# {"id":"sourceFile","fileName":"ICustomTabsCallback.java"}
    1:5:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:4:void access$100(android.os.Parcel,android.os.Parcelable,int):0:0 -> b
    1:13:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> c
    4:15:void writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> d
android.support.customtabs.ICustomTabsService -> a.b:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
    boolean warmup(long) -> i
    boolean newSession(android.support.customtabs.ICustomTabsCallback) -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/a;)Z"}
    boolean newSessionWithExtras(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/a;Landroid/os/Bundle;)Z"}
    boolean validateRelationship(android.support.customtabs.ICustomTabsCallback,int,android.net.Uri,android.os.Bundle) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/a;ILandroid/net/Uri;Landroid/os/Bundle;)Z"}
android.support.customtabs.ICustomTabsService$Stub -> a.b$a:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
    5:25:android.support.customtabs.ICustomTabsService asInterface(android.os.IBinder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)La/b;"}
android.support.customtabs.ICustomTabsService$Stub$Proxy -> a.b$a$a:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
    android.os.IBinder mRemote -> a
    1:6:void <init>(android.os.IBinder):0:0 -> <init>
    1:3:android.os.IBinder asBinder():0:0 -> asBinder
    1:48:boolean warmup(long):0:0 -> i
    1:48:boolean newSession(android.support.customtabs.ICustomTabsCallback):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/a;)Z"}
    1:52:boolean newSessionWithExtras(android.support.customtabs.ICustomTabsCallback,android.os.Bundle):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/a;Landroid/os/Bundle;)Z"}
    1:58:boolean validateRelationship(android.support.customtabs.ICustomTabsCallback,int,android.net.Uri,android.os.Bundle):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/a;ILandroid/net/Uri;Landroid/os/Bundle;)Z"}
android.support.customtabs.ICustomTabsService$_Parcel -> a.b$b:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
    1:4:void access$100(android.os.Parcel,android.os.Parcelable,int):0:0 -> a
    4:15:void writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> b
android.support.customtabs.trusted.ITrustedWebActivityCallback -> b.a:
# {"id":"sourceFile","fileName":"ITrustedWebActivityCallback.java"}
android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub -> b.a$a:
# {"id":"sourceFile","fileName":"ITrustedWebActivityCallback.java"}
    5:25:android.support.customtabs.trusted.ITrustedWebActivityCallback asInterface(android.os.IBinder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Lb/a;"}
android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub$Proxy -> b.a$a$a:
# {"id":"sourceFile","fileName":"ITrustedWebActivityCallback.java"}
    android.os.IBinder mRemote -> a
    1:6:void <init>(android.os.IBinder):0:0 -> <init>
    1:3:android.os.IBinder asBinder():0:0 -> asBinder
android.support.customtabs.trusted.ITrustedWebActivityService -> b.b:
# {"id":"sourceFile","fileName":"ITrustedWebActivityService.java"}
    android.os.Bundle getActiveNotifications() -> c
    int getSmallIconId() -> g
    void cancelNotification(android.os.Bundle) -> h
    android.os.Bundle notifyNotificationWithChannel(android.os.Bundle) -> l
    android.os.Bundle getSmallIconBitmap() -> m
    android.os.Bundle areNotificationsEnabled(android.os.Bundle) -> o
    android.os.Bundle extraCommand(java.lang.String,android.os.Bundle,android.os.IBinder) -> r
android.support.customtabs.trusted.ITrustedWebActivityService$Stub -> b.b$a:
# {"id":"sourceFile","fileName":"ITrustedWebActivityService.java"}
    1:9:void <init>():0:0 -> <init>
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
    1:120:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel -> b.b$b:
# {"id":"sourceFile","fileName":"ITrustedWebActivityService.java"}
    1:5:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:4:void access$100(android.os.Parcel,android.os.Parcelable,int):0:0 -> b
    1:13:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> c
    4:15:void writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> d
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
android.system.ErrnoException -> android.system.ErrnoException:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.Cancellable -> androidx.activity.a:
# {"id":"sourceFile","fileName":"Cancellable.java"}
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/a;"}
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/l;"}
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/savedstate/b;"}
    androidx.lifecycle.ViewModelStore mViewModelStore -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/v;"}
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> h
    int mContentLayoutId -> i
    java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode -> j
    androidx.activity.result.ActivityResultRegistry mActivityResultRegistry -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/e;"}
    1:1:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher():0:0 -> b
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0:0 -> c
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/v;"}
    1:1:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/activity/result/e;"}
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/g;"}
    1:1:void access$001(androidx.activity.ComponentActivity):0:0 -> l
    1:1:androidx.activity.result.ActivityResultRegistry access$100(androidx.activity.ComponentActivity):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/ComponentActivity;)Landroidx/activity/result/e;"}
    1:6:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;)V"}
    1:1:void ensureViewModelStore():0:0 -> o
    1:1:void initViewTreeOwners():0:0 -> p
    1:1:java.lang.Object onRetainCustomNonConfigurationInstance():0:0 -> q
    1:1:void setContentView(android.view.View):0:0 -> setContentView
    1:1:void startActivityForResult(android.content.Intent,int):0:0 -> startActivityForResult
    2:2:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0:0 -> startActivityForResult
    1:1:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int):0:0 -> startIntentSenderForResult
    2:2:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$a:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.ComponentActivity this$0 -> a
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$b:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.ComponentActivity this$0 -> i
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.activity.ComponentActivity$6 -> androidx.activity.ComponentActivity$c:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.ComponentActivity this$0 -> a
    1:1:android.os.Bundle saveState():0:0 -> a
androidx.activity.ComponentActivity$7 -> androidx.activity.ComponentActivity$d:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void onContextAvailable(android.content.Context):0:0 -> a
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$e:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    java.lang.Object custom -> a
    androidx.lifecycle.ViewModelStore viewModelStore -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/v;"}
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
# {"id":"sourceFile","fileName":"ImmLeaksCleaner.java"}
    android.app.Activity mActivity -> a
    int sReflectedFieldsInitialized -> b
    java.lang.reflect.Field sHField -> c
    java.lang.reflect.Field sServedViewField -> d
    java.lang.reflect.Field sNextServedViewField -> e
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
    1:1:void initializeReflectiveFields():0:0 -> h
androidx.activity.OnBackPressedCallback -> androidx.activity.b:
# {"id":"sourceFile","fileName":"OnBackPressedCallback.java"}
    boolean mEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList mCancellables -> b
    1:1:void addCancellable(androidx.activity.Cancellable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/a;)V"}
    void handleOnBackPressed() -> b
    1:1:boolean isEnabled():0:0 -> c
    1:1:void remove():0:0 -> d
    1:1:void removeCancellable(androidx.activity.Cancellable):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/a;)V"}
    1:1:void setEnabled(boolean):0:0 -> f
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    java.lang.Runnable mFallbackOnBackPressed -> a
    java.util.ArrayDeque mOnBackPressedCallbacks -> b
    1:1:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/activity/b;)V"}
    1:1:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/b;)Landroidx/activity/a;"}
    1:1:void onBackPressed():0:0 -> c
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    androidx.lifecycle.Lifecycle mLifecycle -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g;"}
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/b;"}
    androidx.activity.Cancellable mCurrentCancellable -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/a;"}
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$a:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/b;"}
    androidx.activity.OnBackPressedDispatcher this$0 -> b
androidx.activity.OnBackPressedDispatcherOwner -> androidx.activity.c:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcherOwner.java"}
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> b
androidx.activity.contextaware.ContextAwareHelper -> c.a:
# {"id":"sourceFile","fileName":"ContextAwareHelper.java"}
    java.util.Set mListeners -> a
    android.content.Context mContext -> b
    1:11:void <init>():0:0 -> <init>
    1:15:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;)V"}
    2:4:void clearAvailableContext():0:0 -> b
    1:25:void dispatchOnContextAvailable(android.content.Context):0:0 -> c
androidx.activity.contextaware.OnContextAvailableListener -> c.b:
# {"id":"sourceFile","fileName":"OnContextAvailableListener.java"}
    void onContextAvailable(android.content.Context) -> a
androidx.activity.result.ActivityResult -> androidx.activity.result.a:
# {"id":"sourceFile","fileName":"ActivityResult.java"}
    int mResultCode -> a
    android.content.Intent mData -> b
    1:1:void <init>(int,android.content.Intent):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:android.content.Intent getData():0:0 -> a
    1:1:int getResultCode():0:0 -> b
    1:1:java.lang.String resultCodeToString(int):0:0 -> c
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.a$a:
# {"id":"sourceFile","fileName":"ActivityResult.java"}
    1:1:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/activity/result/a;"}
    1:1:androidx.activity.result.ActivityResult[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/activity/result/a;"}
androidx.activity.result.ActivityResultCallback -> androidx.activity.result.b:
# {"id":"sourceFile","fileName":"ActivityResultCallback.java"}
    void onActivityResult(java.lang.Object) -> a
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.c:
# {"id":"sourceFile","fileName":"ActivityResultLauncher.java"}
    void unregister() -> a
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.e:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    java.util.Random mRandom -> a
    java.util.Map mRcToKey -> b
    java.util.Map mKeyToRc -> c
    java.util.Map mKeyToLifecycleContainers -> d
    java.util.ArrayList mLaunchedKeys -> e
    java.util.Map mKeyToCallback -> f
    java.util.Map mParsedPendingResults -> g
    android.os.Bundle mPendingResults -> h
    1:1:void bindRcKey(int,java.lang.String):0:0 -> a
    1:1:boolean dispatchResult(int,int,android.content.Intent):0:0 -> b
    1:1:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILandroid/content/Intent;Landroidx/activity/result/e$b;)V"}
    1:1:int generateRandomNumber():0:0 -> d
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> e
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> f
    1:72:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ld/a;Landroidx/activity/result/b;)Landroidx/activity/result/c;"}
    1:1:int registerKey(java.lang.String):0:0 -> h
    1:1:void unregister(java.lang.String):0:0 -> i
androidx.activity.result.ActivityResultRegistry$$ExternalSyntheticThrowCCEIfNotNull0 -> androidx.activity.result.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    java.lang.String val$key -> a
    androidx.activity.result.ActivityResultCallback val$callback -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/b;"}
    androidx.activity.result.contract.ActivityResultContract val$contract -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/a;"}
    androidx.activity.result.ActivityResultRegistry this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/e;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.e$a:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    java.lang.String val$key -> a
    int val$requestCode -> b
    androidx.activity.result.contract.ActivityResultContract val$contract -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/a;"}
    androidx.activity.result.ActivityResultRegistry this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/e;"}
    1:12:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/result/e;Ljava/lang/String;ILd/a;)V"}
    1:1:void unregister():0:0 -> a
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.e$b:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    androidx.activity.result.ActivityResultCallback mCallback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/b;"}
    androidx.activity.result.contract.ActivityResultContract mContract -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/a;"}
    1:8:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/result/b;Ld/a;)V"}
androidx.activity.result.ActivityResultRegistryOwner -> androidx.activity.result.f:
# {"id":"sourceFile","fileName":"ActivityResultRegistryOwner.java"}
    androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/activity/result/e;"}
androidx.activity.result.contract.ActivityResultContract -> d.a:
# {"id":"sourceFile","fileName":"ActivityResultContract.java"}
    1:4:void <init>():0:0 -> <init>
    java.lang.Object parseResult(int,android.content.Intent) -> a
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> d.b:
# {"id":"sourceFile","fileName":"ActivityResultContracts.java"}
    1:4:void <init>():0:0 -> <init>
    1:5:java.lang.Object parseResult(int,android.content.Intent):0:0 -> a
    4:67:java.util.Map parseResult(int,android.content.Intent):0:0 -> b
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> d.c:
# {"id":"sourceFile","fileName":"ActivityResultContracts.java"}
    1:4:void <init>():0:0 -> <init>
    1:5:java.lang.Object parseResult(int,android.content.Intent):0:0 -> a
    1:6:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/content/Intent;)Landroidx/activity/result/a;"}
androidx.annotation.Keep -> androidx.annotation.Keep:
# {"id":"sourceFile","fileName":"Keep.java"}
androidx.appcompat.R$attr -> e.a:
    int listMenuViewStyle -> A
    int panelMenuListTheme -> B
    int radioButtonStyle -> C
    int ratingBarStyle -> D
    int searchViewStyle -> E
    int seekBarStyle -> F
    int spinnerStyle -> G
    int textColorSearchUrl -> H
    int toolbarNavigationButtonStyle -> I
    int toolbarStyle -> J
    int actionBarPopupTheme -> a
    int actionBarSize -> b
    int actionBarStyle -> c
    int actionBarTheme -> d
    int actionBarWidgetTheme -> e
    int actionModePopupWindowStyle -> f
    int actionModeStyle -> g
    int actionOverflowButtonStyle -> h
    int actionOverflowMenuStyle -> i
    int alertDialogCenterButtons -> j
    int alertDialogStyle -> k
    int alertDialogTheme -> l
    int autoCompleteTextViewStyle -> m
    int buttonStyle -> n
    int checkboxStyle -> o
    int checkedTextViewStyle -> p
    int colorAccent -> q
    int colorButtonNormal -> r
    int colorControlActivated -> s
    int colorControlHighlight -> t
    int colorControlNormal -> u
    int colorSwitchThumbNormal -> v
    int dialogTheme -> w
    int dropDownListViewStyle -> x
    int editTextStyle -> y
    int imageButtonStyle -> z
androidx.appcompat.R$bool -> e.b:
    int abc_action_bar_embed_tabs -> a
androidx.appcompat.R$color -> e.c:
    int abc_decor_view_status_guard -> a
    int abc_decor_view_status_guard_light -> b
    int abc_tint_btn_checkable -> c
    int abc_tint_default -> d
    int abc_tint_edittext -> e
    int abc_tint_seek_thumb -> f
    int abc_tint_spinner -> g
    int abc_tint_switch_track -> h
androidx.appcompat.R$dimen -> e.d:
    int abc_cascading_menus_min_smallest_width -> a
    int abc_config_prefDialogWidth -> b
    int abc_dropdownitem_icon_width -> c
    int abc_dropdownitem_text_padding_left -> d
    int abc_search_view_preferred_height -> e
    int abc_search_view_preferred_width -> f
    int abc_star_big -> g
    int abc_star_medium -> h
    int abc_star_small -> i
    int tooltip_precise_anchor_extra_offset -> j
    int tooltip_precise_anchor_threshold -> k
    int tooltip_y_offset_non_touch -> l
    int tooltip_y_offset_touch -> m
androidx.appcompat.R$drawable -> e.e:
    int abc_seekbar_thumb_material -> A
    int abc_seekbar_tick_mark_material -> B
    int abc_seekbar_track_material -> C
    int abc_spinner_mtrl_am_alpha -> D
    int abc_spinner_textfield_background_material -> E
    int abc_star_black_48dp -> F
    int abc_star_half_black_48dp -> G
    int abc_switch_thumb_material -> H
    int abc_switch_track_mtrl_alpha -> I
    int abc_tab_indicator_material -> J
    int abc_text_cursor_material -> K
    int abc_text_select_handle_left_mtrl -> L
    int abc_text_select_handle_middle_mtrl -> M
    int abc_text_select_handle_right_mtrl -> N
    int abc_textfield_activated_mtrl_alpha -> O
    int abc_textfield_default_mtrl_alpha -> P
    int abc_textfield_search_activated_mtrl_alpha -> Q
    int abc_textfield_search_default_mtrl_alpha -> R
    int abc_textfield_search_material -> S
    int abc_ab_share_pack_mtrl_alpha -> a
    int abc_btn_borderless_material -> b
    int abc_btn_check_material -> c
    int abc_btn_check_material_anim -> d
    int abc_btn_colored_material -> e
    int abc_btn_default_mtrl_shape -> f
    int abc_btn_radio_material -> g
    int abc_btn_radio_material_anim -> h
    int abc_cab_background_internal_bg -> i
    int abc_cab_background_top_material -> j
    int abc_cab_background_top_mtrl_alpha -> k
    int abc_dialog_material_background -> l
    int abc_edit_text_material -> m
    int abc_ic_ab_back_material -> n
    int abc_ic_commit_search_api_mtrl_alpha -> o
    int abc_ic_menu_copy_mtrl_am_alpha -> p
    int abc_ic_menu_cut_mtrl_alpha -> q
    int abc_ic_menu_paste_mtrl_am_alpha -> r
    int abc_ic_menu_selectall_mtrl_alpha -> s
    int abc_ic_menu_share_mtrl_alpha -> t
    int abc_list_divider_mtrl_alpha -> u
    int abc_menu_hardkey_panel_mtrl_mult -> v
    int abc_popup_background_mtrl_mult -> w
    int abc_ratingbar_indicator_material -> x
    int abc_ratingbar_material -> y
    int abc_ratingbar_small_material -> z
androidx.appcompat.R$id -> e.f:
    int search_go_btn -> A
    int search_mag_icon -> B
    int search_plate -> C
    int search_src_text -> D
    int search_voice_btn -> E
    int shortcut -> F
    int spacer -> G
    int split_action_bar -> H
    int submenuarrow -> I
    int submit_area -> J
    int textSpacerNoButtons -> K
    int textSpacerNoTitle -> L
    int title -> M
    int titleDividerNoCustom -> N
    int title_template -> O
    int topPanel -> P
    int action_bar -> a
    int action_bar_activity_content -> b
    int action_bar_container -> c
    int action_bar_subtitle -> d
    int action_bar_title -> e
    int action_context_bar -> f
    int action_menu_presenter -> g
    int action_mode_bar_stub -> h
    int action_mode_close_button -> i
    int alertTitle -> j
    int buttonPanel -> k
    int content -> l
    int contentPanel -> m
    int custom -> n
    int customPanel -> o
    int decor_content_parent -> p
    int edit_query -> q
    int group_divider -> r
    int message -> s
    int parentPanel -> t
    int scrollIndicatorDown -> u
    int scrollIndicatorUp -> v
    int scrollView -> w
    int search_button -> x
    int search_close_btn -> y
    int search_edit_frame -> z
androidx.appcompat.R$layout -> e.g:
    int abc_action_bar_title_item -> a
    int abc_action_menu_item_layout -> b
    int abc_action_menu_layout -> c
    int abc_action_mode_close_item_material -> d
    int abc_cascading_menu_item_layout -> e
    int abc_dialog_title_material -> f
    int abc_expanded_menu_layout -> g
    int abc_list_menu_item_checkbox -> h
    int abc_list_menu_item_icon -> i
    int abc_list_menu_item_layout -> j
    int abc_list_menu_item_radio -> k
    int abc_popup_menu_header_item_layout -> l
    int abc_popup_menu_item_layout -> m
    int abc_screen_simple -> n
    int abc_screen_simple_overlay_action_mode -> o
    int abc_screen_toolbar -> p
    int abc_search_dropdown_item_icons_2line -> q
    int abc_search_view -> r
    int abc_tooltip -> s
    int support_simple_spinner_dropdown_item -> t
androidx.appcompat.R$string -> e.h:
    int abc_action_bar_up_description -> a
    int abc_menu_alt_shortcut_label -> b
    int abc_menu_ctrl_shortcut_label -> c
    int abc_menu_delete_shortcut_label -> d
    int abc_menu_enter_shortcut_label -> e
    int abc_menu_function_shortcut_label -> f
    int abc_menu_meta_shortcut_label -> g
    int abc_menu_shift_shortcut_label -> h
    int abc_menu_space_shortcut_label -> i
    int abc_menu_sym_shortcut_label -> j
    int abc_prepend_shortcut_label -> k
    int abc_searchview_description_search -> l
androidx.appcompat.R$style -> e.i:
    int Animation_AppCompat_Tooltip -> a
    int Theme_AppCompat_CompactMenu -> b
    int Theme_AppCompat_Empty -> c
    int Theme_AppCompat_Light -> d
androidx.appcompat.R$styleable -> e.j:
    int ActionMode_closeItemLayout -> A
    int AppCompatTheme_android_windowAnimationStyle -> A0
    int MenuItem_android_visible -> A1
    int Spinner_android_prompt -> A2
    int ViewBackgroundHelper_backgroundTint -> A3
    int ActionMode_height -> B
    int AppCompatTheme_panelBackground -> B0
    int MenuItem_android_menuCategory -> B1
    int Spinner_android_dropDownWidth -> B2
    int ViewBackgroundHelper_backgroundTintMode -> B3
    int ActionMode_subtitleTextStyle -> C
    int AppCompatTheme_viewInflaterClass -> C0
    int MenuItem_android_orderInCategory -> C1
    int Spinner_popupTheme -> C2
    int[] ViewStubCompat -> C3
    int ActionMode_titleTextStyle -> D
    int AppCompatTheme_windowActionBar -> D0
    int MenuItem_android_title -> D1
    int[] SwitchCompat -> D2
    int ViewStubCompat_android_id -> D3
    int[] ActivityChooserView -> E
    int AppCompatTheme_windowActionBarOverlay -> E0
    int MenuItem_android_titleCondensed -> E1
    int[] TextAppearance -> E2
    int ViewStubCompat_android_layout -> E3
    int[] AlertDialog -> F
    int AppCompatTheme_windowActionModeOverlay -> F0
    int MenuItem_android_alphabeticShortcut -> F1
    int TextAppearance_android_textSize -> F2
    int ViewStubCompat_android_inflatedId -> F3
    int AlertDialog_android_layout -> G
    int AppCompatTheme_windowFixedHeightMajor -> G0
    int MenuItem_android_numericShortcut -> G1
    int TextAppearance_android_typeface -> G2
    int AlertDialog_buttonIconDimen -> H
    int AppCompatTheme_windowFixedHeightMinor -> H0
    int MenuItem_android_checkable -> H1
    int TextAppearance_android_textStyle -> H2
    int AlertDialog_buttonPanelSideLayout -> I
    int AppCompatTheme_windowFixedWidthMajor -> I0
    int MenuItem_android_onClick -> I1
    int TextAppearance_android_textColor -> I2
    int AlertDialog_listItemLayout -> J
    int AppCompatTheme_windowFixedWidthMinor -> J0
    int MenuItem_actionLayout -> J1
    int TextAppearance_android_textColorHint -> J2
    int AlertDialog_listLayout -> K
    int AppCompatTheme_windowMinWidthMajor -> K0
    int MenuItem_actionProviderClass -> K1
    int TextAppearance_android_textColorLink -> K2
    int AlertDialog_multiChoiceItemLayout -> L
    int AppCompatTheme_windowMinWidthMinor -> L0
    int MenuItem_actionViewClass -> L1
    int TextAppearance_android_fontFamily -> L2
    int AlertDialog_showTitle -> M
    int AppCompatTheme_windowNoTitle -> M0
    int MenuItem_alphabeticModifiers -> M1
    int TextAppearance_android_textFontWeight -> M2
    int AlertDialog_singleChoiceItemLayout -> N
    int[] ButtonBarLayout -> N0
    int MenuItem_contentDescription -> N1
    int TextAppearance_fontFamily -> N2
    int[] AppCompatEmojiHelper -> O
    int ButtonBarLayout_allowStacking -> O0
    int MenuItem_iconTint -> O1
    int TextAppearance_fontVariationSettings -> O2
    int[] AppCompatImageView -> P
    int[] CheckedTextView -> P0
    int MenuItem_iconTintMode -> P1
    int TextAppearance_textAllCaps -> P2
    int AppCompatImageView_srcCompat -> Q
    int CheckedTextView_android_checkMark -> Q0
    int MenuItem_numericModifiers -> Q1
    int TextAppearance_textLocale -> Q2
    int AppCompatImageView_tint -> R
    int CheckedTextView_checkMarkCompat -> R0
    int MenuItem_showAsAction -> R1
    int[] Toolbar -> R2
    int AppCompatImageView_tintMode -> S
    int CheckedTextView_checkMarkTint -> S0
    int MenuItem_tooltipText -> S1
    int Toolbar_android_gravity -> S2
    int[] AppCompatSeekBar -> T
    int CheckedTextView_checkMarkTintMode -> T0
    int[] MenuView -> T1
    int Toolbar_buttonGravity -> T2
    int AppCompatSeekBar_android_thumb -> U
    int[] CompoundButton -> U0
    int MenuView_android_itemTextAppearance -> U1
    int Toolbar_collapseContentDescription -> U2
    int AppCompatSeekBar_tickMark -> V
    int CompoundButton_android_button -> V0
    int MenuView_android_itemBackground -> V1
    int Toolbar_collapseIcon -> V2
    int AppCompatSeekBar_tickMarkTint -> W
    int CompoundButton_buttonCompat -> W0
    int MenuView_preserveIconSpacing -> W1
    int Toolbar_contentInsetEnd -> W2
    int AppCompatSeekBar_tickMarkTintMode -> X
    int CompoundButton_buttonTint -> X0
    int MenuView_subMenuArrow -> X1
    int Toolbar_contentInsetEndWithActions -> X2
    int[] AppCompatTextHelper -> Y
    int CompoundButton_buttonTintMode -> Y0
    int[] PopupWindow -> Y1
    int Toolbar_contentInsetLeft -> Y2
    int AppCompatTextHelper_android_textAppearance -> Z
    int[] DrawerArrowToggle -> Z0
    int PopupWindow_android_popupBackground -> Z1
    int Toolbar_contentInsetRight -> Z2
    int[] ActionBar -> a
    int AppCompatTextHelper_android_drawableTop -> a0
    int[] LinearLayoutCompat -> a1
    int PopupWindow_overlapAnchor -> a2
    int Toolbar_contentInsetStart -> a3
    int ActionBar_background -> b
    int AppCompatTextHelper_android_drawableBottom -> b0
    int LinearLayoutCompat_android_gravity -> b1
    int[] PopupWindowBackgroundState -> b2
    int Toolbar_contentInsetStartWithNavigation -> b3
    int ActionBar_backgroundSplit -> c
    int AppCompatTextHelper_android_drawableLeft -> c0
    int LinearLayoutCompat_android_orientation -> c1
    int[] RecycleListView -> c2
    int Toolbar_logo -> c3
    int ActionBar_backgroundStacked -> d
    int AppCompatTextHelper_android_drawableRight -> d0
    int LinearLayoutCompat_android_baselineAligned -> d1
    int RecycleListView_paddingBottomNoButtons -> d2
    int Toolbar_logoDescription -> d3
    int ActionBar_contentInsetEnd -> e
    int AppCompatTextHelper_android_drawableStart -> e0
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> e1
    int RecycleListView_paddingTopNoTitle -> e2
    int Toolbar_maxButtonHeight -> e3
    int ActionBar_contentInsetStart -> f
    int AppCompatTextHelper_android_drawableEnd -> f0
    int LinearLayoutCompat_android_weightSum -> f1
    int[] SearchView -> f2
    int Toolbar_menu -> f3
    int ActionBar_customNavigationLayout -> g
    int[] AppCompatTextView -> g0
    int LinearLayoutCompat_divider -> g1
    int SearchView_android_focusable -> g2
    int Toolbar_navigationContentDescription -> g3
    int ActionBar_displayOptions -> h
    int AppCompatTextView_autoSizeMaxTextSize -> h0
    int LinearLayoutCompat_dividerPadding -> h1
    int SearchView_android_maxWidth -> h2
    int Toolbar_navigationIcon -> h3
    int ActionBar_elevation -> i
    int AppCompatTextView_autoSizeMinTextSize -> i0
    int LinearLayoutCompat_measureWithLargestChild -> i1
    int SearchView_android_inputType -> i2
    int Toolbar_popupTheme -> i3
    int ActionBar_height -> j
    int AppCompatTextView_autoSizePresetSizes -> j0
    int LinearLayoutCompat_showDividers -> j1
    int SearchView_android_imeOptions -> j2
    int Toolbar_subtitle -> j3
    int ActionBar_hideOnContentScroll -> k
    int AppCompatTextView_autoSizeStepGranularity -> k0
    int[] LinearLayoutCompat_Layout -> k1
    int SearchView_closeIcon -> k2
    int Toolbar_subtitleTextAppearance -> k3
    int ActionBar_homeAsUpIndicator -> l
    int AppCompatTextView_autoSizeTextType -> l0
    int[] ListPopupWindow -> l1
    int SearchView_commitIcon -> l2
    int Toolbar_subtitleTextColor -> l3
    int ActionBar_icon -> m
    int AppCompatTextView_drawableBottomCompat -> m0
    int ListPopupWindow_android_dropDownHorizontalOffset -> m1
    int SearchView_defaultQueryHint -> m2
    int Toolbar_title -> m3
    int ActionBar_logo -> n
    int AppCompatTextView_drawableEndCompat -> n0
    int ListPopupWindow_android_dropDownVerticalOffset -> n1
    int SearchView_goIcon -> n2
    int Toolbar_titleMargin -> n3
    int ActionBar_popupTheme -> o
    int AppCompatTextView_drawableLeftCompat -> o0
    int[] MenuGroup -> o1
    int SearchView_iconifiedByDefault -> o2
    int Toolbar_titleMarginBottom -> o3
    int ActionBar_subtitle -> p
    int AppCompatTextView_drawableRightCompat -> p0
    int MenuGroup_android_enabled -> p1
    int SearchView_layout -> p2
    int Toolbar_titleMarginEnd -> p3
    int ActionBar_subtitleTextStyle -> q
    int AppCompatTextView_drawableStartCompat -> q0
    int MenuGroup_android_id -> q1
    int SearchView_queryBackground -> q2
    int Toolbar_titleMarginStart -> q3
    int ActionBar_title -> r
    int AppCompatTextView_drawableTint -> r0
    int MenuGroup_android_visible -> r1
    int SearchView_queryHint -> r2
    int Toolbar_titleMarginTop -> r3
    int ActionBar_titleTextStyle -> s
    int AppCompatTextView_drawableTintMode -> s0
    int MenuGroup_android_menuCategory -> s1
    int SearchView_searchHintIcon -> s2
    int Toolbar_titleMargins -> s3
    int[] ActionBarLayout -> t
    int AppCompatTextView_drawableTopCompat -> t0
    int MenuGroup_android_orderInCategory -> t1
    int SearchView_searchIcon -> t2
    int Toolbar_titleTextAppearance -> t3
    int ActionBarLayout_android_layout_gravity -> u
    int AppCompatTextView_emojiCompatEnabled -> u0
    int MenuGroup_android_checkableBehavior -> u1
    int SearchView_submitBackground -> u2
    int Toolbar_titleTextColor -> u3
    int[] ActionMenuItemView -> v
    int AppCompatTextView_firstBaselineToTopHeight -> v0
    int[] MenuItem -> v1
    int SearchView_suggestionRowLayout -> v2
    int[] View -> v3
    int ActionMenuItemView_android_minWidth -> w
    int AppCompatTextView_lastBaselineToBottomHeight -> w0
    int MenuItem_android_icon -> w1
    int SearchView_voiceIcon -> w2
    int View_android_theme -> w3
    int[] ActionMenuView -> x
    int AppCompatTextView_lineHeight -> x0
    int MenuItem_android_enabled -> x1
    int[] Spinner -> x2
    int View_theme -> x3
    int[] ActionMode -> y
    int[] AppCompatTheme -> y0
    int MenuItem_android_id -> y1
    int Spinner_android_entries -> y2
    int[] ViewBackgroundHelper -> y3
    int ActionMode_background -> z
    int AppCompatTheme_android_windowIsFloating -> z0
    int MenuItem_android_checked -> z1
    int Spinner_android_popupBackground -> z2
    int ViewBackgroundHelper_android_background -> z3
    1:1:void <clinit>():0:0 -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.a:
# {"id":"sourceFile","fileName":"ActionBar.java"}
    1:1:boolean closeOptionsMenu():0:0 -> g
    boolean collapseActionView() -> h
    void dispatchMenuVisibilityChanged(boolean) -> i
    int getDisplayOptions() -> j
    android.content.Context getThemedContext() -> k
    1:1:boolean invalidateOptionsMenu():0:0 -> l
    void onConfigurationChanged(android.content.res.Configuration) -> m
    1:1:void onDestroy():0:0 -> n
    boolean onKeyShortcut(int,android.view.KeyEvent) -> o
    1:1:boolean onMenuKeyEvent(android.view.KeyEvent):0:0 -> p
    1:1:boolean openOptionsMenu():0:0 -> q
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> r
    void setShowHideAnimationEnabled(boolean) -> s
    void setWindowTitle(java.lang.CharSequence) -> t
    androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b$a;)Lj/b;"}
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.a$a:
# {"id":"sourceFile","fileName":"ActionBar.java"}
    int gravity -> a
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
    4:4:void <init>(androidx.appcompat.app.ActionBar$LayoutParams):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/a$a;)V"}
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
# {"id":"sourceFile","fileName":"AlertController.java"}
    androidx.core.widget.NestedScrollView mScrollView -> A
    int mIconId -> B
    android.graphics.drawable.Drawable mIcon -> C
    android.widget.ImageView mIconView -> D
    android.widget.TextView mTitleView -> E
    android.widget.TextView mMessageView -> F
    android.view.View mCustomTitleView -> G
    android.widget.ListAdapter mAdapter -> H
    int mCheckedItem -> I
    int mAlertDialogLayout -> J
    int mButtonPanelSideLayout -> K
    int mListLayout -> L
    int mMultiChoiceItemLayout -> M
    int mSingleChoiceItemLayout -> N
    int mListItemLayout -> O
    boolean mShowTitle -> P
    int mButtonPanelLayoutHint -> Q
    android.os.Handler mHandler -> R
    android.view.View$OnClickListener mButtonHandler -> S
    android.content.Context mContext -> a
    androidx.appcompat.app.AppCompatDialog mDialog -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/h;"}
    android.view.Window mWindow -> c
    int mButtonIconDimen -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mMessage -> f
    android.widget.ListView mListView -> g
    android.view.View mView -> h
    int mViewLayoutResId -> i
    int mViewSpacingLeft -> j
    int mViewSpacingTop -> k
    int mViewSpacingRight -> l
    int mViewSpacingBottom -> m
    boolean mViewSpacingSpecified -> n
    android.widget.Button mButtonPositive -> o
    java.lang.CharSequence mButtonPositiveText -> p
    android.os.Message mButtonPositiveMessage -> q
    android.graphics.drawable.Drawable mButtonPositiveIcon -> r
    android.widget.Button mButtonNegative -> s
    java.lang.CharSequence mButtonNegativeText -> t
    android.os.Message mButtonNegativeMessage -> u
    android.graphics.drawable.Drawable mButtonNegativeIcon -> v
    android.widget.Button mButtonNeutral -> w
    java.lang.CharSequence mButtonNeutralText -> x
    android.os.Message mButtonNeutralMessage -> y
    android.graphics.drawable.Drawable mButtonNeutralIcon -> z
    1:114:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lf/h;Landroid/view/Window;)V"}
    1:1:boolean canTextInput(android.view.View):0:0 -> a
    1:1:void centerButton(android.widget.Button):0:0 -> b
    1:1:int getIconAttributeResId(int):0:0 -> c
    1:1:android.widget.ListView getListView():0:0 -> d
    1:1:void installContent():0:0 -> e
    1:1:void manageScrollIndicators(android.view.View,android.view.View,android.view.View):0:0 -> f
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> g
    1:1:boolean onKeyUp(int,android.view.KeyEvent):0:0 -> h
    1:1:android.view.ViewGroup resolvePanel(android.view.View,android.view.View):0:0 -> i
    1:1:int selectContentView():0:0 -> j
    1:1:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable):0:0 -> k
    1:1:void setCustomTitle(android.view.View):0:0 -> l
    1:1:void setIcon(int):0:0 -> m
    1:1:void setIcon(android.graphics.drawable.Drawable):0:0 -> n
    1:1:void setMessage(java.lang.CharSequence):0:0 -> o
    1:1:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0:0 -> p
    1:1:void setTitle(java.lang.CharSequence):0:0 -> q
    1:1:void setView(int):0:0 -> r
    1:1:void setView(android.view.View):0:0 -> s
    1:1:void setView(android.view.View,int,int,int,int):0:0 -> t
    1:1:void setupButtons(android.view.ViewGroup):0:0 -> u
    1:1:void setupContent(android.view.ViewGroup):0:0 -> v
    1:1:void setupCustomContent(android.view.ViewGroup):0:0 -> w
    1:1:void setupTitle(android.view.ViewGroup):0:0 -> x
    1:1:void setupView():0:0 -> y
    1:1:boolean shouldCenterSingleButton(android.content.Context):0:0 -> z
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$a:
# {"id":"sourceFile","fileName":"AlertController.java"}
    androidx.appcompat.app.AlertController this$0 -> b
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$b:
# {"id":"sourceFile","fileName":"AlertController.java"}
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    androidx.appcompat.app.AlertController this$0 -> c
    1:1:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int):0:0 -> a
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$c:
# {"id":"sourceFile","fileName":"AlertController.java"}
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    androidx.appcompat.app.AlertController this$0 -> c
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$d:
# {"id":"sourceFile","fileName":"AlertController.java"}
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    androidx.appcompat.app.AlertController this$0 -> c
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$e:
# {"id":"sourceFile","fileName":"AlertController.java"}
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    androidx.appcompat.app.AlertController this$0 -> c
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$f:
# {"id":"sourceFile","fileName":"AlertController.java"}
    int mViewSpacingLeft -> A
    int mViewSpacingTop -> B
    int mViewSpacingRight -> C
    int mViewSpacingBottom -> D
    boolean mViewSpacingSpecified -> E
    boolean[] mCheckedItems -> F
    boolean mIsMultiChoice -> G
    boolean mIsSingleChoice -> H
    int mCheckedItem -> I
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> J
    android.database.Cursor mCursor -> K
    java.lang.String mLabelColumn -> L
    java.lang.String mIsCheckedColumn -> M
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> N
    boolean mRecycleOnMeasure -> O
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    int mIconId -> c
    android.graphics.drawable.Drawable mIcon -> d
    int mIconAttrId -> e
    java.lang.CharSequence mTitle -> f
    android.view.View mCustomTitleView -> g
    java.lang.CharSequence mMessage -> h
    java.lang.CharSequence mPositiveButtonText -> i
    android.graphics.drawable.Drawable mPositiveButtonIcon -> j
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> k
    java.lang.CharSequence mNegativeButtonText -> l
    android.graphics.drawable.Drawable mNegativeButtonIcon -> m
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> n
    java.lang.CharSequence mNeutralButtonText -> o
    android.graphics.drawable.Drawable mNeutralButtonIcon -> p
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> q
    boolean mCancelable -> r
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> s
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> t
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> u
    java.lang.CharSequence[] mItems -> v
    android.widget.ListAdapter mAdapter -> w
    android.content.DialogInterface$OnClickListener mOnClickListener -> x
    int mViewLayoutResId -> y
    android.view.View mView -> z
    1:1:void apply(androidx.appcompat.app.AlertController):0:0 -> a
    1:1:void createListView(androidx.appcompat.app.AlertController):0:0 -> b
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$f$a:
# {"id":"sourceFile","fileName":"AlertController.java"}
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> b
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/AlertController$f;"}
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$f$b:
# {"id":"sourceFile","fileName":"AlertController.java"}
    int mLabelIndex -> b
    int mIsCheckedIndex -> c
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> d
    androidx.appcompat.app.AlertController val$dialog -> e
    androidx.appcompat.app.AlertController$AlertParams this$0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/AlertController$f;"}
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$f$c:
# {"id":"sourceFile","fileName":"AlertController.java"}
    androidx.appcompat.app.AlertController val$dialog -> b
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/AlertController$f;"}
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$f$d:
# {"id":"sourceFile","fileName":"AlertController.java"}
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> b
    androidx.appcompat.app.AlertController val$dialog -> c
    androidx.appcompat.app.AlertController$AlertParams this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/AlertController$f;"}
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$g:
# {"id":"sourceFile","fileName":"AlertController.java"}
    java.lang.ref.WeakReference mDialog -> a
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$h:
# {"id":"sourceFile","fileName":"AlertController.java"}
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
# {"id":"sourceFile","fileName":"AlertController.java"}
    int mPaddingTopNoTitle -> b
    int mPaddingBottomNoButtons -> c
    1:1:void setHasDecor(boolean,boolean):0:0 -> a
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.b:
# {"id":"sourceFile","fileName":"AlertDialog.java"}
    androidx.appcompat.app.AlertController mAlert -> d
    1:1:android.widget.ListView getListView():0:0 -> g
    1:1:int resolveDialogTheme(android.content.Context,int):0:0 -> h
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.b$a:
# {"id":"sourceFile","fileName":"AlertDialog.java"}
    androidx.appcompat.app.AlertController$AlertParams P -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/AlertController$f;"}
    int mTheme -> b
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    1:1:androidx.appcompat.app.AlertDialog create():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/b;"}
    1:1:android.content.Context getContext():0:0 -> b
    1:1:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/ListAdapter;Landroid/content/DialogInterface$OnClickListener;)Landroidx/appcompat/app/b$a;"}
    1:1:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/appcompat/app/b$a;"}
    1:1:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;)Landroidx/appcompat/app/b$a;"}
    1:1:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/DialogInterface$OnKeyListener;)Landroidx/appcompat/app/b$a;"}
    1:1:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/ListAdapter;ILandroid/content/DialogInterface$OnClickListener;)Landroidx/appcompat/app/b$a;"}
    1:1:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Landroidx/appcompat/app/b$a;"}
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.c:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    androidx.appcompat.app.AppCompatDelegate mDelegate -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/d;"}
    android.content.res.Resources mResources -> r
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/a;"}
    1:1:void initDelegate():0:0 -> B
    1:1:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/l;)V"}
    1:1:void onNightModeChanged(int):0:0 -> D
    1:1:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/l;)V"}
    1:1:void onSupportContentChanged():0:0 -> F
    1:1:boolean onSupportNavigateUp():0:0 -> G
    1:1:boolean performMenuItemShortcut(android.view.KeyEvent):0:0 -> H
    1:1:void supportNavigateUpTo(android.content.Intent):0:0 -> I
    1:1:boolean supportShouldUpRecreateTask(android.content.Intent):0:0 -> J
    1:1:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:2:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b$a;)Lj/b;"}
    1:1:android.content.Intent getSupportParentActivityIntent():0:0 -> j
    1:1:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:void initViewTreeOwners():0:0 -> p
    1:1:void setContentView(int):0:0 -> setContentView
    2:2:void setContentView(android.view.View):0:0 -> setContentView
    3:3:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> setContentView
    1:1:void supportInvalidateOptionsMenu():0:0 -> y
    1:1:androidx.appcompat.app.AppCompatDelegate getDelegate():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/d;"}
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.c$a:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    androidx.appcompat.app.AppCompatActivity this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/c;"}
    1:1:android.os.Bundle saveState():0:0 -> a
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.c$b:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    androidx.appcompat.app.AppCompatActivity this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/c;"}
    1:1:void onContextAvailable(android.content.Context):0:0 -> a
androidx.appcompat.app.AppCompatCallback -> f.a:
# {"id":"sourceFile","fileName":"AppCompatCallback.java"}
    void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b$a;)Lj/b;"}
    void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.d:
# {"id":"sourceFile","fileName":"AppCompatDelegate.java"}
    int sDefaultNightMode -> b
    androidx.collection.ArraySet sActivityDelegates -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/b;"}
    java.lang.Object sActivityDelegatesLock -> d
    void setContentView(int) -> A
    void setContentView(android.view.View) -> B
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> C
    void setTheme(int) -> D
    void setTitle(java.lang.CharSequence) -> E
    1:1:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/d;)V"}
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> d
    1:1:void attachBaseContext(android.content.Context):0:0 -> e
    1:1:android.content.Context attachBaseContext2(android.content.Context):0:0 -> f
    1:6:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lf/a;)Landroidx/appcompat/app/d;"}
    1:6:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Dialog;Lf/a;)Landroidx/appcompat/app/d;"}
    android.view.View findViewById(int) -> i
    1:1:int getDefaultNightMode():0:0 -> j
    int getLocalNightMode() -> k
    android.view.MenuInflater getMenuInflater() -> l
    androidx.appcompat.app.ActionBar getSupportActionBar() -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/a;"}
    void installViewFactory() -> n
    void invalidateOptionsMenu() -> o
    void onConfigurationChanged(android.content.res.Configuration) -> p
    void onCreate(android.os.Bundle) -> q
    void onDestroy() -> r
    void onPostCreate(android.os.Bundle) -> s
    void onPostResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> u
    void onStart() -> v
    void onStop() -> w
    1:1:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/d;)V"}
    1:1:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/d;)V"}
    boolean requestWindowFeature(int) -> z
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.e:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    boolean mFeatureIndeterminateProgress -> A
    boolean mHasActionBar -> B
    boolean mOverlayActionBar -> C
    boolean mOverlayActionMode -> D
    boolean mIsFloating -> E
    boolean mWindowNoTitle -> F
    boolean mClosingActionMenu -> G
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/appcompat/app/e$t;"}
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$t;"}
    boolean mLongPressBackDown -> J
    boolean mBaseContextAttached -> K
    boolean mCreated -> L
    boolean mDestroyed -> M
    android.content.res.Configuration mEffectiveConfiguration -> N
    int mLocalNightMode -> O
    int mThemeResId -> P
    boolean mActivityHandlesUiMode -> Q
    boolean mActivityHandlesUiModeChecked -> R
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$p;"}
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$p;"}
    boolean mInvalidatePanelMenuPosted -> U
    int mInvalidatePanelMenuFeatures -> V
    java.lang.Runnable mInvalidatePanelMenuRunnable -> W
    boolean mEnableDefaultActionBarUp -> X
    android.graphics.Rect mTempRect1 -> Y
    android.graphics.Rect mTempRect2 -> Z
    androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/f;"}
    androidx.appcompat.app.LayoutIncludeDetector mLayoutIncludeDetector -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/g;"}
    androidx.collection.SimpleArrayMap sLocalNightModes -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    boolean IS_PRE_LOLLIPOP -> d0
    java.lang.Object mHost -> e
    int[] sWindowBackgroundStyleable -> e0
    android.content.Context mContext -> f
    boolean sCanReturnDifferentContext -> f0
    android.view.Window mWindow -> g
    boolean sCanApplyOverrideConfiguration -> g0
    androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$n;"}
    boolean sInstalledExceptionHandler -> h0
    androidx.appcompat.app.AppCompatCallback mAppCompatCallback -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/a;"}
    androidx.appcompat.app.ActionBar mActionBar -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/a;"}
    android.view.MenuInflater mMenuInflater -> k
    java.lang.CharSequence mTitle -> l
    androidx.appcompat.widget.DecorContentParent mDecorContentParent -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/o0;"}
    androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$h;"}
    androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$u;"}
    androidx.appcompat.view.ActionMode mActionMode -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b;"}
    androidx.appcompat.widget.ActionBarContextView mActionModeView -> q
    android.widget.PopupWindow mActionModePopup -> r
    java.lang.Runnable mShowActionModePopup -> s
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/e0;"}
    boolean mHandleNativeActionModes -> u
    boolean mSubDecorInstalled -> v
    android.view.ViewGroup mSubDecor -> w
    android.widget.TextView mTitleView -> x
    android.view.View mStatusGuard -> y
    boolean mFeatureProgress -> z
    1:1:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lf/a;)V"}
    2:2:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Dialog;Lf/a;)V"}
    3:3:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Window;Lf/a;Ljava/lang/Object;)V"}
    1:1:void setContentView(int):0:0 -> A
    1:1:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e$t;Landroid/view/KeyEvent;)Z"}
    1:1:void setContentView(android.view.View):0:0 -> B
    1:1:void reopenMenu(boolean):0:0 -> B0
    1:1:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> C
    1:1:int sanitizeWindowFeatureId(int):0:0 -> C0
    1:1:void setTheme(int):0:0 -> D
    1:1:boolean shouldAnimateActionModeView():0:0 -> D0
    1:1:void setTitle(java.lang.CharSequence):0:0 -> E
    1:1:boolean shouldInheritContext(android.view.ViewParent):0:0 -> E0
    1:1:boolean applyDayNight():0:0 -> F
    3:56:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> F0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b$a;)Lj/b;"}
    1:1:boolean applyDayNight(boolean):0:0 -> G
    1:1:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> G0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b$a;)Lj/b;"}
    1:1:void applyFixedSizeWindow():0:0 -> H
    1:1:void throwFeatureRequestIfSubDecorInstalled():0:0 -> H0
    1:1:void attachToWindow(android.view.Window):0:0 -> I
    1:1:androidx.appcompat.app.AppCompatActivity tryUnwrapContext():0:0 -> I0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/c;"}
    1:1:int calculateNightMode():0:0 -> J
    1:1:boolean updateForNightMode(int,boolean):0:0 -> J0
    1:1:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/appcompat/app/e$t;Landroid/view/Menu;)V"}
    1:1:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration):0:0 -> K0
    1:1:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> L0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroid/graphics/Rect;)I"}
    1:1:void cleanupAutoManagers():0:0 -> M
    1:1:void updateStatusGuardColor(android.view.View):0:0 -> M0
    1:1:void closePanel(int):0:0 -> N
    1:1:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e$t;Z)V"}
    1:1:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration):0:0 -> P
    1:1:android.view.ViewGroup createSubDecor():0:0 -> Q
    1:1:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> R
    1:1:void dismissPopups():0:0 -> S
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> T
    1:1:void doInvalidatePanelMenu(int):0:0 -> U
    1:1:void endOnGoingFadeAnimation():0:0 -> V
    1:1:void ensureSubDecor():0:0 -> W
    1:1:void ensureWindow():0:0 -> X
    1:1:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Menu;)Landroidx/appcompat/app/e$t;"}
    1:1:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration):0:0 -> Z
    1:1:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:android.content.Context getActionBarThemedContext():0:0 -> a0
    1:1:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)Z"}
    1:1:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/appcompat/app/e$p;"}
    1:1:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/appcompat/app/e$p;"}
    1:1:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> d
    1:1:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Landroidx/appcompat/app/e$t;"}
    1:1:java.lang.CharSequence getTitle():0:0 -> e0
    1:1:android.content.Context attachBaseContext2(android.content.Context):0:0 -> f
    1:1:android.view.Window$Callback getWindowCallback():0:0 -> f0
    1:1:void initWindowDecorActionBar():0:0 -> g0
    1:1:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e$t;)Z"}
    1:1:android.view.View findViewById(int):0:0 -> i
    1:1:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e$t;)Z"}
    1:1:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e$t;)Z"}
    1:1:int getLocalNightMode():0:0 -> k
    1:1:void invalidatePanelMenu(int):0:0 -> k0
    1:1:android.view.MenuInflater getMenuInflater():0:0 -> l
    1:1:boolean isActivityManifestHandlingUiMode():0:0 -> l0
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/a;"}
    1:1:boolean isHandleNativeActionModesEnabled():0:0 -> m0
    1:1:void installViewFactory():0:0 -> n
    1:1:int mapNightMode(android.content.Context,int):0:0 -> n0
    1:1:void invalidateOptionsMenu():0:0 -> o
    1:1:boolean onBackPressed():0:0 -> o0
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    2:2:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:void onConfigurationChanged(android.content.res.Configuration):0:0 -> p
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> p0
    1:1:void onCreate(android.os.Bundle):0:0 -> q
    1:1:boolean onKeyDownPanel(int,android.view.KeyEvent):0:0 -> q0
    1:1:void onDestroy():0:0 -> r
    1:1:boolean onKeyShortcut(int,android.view.KeyEvent):0:0 -> r0
    1:1:void onPostCreate(android.os.Bundle):0:0 -> s
    1:1:boolean onKeyUp(int,android.view.KeyEvent):0:0 -> s0
    1:1:void onPostResume():0:0 -> t
    1:1:boolean onKeyUpPanel(int,android.view.KeyEvent):0:0 -> t0
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> u
    1:1:void onMenuOpened(int):0:0 -> u0
    1:1:void onStart():0:0 -> v
    1:1:void onPanelClosed(int):0:0 -> v0
    1:1:void onStop():0:0 -> w
    1:1:void onSubDecorInstalled(android.view.ViewGroup):0:0 -> w0
    1:1:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e$t;Landroid/view/KeyEvent;)V"}
    1:1:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/a;"}
    1:1:boolean requestWindowFeature(int):0:0 -> z
    1:1:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int):0:0 -> z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e$t;ILandroid/view/KeyEvent;I)Z"}
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.e$a:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> a
    1:1:boolean shouldWrapException(java.lang.Throwable):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.e$b:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.e$c:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/j0;)Landroidx/core/view/j0;"}
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.e$d:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:void onFitSystemWindows(android.graphics.Rect):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.e$e:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:void onAttachedFromWindow():0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.e$f:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.e$f$a:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl$6 this$1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$f;"}
    1:1:void onAnimationEnd(android.view.View):0:0 -> a
    1:1:void onAnimationStart(android.view.View):0:0 -> b
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.e$g:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:void onAnimationEnd(android.view.View):0:0 -> a
    1:1:void onAnimationStart(android.view.View):0:0 -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.e$h:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)Z"}
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.e$i:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.view.ActionMode$Callback mWrapped -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b$a;"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:8:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/e;Lj/b$a;)V"}
    1:7:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/MenuItem;)Z"}
    1:82:void onDestroyActionMode(androidx.appcompat.view.ActionMode):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:7:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/Menu;)Z"}
    1:14:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/Menu;)Z"}
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.e$i$a:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$i;"}
    1:1:void onAnimationEnd(android.view.View):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.e$j:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1:1:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration):0:0 -> a
    1:1:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration):0:0 -> b
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.e$k:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1:1:boolean isPowerSaveMode(android.os.PowerManager):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl$$ExternalSyntheticApiModelOutline0 -> f.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean f.AppCompatDelegateImpl$Api21Impl$$ExternalSyntheticApiModelOutline0.m(android.os.PowerManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.e$l:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1:1:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline0 -> f.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList f.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline1 -> f.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean f.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline1.m(android.os.LocaleList,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline2 -> f.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void f.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline2.m(android.content.res.Configuration,android.os.LocaleList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.e$m:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1:1:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline0 -> f.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int f.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline1 -> f.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void f.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline1.m(android.content.res.Configuration,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.e$n:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0:0 -> b
    1:1:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback):0:0 -> onWindowStartingActionMode
    2:2:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.e$o:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    android.os.PowerManager mPowerManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:android.content.IntentFilter createIntentFilterForBroadcastReceiver():0:0 -> b
    1:1:int getApplyableNightMode():0:0 -> c
    1:1:void onChange():0:0 -> d
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.e$p:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    android.content.BroadcastReceiver mReceiver -> a
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:void cleanup():0:0 -> a
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    int getApplyableNightMode() -> c
    void onChange() -> d
    1:1:void setup():0:0 -> e
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.e$p$a:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e$p;"}
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.e$q:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.TwilightManager mTwilightManager -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/j;"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:android.content.IntentFilter createIntentFilterForBroadcastReceiver():0:0 -> b
    1:1:int getApplyableNightMode():0:0 -> c
    1:1:void onChange():0:0 -> d
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.e$r:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1:1:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.e$s:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:boolean isOutOfBounds(int,int):0:0 -> c
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.e$t:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    int featureId -> a
    int background -> b
    int gravity -> c
    int x -> d
    int y -> e
    int windowAnimations -> f
    android.view.ViewGroup decorView -> g
    android.view.View shownPanelView -> h
    android.view.View createdPanelView -> i
    androidx.appcompat.view.menu.MenuBuilder menu -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/c;"}
    android.content.Context listPresenterContext -> l
    boolean isPrepared -> m
    boolean isHandled -> n
    boolean isOpen -> o
    boolean qwertyMode -> p
    boolean refreshDecorView -> q
    boolean refreshMenuContent -> r
    android.os.Bundle frozenActionViewState -> s
    1:1:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;)Landroidx/appcompat/view/menu/k;"}
    1:1:boolean hasPanelItems():0:0 -> b
    1:1:void setMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:void setStyle(android.content.Context):0:0 -> d
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.e$u:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/e;"}
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)Z"}
androidx.appcompat.app.AppCompatDialog -> f.h:
# {"id":"sourceFile","fileName":"AppCompatDialog.java"}
    androidx.appcompat.app.AppCompatDelegate mDelegate -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/d;"}
    androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/s$a;"}
    1:30:void <init>(android.content.Context,int):0:0 -> <init>
    1:13:androidx.appcompat.app.AppCompatDelegate getDelegate():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/d;"}
    1:8:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addContentView
    3:20:int getThemeResId(android.content.Context,int):0:0 -> b
    1:5:boolean superDispatchKeyEvent(android.view.KeyEvent):0:0 -> c
    1:9:boolean supportRequestWindowFeature(int):0:0 -> d
    1:11:void dismiss():0:0 -> dismiss
    1:15:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:2:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b$a;)Lj/b;"}
    1:9:android.view.View findViewById(int):0:0 -> findViewById
    1:8:void invalidateOptionsMenu():0:0 -> invalidateOptionsMenu
    1:1:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:18:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:11:void onStop():0:0 -> onStop
    1:1:void setContentView(int):0:0 -> setContentView
    2:2:void setContentView(android.view.View):0:0 -> setContentView
    3:3:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> setContentView
    1:1:void setTitle(int):0:0 -> setTitle
    2:2:void setTitle(java.lang.CharSequence):0:0 -> setTitle
androidx.appcompat.app.AppCompatDialog$1 -> f.h$a:
# {"id":"sourceFile","fileName":"AppCompatDialog.java"}
    androidx.appcompat.app.AppCompatDialog this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/h;"}
    1:6:void <init>(androidx.appcompat.app.AppCompatDialog):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/h;)V"}
    1:7:boolean superDispatchKeyEvent(android.view.KeyEvent):0:0 -> i
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.f:
# {"id":"sourceFile","fileName":"AppCompatViewInflater.java"}
    java.lang.Object[] mConstructorArgs -> a
    java.lang.Class[] sConstructorSignature -> b
    int[] sOnClickAttrs -> c
    int[] sAccessibilityHeading -> d
    int[] sAccessibilityPaneTitle -> e
    int[] sScreenReaderFocusable -> f
    java.lang.String[] sClassPrefixList -> g
    androidx.collection.SimpleArrayMap sConstructorMap -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    1:1:void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet):0:0 -> a
    1:1:void checkOnClickListener(android.view.View,android.util.AttributeSet):0:0 -> b
    1:1:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/f;"}
    1:1:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/h;"}
    1:1:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/i;"}
    1:1:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/j;"}
    1:1:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/n;"}
    1:1:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/r;"}
    1:1:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/u;"}
    1:1:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/v;"}
    1:1:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/y;"}
    1:1:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/z;"}
    1:1:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/B;"}
    1:1:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/D;"}
    1:1:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/Y;"}
    1:1:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Landroidx/appcompat/widget/n0;"}
    1:1:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet):0:0 -> q
    1:1:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0:0 -> r
    1:1:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String):0:0 -> s
    1:1:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet):0:0 -> t
    1:1:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0:0 -> u
    1:1:void verifyNotNull(android.view.View,java.lang.String):0:0 -> v
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.f$a:
# {"id":"sourceFile","fileName":"AppCompatViewInflater.java"}
    android.view.View mHostView -> b
    java.lang.String mMethodName -> c
    java.lang.reflect.Method mResolvedMethod -> d
    android.content.Context mResolvedContext -> e
    1:1:void resolveMethod(android.content.Context):0:0 -> a
androidx.appcompat.app.LayoutIncludeDetector -> androidx.appcompat.app.g:
# {"id":"sourceFile","fileName":"LayoutIncludeDetector.java"}
    java.util.Deque mXmlParserStack -> a
    1:1:boolean detect(android.util.AttributeSet):0:0 -> a
    1:1:boolean isParserOutdated(org.xmlpull.v1.XmlPullParser):0:0 -> b
    1:1:org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque):0:0 -> c
    1:1:boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser):0:0 -> d
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.h:
# {"id":"sourceFile","fileName":"ResourcesFlusher.java"}
    java.lang.reflect.Field sDrawableCacheField -> a
    boolean sDrawableCacheFieldFetched -> b
    java.lang.Class sThemedResourceCacheClazz -> c
    boolean sThemedResourceCacheClazzFetched -> d
    java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField -> e
    boolean sThemedResourceCache_mUnthemedEntriesFieldFetched -> f
    java.lang.reflect.Field sResourcesImplField -> g
    boolean sResourcesImplFieldFetched -> h
    1:1:void flush(android.content.res.Resources):0:0 -> a
    1:1:void flushLollipops(android.content.res.Resources):0:0 -> b
    1:1:void flushMarshmallows(android.content.res.Resources):0:0 -> c
    1:1:void flushNougats(android.content.res.Resources):0:0 -> d
    1:1:void flushThemedResourcesCache(java.lang.Object):0:0 -> e
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.i:
# {"id":"sourceFile","fileName":"TwilightCalculator.java"}
    long sunset -> a
    long sunrise -> b
    int state -> c
    androidx.appcompat.app.TwilightCalculator sInstance -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/i;"}
    1:1:void calculateTwilight(long,double,double):0:0 -> a
    1:1:androidx.appcompat.app.TwilightCalculator getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/app/i;"}
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.j:
# {"id":"sourceFile","fileName":"TwilightManager.java"}
    android.content.Context mContext -> a
    android.location.LocationManager mLocationManager -> b
    androidx.appcompat.app.TwilightManager$TwilightState mTwilightState -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/j$a;"}
    androidx.appcompat.app.TwilightManager sInstance -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/j;"}
    1:1:androidx.appcompat.app.TwilightManager getInstance(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/appcompat/app/j;"}
    1:1:android.location.Location getLastKnownLocation():0:0 -> b
    1:1:android.location.Location getLastKnownLocationForProvider(java.lang.String):0:0 -> c
    1:1:boolean isNight():0:0 -> d
    1:1:boolean isStateValid():0:0 -> e
    1:1:void updateState(android.location.Location):0:0 -> f
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.j$a:
# {"id":"sourceFile","fileName":"TwilightManager.java"}
    boolean isNight -> a
    long yesterdaySunset -> b
    long todaySunrise -> c
    long todaySunset -> d
    long tomorrowSunrise -> e
    long nextUpdate -> f
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.k:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    androidx.core.view.ViewPropertyAnimatorListener mHideListener -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/f0;"}
    androidx.core.view.ViewPropertyAnimatorListener mShowListener -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/f0;"}
    androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/h0;"}
    android.view.animation.Interpolator sHideInterpolator -> D
    android.view.animation.Interpolator sShowInterpolator -> E
    android.content.Context mContext -> a
    android.content.Context mThemedContext -> b
    android.app.Activity mActivity -> c
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout -> d
    androidx.appcompat.widget.ActionBarContainer mContainerView -> e
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p0;"}
    androidx.appcompat.widget.ActionBarContextView mContextView -> g
    android.view.View mContentView -> h
    java.util.ArrayList mTabs -> i
    int mSavedTabPosition -> j
    boolean mDisplayHomeAsUpSet -> k
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/k$d;"}
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b;"}
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b$a;"}
    boolean mLastMenuVisibility -> o
    java.util.ArrayList mMenuVisibilityListeners -> p
    boolean mHasEmbeddedTabs -> q
    int mCurWindowVisibility -> r
    boolean mContentAnimations -> s
    boolean mHiddenByApp -> t
    boolean mHiddenBySystem -> u
    boolean mShowingForMode -> v
    boolean mNowShowing -> w
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/h;"}
    boolean mShowHideAnimationEnabled -> y
    boolean mHideOnContentScroll -> z
    1:1:void <init>(android.app.Activity,boolean):0:0 -> <init>
    2:2:void <init>(android.app.Dialog):0:0 -> <init>
    1:1:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/appcompat/widget/p0;"}
    1:1:int getNavigationMode():0:0 -> B
    1:1:void hideForActionMode():0:0 -> C
    1:1:void init(android.view.View):0:0 -> D
    1:1:void setDisplayHomeAsUpEnabled(boolean):0:0 -> E
    1:1:void setDisplayOptions(int,int):0:0 -> F
    1:1:void setElevation(float):0:0 -> G
    1:1:void setHasEmbeddedTabs(boolean):0:0 -> H
    1:1:void setHideOnContentScrollEnabled(boolean):0:0 -> I
    1:1:void setHomeButtonEnabled(boolean):0:0 -> J
    1:1:boolean shouldAnimateContextView():0:0 -> K
    1:1:void showForActionMode():0:0 -> L
    1:1:void updateVisibility(boolean):0:0 -> M
    1:1:void onContentScrollStarted():0:0 -> a
    1:1:void enableContentAnimations(boolean):0:0 -> b
    1:1:void onWindowVisibilityChanged(int):0:0 -> c
    1:1:void hideForSystem():0:0 -> d
    1:1:void showForSystem():0:0 -> e
    1:1:void onContentScrollStopped():0:0 -> f
    1:1:boolean collapseActionView():0:0 -> h
    1:1:void dispatchMenuVisibilityChanged(boolean):0:0 -> i
    1:1:int getDisplayOptions():0:0 -> j
    1:1:android.content.Context getThemedContext():0:0 -> k
    1:1:void onConfigurationChanged(android.content.res.Configuration):0:0 -> m
    1:1:boolean onKeyShortcut(int,android.view.KeyEvent):0:0 -> o
    1:1:void setDefaultDisplayHomeAsUpEnabled(boolean):0:0 -> r
    1:1:void setShowHideAnimationEnabled(boolean):0:0 -> s
    1:1:void setWindowTitle(java.lang.CharSequence):0:0 -> t
    1:52:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b$a;)Lj/b;"}
    1:1:void animateToMode(boolean):0:0 -> v
    1:1:boolean checkShowingFlags(boolean,boolean,boolean):0:0 -> w
    1:1:void completeDeferredDestroyActionMode():0:0 -> x
    1:1:void doHide(boolean):0:0 -> y
    1:1:void doShow(boolean):0:0 -> z
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.k$a:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/k;"}
    1:1:void onAnimationEnd(android.view.View):0:0 -> a
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.k$b:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/k;"}
    1:1:void onAnimationEnd(android.view.View):0:0 -> a
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.k$c:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/k;"}
    1:1:void onAnimationUpdate(android.view.View):0:0 -> a
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.k$d:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    android.content.Context mActionModeContext -> d
    androidx.appcompat.view.menu.MenuBuilder mMenu -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.ActionMode$Callback mCallback -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b$a;"}
    java.lang.ref.WeakReference mCustomView -> g
    androidx.appcompat.app.WindowDecorActionBar this$0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/k;"}
    1:25:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/k;Landroid/content/Context;Lj/b$a;)V"}
    1:1:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)Z"}
    1:1:void finish():0:0 -> c
    1:1:android.view.View getCustomView():0:0 -> d
    1:1:android.view.Menu getMenu():0:0 -> e
    1:1:android.view.MenuInflater getMenuInflater():0:0 -> f
    1:1:java.lang.CharSequence getSubtitle():0:0 -> g
    1:1:java.lang.CharSequence getTitle():0:0 -> i
    1:1:void invalidate():0:0 -> k
    1:1:boolean isTitleOptional():0:0 -> l
    1:1:void setCustomView(android.view.View):0:0 -> m
    1:1:void setSubtitle(int):0:0 -> n
    1:1:void setSubtitle(java.lang.CharSequence):0:0 -> o
    1:1:void setTitle(int):0:0 -> q
    1:1:void setTitle(java.lang.CharSequence):0:0 -> r
    1:1:void setTitleOptionalHint(boolean):0:0 -> s
    1:1:boolean dispatchOnCreate():0:0 -> t
androidx.appcompat.content.res.AppCompatResources -> g.a:
# {"id":"sourceFile","fileName":"AppCompatResources.java"}
    1:5:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0:0 -> a
    1:9:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> b
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> h.a:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/a$c;"}
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/a$g;"}
    int mTransitionToIndex -> r
    int mTransitionFromIndex -> s
    boolean mMutated -> t
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a$c;Landroid/content/res/Resources;)V"}
    1:4:void applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    1:5:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh/b$d;"}
    1:5:boolean canApplyTheme():0:0 -> canApplyTheme
    1:4:void draw(android.graphics.Canvas):0:0 -> draw
    1:5:int getAlpha():0:0 -> getAlpha
    1:5:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:5:android.graphics.drawable.Drawable getCurrent():0:0 -> getCurrent
    1:4:void getHotspotBounds(android.graphics.Rect):0:0 -> getHotspotBounds
    1:5:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:5:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:5:int getMinimumHeight():0:0 -> getMinimumHeight
    1:5:int getMinimumWidth():0:0 -> getMinimumWidth
    1:5:int getOpacity():0:0 -> getOpacity
    1:4:void getOutline(android.graphics.Outline):0:0 -> getOutline
    1:5:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    1:12:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b$d;)V"}
    1:4:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:5:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:2:boolean isStateful():0:0 -> isStateful
    1:24:void jumpToCurrentState():0:0 -> jumpToCurrentState
    1:9:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh/a$c;"}
    1:57:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Lh/a;"}
    1:32:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> m
    1:19:android.graphics.drawable.Drawable mutate():0:0 -> mutate
    1:61:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> n
    1:8:void init():0:0 -> o
    1:5:boolean onLayoutDirectionChanged(int):0:0 -> onLayoutDirectionChanged
    1:39:boolean onStateChange(int[]):0:0 -> onStateChange
    1:148:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> p
    1:187:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> q
    1:132:boolean selectTransition(int):0:0 -> r
    1:73:void updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> s
    1:4:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:4:void setAlpha(int):0:0 -> setAlpha
    1:4:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    1:4:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:4:void setDither(boolean):0:0 -> setDither
    1:4:void setHotspot(float,float):0:0 -> setHotspot
    1:4:void setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:4:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:4:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:22:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:4:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1 -> h.a$a:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> h.a$b:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    android.graphics.drawable.Animatable mA -> a
    2:7:void <init>(android.graphics.drawable.Animatable):0:0 -> <init>
    1:6:void start():0:0 -> c
    1:6:void stop():0:0 -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> h.a$c:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    androidx.collection.LongSparseArray mTransitions -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    androidx.collection.SparseArrayCompat mStateIds -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/h;"}
    1:28:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a$c;Lh/a;Landroid/content/res/Resources;)V"}
    1:14:int addStateSet(int[],android.graphics.drawable.Drawable,int):0:0 -> B
    1:53:int addTransition(int,int,android.graphics.drawable.Drawable,boolean):0:0 -> C
    1:7:long generateTransitionKey(int,int):0:0 -> D
    5:21:int getKeyframeIdAt(int):0:0 -> E
    1:14:int indexOfKeyframe(int[]):0:0 -> F
    1:24:int indexOfTransition(int,int):0:0 -> G
    1:38:boolean isTransitionReversed(int,int):0:0 -> H
    1:38:boolean transitionHasReversibleFlag(int,int):0:0 -> I
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
    1:17:void mutate():0:0 -> r
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> h.a$d:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/f;"}
    2:7:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/f;)V"}
    1:6:void start():0:0 -> c
    1:6:void stop():0:0 -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> h.a$e:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    android.animation.ObjectAnimator mAnim -> a
    boolean mHasReversibleFlag -> b
    2:55:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0:0 -> <init>
    1:3:boolean canReverse():0:0 -> a
    1:6:void reverse():0:0 -> b
    1:6:void start():0:0 -> c
    1:6:void stop():0:0 -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> h.a$f:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    int[] mFrameTimes -> a
    int mFrames -> b
    int mTotalDuration -> c
    1:7:void <init>(android.graphics.drawable.AnimationDrawable,boolean):0:0 -> <init>
    1:3:int getTotalDuration():0:0 -> a
    1:44:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean):0:0 -> b
    1:38:float getInterpolation(float):0:0 -> getInterpolation
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> h.a$g:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a$a;)V"}
    1:2:boolean canReverse():0:0 -> a
    1:1:void reverse():0:0 -> b
    void start() -> c
    void stop() -> d
androidx.appcompat.graphics.drawable.DrawableContainer -> h.b:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/b$d;"}
    android.graphics.Rect mHotspotBounds -> c
    android.graphics.drawable.Drawable mCurrDrawable -> d
    android.graphics.drawable.Drawable mLastDrawable -> e
    int mAlpha -> f
    boolean mHasAlpha -> g
    int mCurIndex -> h
    boolean mMutated -> i
    java.lang.Runnable mAnimationRunnable -> j
    long mEnterAnimationEnd -> k
    long mExitAnimationEnd -> l
    androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/b$c;"}
    1:11:void <init>():0:0 -> <init>
    2:113:void animate(boolean):0:0 -> a
    1:6:void applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh/b$d;"}
    1:3:int getCurrentIndex():0:0 -> c
    1:7:boolean canApplyTheme():0:0 -> canApplyTheme
    1:170:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> d
    1:15:void draw(android.graphics.Canvas):0:0 -> draw
    1:16:boolean needsMirroring():0:0 -> e
    4:14:int resolveDensity(android.content.res.Resources,int):0:0 -> f
    1:125:boolean selectDrawable(int):0:0 -> g
    1:3:int getAlpha():0:0 -> getAlpha
    1:12:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:21:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    1:3:android.graphics.drawable.Drawable getCurrent():0:0 -> getCurrent
    1:12:void getHotspotBounds(android.graphics.Rect):0:0 -> getHotspotBounds
    1:26:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:26:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:26:int getMinimumHeight():0:0 -> getMinimumHeight
    1:26:int getMinimumWidth():0:0 -> getMinimumWidth
    1:20:int getOpacity():0:0 -> getOpacity
    1:8:void getOutline(android.graphics.Outline):0:0 -> getOutline
    1:56:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    1:21:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b$d;)V"}
    1:6:void updateDensity(android.content.res.Resources):0:0 -> i
    1:25:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:5:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:59:void jumpToCurrentState():0:0 -> jumpToCurrentState
    1:24:android.graphics.drawable.Drawable mutate():0:0 -> mutate
    1:15:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    1:11:boolean onLayoutDirectionChanged(int):0:0 -> onLayoutDirectionChanged
    1:20:boolean onLevelChange(int):0:0 -> onLevelChange
    1:18:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:34:void setAlpha(int):0:0 -> setAlpha
    1:16:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    1:19:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:16:void setDither(boolean):0:0 -> setDither
    1:8:void setHotspot(float,float):0:0 -> setHotspot
    1:23:void setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:17:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:17:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:19:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:18:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> h.b$a:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    androidx.appcompat.graphics.drawable.DrawableContainer this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/b;"}
    1:6:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b;)V"}
    1:12:void run():0:0 -> run
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl -> h.b$b:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    1:5:boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState):0:0 -> a
    1:4:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline):0:0 -> b
    1:5:android.content.res.Resources getResources(android.content.res.Resources$Theme):0:0 -> c
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> h.b$c:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    android.graphics.drawable.Drawable$Callback mCallback -> b
    1:4:void <init>():0:0 -> <init>
    1:6:android.graphics.drawable.Drawable$Callback unwrap():0:0 -> a
    1:3:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable$Callback;)Lh/b$c;"}
    1:1:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:8:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:8:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> h.b$d:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    int mEnterFadeDuration -> A
    int mExitFadeDuration -> B
    boolean mAutoMirrored -> C
    android.graphics.ColorFilter mColorFilter -> D
    boolean mHasColorFilter -> E
    android.content.res.ColorStateList mTintList -> F
    android.graphics.PorterDuff$Mode mTintMode -> G
    boolean mHasTintList -> H
    boolean mHasTintMode -> I
    androidx.appcompat.graphics.drawable.DrawableContainer mOwner -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/b;"}
    android.content.res.Resources mSourceRes -> b
    int mDensity -> c
    int mChangingConfigurations -> d
    int mChildrenChangingConfigurations -> e
    android.util.SparseArray mDrawableFutures -> f
    android.graphics.drawable.Drawable[] mDrawables -> g
    int mNumChildren -> h
    boolean mVariablePadding -> i
    boolean mCheckedPadding -> j
    android.graphics.Rect mConstantPadding -> k
    boolean mConstantSize -> l
    boolean mCheckedConstantSize -> m
    int mConstantWidth -> n
    int mConstantHeight -> o
    int mConstantMinimumWidth -> p
    int mConstantMinimumHeight -> q
    boolean mCheckedOpacity -> r
    int mOpacity -> s
    boolean mCheckedStateful -> t
    boolean mStateful -> u
    boolean mCheckedConstantState -> v
    boolean mCanConstantState -> w
    boolean mDither -> x
    boolean mMutated -> y
    int mLayoutDirection -> z
    1:245:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b$d;Lh/b;Landroid/content/res/Resources;)V"}
    1:56:int addChild(android.graphics.drawable.Drawable):0:0 -> a
    3:49:void applyTheme(android.content.res.Resources$Theme):0:0 -> b
    1:38:boolean canConstantState():0:0 -> c
    1:41:boolean canApplyTheme():0:0 -> canApplyTheme
    2:68:void computeConstantSize():0:0 -> d
    1:46:void createAllFutures():0:0 -> e
    1:4:int getCapacity():0:0 -> f
    1:57:android.graphics.drawable.Drawable getChild(int):0:0 -> g
    1:6:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:3:int getChildCount():0:0 -> h
    1:10:int getConstantHeight():0:0 -> i
    1:10:int getConstantMinimumHeight():0:0 -> j
    1:10:int getConstantMinimumWidth():0:0 -> k
    1:88:android.graphics.Rect getConstantPadding():0:0 -> l
    1:10:int getConstantWidth():0:0 -> m
    1:47:int getOpacity():0:0 -> n
    1:13:void growArray(int,int):0:0 -> o
    2:6:void invalidateCache():0:0 -> p
    1:3:boolean isConstantSize():0:0 -> q
    void mutate() -> r
    1:21:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable):0:0 -> s
    1:3:void setConstantSize(boolean):0:0 -> t
    1:3:void setEnterFadeDuration(int):0:0 -> u
    1:3:void setExitFadeDuration(int):0:0 -> v
    1:34:boolean setLayoutDirection(int,int):0:0 -> w
    1:3:void setVariablePadding(boolean):0:0 -> x
    3:22:void updateDensity(android.content.res.Resources):0:0 -> y
androidx.appcompat.graphics.drawable.DrawableWrapper -> h.c:
# {"id":"sourceFile","fileName":"DrawableWrapper.java"}
    android.graphics.drawable.Drawable mDrawable -> b
    1:7:void <init>(android.graphics.drawable.Drawable):0:0 -> <init>
    1:3:android.graphics.drawable.Drawable getWrappedDrawable():0:0 -> a
    1:16:void setWrappedDrawable(android.graphics.drawable.Drawable):0:0 -> b
    1:6:void draw(android.graphics.Canvas):0:0 -> draw
    1:7:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:7:android.graphics.drawable.Drawable getCurrent():0:0 -> getCurrent
    1:7:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:7:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:7:int getMinimumHeight():0:0 -> getMinimumHeight
    1:7:int getMinimumWidth():0:0 -> getMinimumWidth
    1:7:int getOpacity():0:0 -> getOpacity
    1:7:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    1:7:int[] getState():0:0 -> getState
    1:7:android.graphics.Region getTransparentRegion():0:0 -> getTransparentRegion
    1:4:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:7:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:7:boolean isStateful():0:0 -> isStateful
    1:6:void jumpToCurrentState():0:0 -> jumpToCurrentState
    1:6:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    1:7:boolean onLevelChange(int):0:0 -> onLevelChange
    1:4:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:6:void setAlpha(int):0:0 -> setAlpha
    1:6:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    1:6:void setChangingConfigurations(int):0:0 -> setChangingConfigurations
    1:6:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:6:void setDither(boolean):0:0 -> setDither
    1:6:void setFilterBitmap(boolean):0:0 -> setFilterBitmap
    1:6:void setHotspot(float,float):0:0 -> setHotspot
    1:6:void setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:7:boolean setState(int[]):0:0 -> setState
    1:6:void setTint(int):0:0 -> setTint
    1:6:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:6:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:19:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:4:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
androidx.appcompat.graphics.drawable.StateListDrawable -> h.d:
# {"id":"sourceFile","fileName":"StateListDrawable.java"}
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/d$a;"}
    boolean mMutated -> o
    1:9:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d$a;)V"}
    1:11:void applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    1:12:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b$d;)V"}
    1:48:int[] extractStateSet(android.util.AttributeSet):0:0 -> j
    1:19:android.graphics.drawable.Drawable mutate():0:0 -> mutate
    boolean onStateChange(int[]) -> onStateChange
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> h.d$a:
# {"id":"sourceFile","fileName":"StateListDrawable.java"}
    int[][] mStateSets -> J
    1:19:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d$a;Lh/d;Landroid/content/res/Resources;)V"}
    1:23:int indexOfStateSet(int[]):0:0 -> A
    1:14:void growArray(int,int):0:0 -> o
    void mutate() -> r
    1:9:int addStateSet(int[],android.graphics.drawable.Drawable):0:0 -> z
androidx.appcompat.resources.Compatibility$Api15Impl -> i.a:
# {"id":"sourceFile","fileName":"Compatibility.java"}
    1:4:void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean):0:0 -> a
androidx.appcompat.resources.Compatibility$Api18Impl -> i.b:
# {"id":"sourceFile","fileName":"Compatibility.java"}
    1:4:void setAutoCancel(android.animation.ObjectAnimator,boolean):0:0 -> a
androidx.appcompat.resources.Compatibility$Api21Impl -> i.c:
# {"id":"sourceFile","fileName":"Compatibility.java"}
    1:5:android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    1:5:int getChangingConfigurations(android.content.res.TypedArray):0:0 -> b
    1:4:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> c
androidx.appcompat.resources.R$drawable -> i.d:
    int abc_vector_test -> a
androidx.appcompat.resources.R$styleable -> i.e:
    int[] AnimatedStateListDrawableCompat -> a
    int AnimatedStateListDrawableCompat_android_dither -> b
    int AnimatedStateListDrawableCompat_android_visible -> c
    int AnimatedStateListDrawableCompat_android_variablePadding -> d
    int AnimatedStateListDrawableCompat_android_constantSize -> e
    int AnimatedStateListDrawableCompat_android_enterFadeDuration -> f
    int AnimatedStateListDrawableCompat_android_exitFadeDuration -> g
    int[] AnimatedStateListDrawableItem -> h
    int AnimatedStateListDrawableItem_android_id -> i
    int AnimatedStateListDrawableItem_android_drawable -> j
    int[] AnimatedStateListDrawableTransition -> k
    int AnimatedStateListDrawableTransition_android_drawable -> l
    int AnimatedStateListDrawableTransition_android_toId -> m
    int AnimatedStateListDrawableTransition_android_fromId -> n
    int AnimatedStateListDrawableTransition_android_reversible -> o
    int[] StateListDrawable -> p
    int[] StateListDrawableItem -> q
    2:50:void <clinit>():0:0 -> <clinit>
androidx.appcompat.view.ActionBarPolicy -> j.a:
# {"id":"sourceFile","fileName":"ActionBarPolicy.java"}
    android.content.Context mContext -> a
    1:6:void <init>(android.content.Context):0:0 -> <init>
    1:16:boolean enableHomeButtonByDefault():0:0 -> a
    1:6:androidx.appcompat.view.ActionBarPolicy get(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj/a;"}
    1:15:int getEmbeddedMenuWidthLimit():0:0 -> c
    1:64:int getMaxActionButtons():0:0 -> d
    1:13:boolean hasEmbeddedTabs():0:0 -> e
    1:2:boolean showsOverflowMenuButton():0:0 -> f
androidx.appcompat.view.ActionMode -> j.b:
# {"id":"sourceFile","fileName":"ActionMode.java"}
    java.lang.Object mTag -> b
    boolean mTitleOptionalHint -> c
    1:4:void <init>():0:0 -> <init>
    void finish() -> c
    android.view.View getCustomView() -> d
    android.view.Menu getMenu() -> e
    android.view.MenuInflater getMenuInflater() -> f
    java.lang.CharSequence getSubtitle() -> g
    1:3:java.lang.Object getTag():0:0 -> h
    java.lang.CharSequence getTitle() -> i
    1:3:boolean getTitleOptionalHint():0:0 -> j
    void invalidate() -> k
    boolean isTitleOptional() -> l
    void setCustomView(android.view.View) -> m
    void setSubtitle(int) -> n
    void setSubtitle(java.lang.CharSequence) -> o
    1:3:void setTag(java.lang.Object):0:0 -> p
    void setTitle(int) -> q
    void setTitle(java.lang.CharSequence) -> r
    1:3:void setTitleOptionalHint(boolean):0:0 -> s
androidx.appcompat.view.ActionMode$Callback -> j.b$a:
# {"id":"sourceFile","fileName":"ActionMode.java"}
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/MenuItem;)Z"}
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/Menu;)Z"}
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/Menu;)Z"}
androidx.appcompat.view.CollapsibleActionView -> j.c:
# {"id":"sourceFile","fileName":"CollapsibleActionView.java"}
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> d
androidx.appcompat.view.ContextThemeWrapper -> j.d:
# {"id":"sourceFile","fileName":"ContextThemeWrapper.java"}
    int mThemeResource -> a
    android.content.res.Resources$Theme mTheme -> b
    android.view.LayoutInflater mInflater -> c
    android.content.res.Configuration mOverrideConfiguration -> d
    android.content.res.Resources mResources -> e
    1:1:void <init>(android.content.Context,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.content.res.Resources$Theme):0:0 -> <init>
    1:32:void applyOverrideConfiguration(android.content.res.Configuration):0:0 -> a
    1:4:void attachBaseContext(android.content.Context):0:0 -> attachBaseContext
    1:27:android.content.res.Resources getResourcesInternal():0:0 -> b
    1:3:int getThemeResId():0:0 -> c
    1:42:void initializeTheme():0:0 -> d
    2:5:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean):0:0 -> e
    1:9:android.content.res.AssetManager getAssets():0:0 -> getAssets
    1:5:android.content.res.Resources getResources():0:0 -> getResources
    1:38:java.lang.Object getSystemService(java.lang.String):0:0 -> getSystemService
    1:19:android.content.res.Resources$Theme getTheme():0:0 -> getTheme
    1:10:void setTheme(int):0:0 -> setTheme
androidx.appcompat.view.StandaloneActionMode -> j.e:
# {"id":"sourceFile","fileName":"StandaloneActionMode.java"}
    android.content.Context mContext -> d
    androidx.appcompat.widget.ActionBarContextView mContextView -> e
    androidx.appcompat.view.ActionMode$Callback mCallback -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b$a;"}
    java.lang.ref.WeakReference mCustomView -> g
    boolean mFinished -> h
    boolean mFocusable -> i
    androidx.appcompat.view.menu.MenuBuilder mMenu -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    1:31:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/widget/ActionBarContextView;Lj/b$a;Z)V"}
    1:9:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:7:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)Z"}
    1:14:void finish():0:0 -> c
    1:13:android.view.View getCustomView():0:0 -> d
    1:3:android.view.Menu getMenu():0:0 -> e
    1:12:android.view.MenuInflater getMenuInflater():0:0 -> f
    1:7:java.lang.CharSequence getSubtitle():0:0 -> g
    1:7:java.lang.CharSequence getTitle():0:0 -> i
    1:8:void invalidate():0:0 -> k
    1:7:boolean isTitleOptional():0:0 -> l
    1:17:void setCustomView(android.view.View):0:0 -> m
    1:10:void setSubtitle(int):0:0 -> n
    1:6:void setSubtitle(java.lang.CharSequence):0:0 -> o
    1:10:void setTitle(int):0:0 -> q
    1:6:void setTitle(java.lang.CharSequence):0:0 -> r
    1:9:void setTitleOptionalHint(boolean):0:0 -> s
androidx.appcompat.view.SupportActionModeWrapper -> j.f:
# {"id":"sourceFile","fileName":"SupportActionModeWrapper.java"}
    android.content.Context mContext -> a
    androidx.appcompat.view.ActionMode mWrappedObject -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b;"}
    1:8:void <init>(android.content.Context,androidx.appcompat.view.ActionMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj/b;)V"}
    1:6:void finish():0:0 -> finish
    1:7:android.view.View getCustomView():0:0 -> getCustomView
    1:16:android.view.Menu getMenu():0:0 -> getMenu
    1:7:android.view.MenuInflater getMenuInflater():0:0 -> getMenuInflater
    1:7:java.lang.CharSequence getSubtitle():0:0 -> getSubtitle
    1:7:java.lang.Object getTag():0:0 -> getTag
    1:7:java.lang.CharSequence getTitle():0:0 -> getTitle
    1:7:boolean getTitleOptionalHint():0:0 -> getTitleOptionalHint
    1:6:void invalidate():0:0 -> invalidate
    1:7:boolean isTitleOptional():0:0 -> isTitleOptional
    1:6:void setCustomView(android.view.View):0:0 -> setCustomView
    1:1:void setSubtitle(int):0:0 -> setSubtitle
    2:2:void setSubtitle(java.lang.CharSequence):0:0 -> setSubtitle
    1:6:void setTag(java.lang.Object):0:0 -> setTag
    1:1:void setTitle(int):0:0 -> setTitle
    2:2:void setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:6:void setTitleOptionalHint(boolean):0:0 -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> j.f$a:
# {"id":"sourceFile","fileName":"SupportActionModeWrapper.java"}
    android.view.ActionMode$Callback mWrappedCallback -> a
    android.content.Context mContext -> b
    java.util.ArrayList mActionModes -> c
    androidx.collection.SimpleArrayMap mMenus -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    1:22:void <init>(android.content.Context,android.view.ActionMode$Callback):0:0 -> <init>
    1:20:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/MenuItem;)Z"}
    1:10:void onDestroyActionMode(androidx.appcompat.view.ActionMode):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:15:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/Menu;)Z"}
    1:15:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Landroid/view/Menu;)Z"}
    1:40:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)Landroid/view/ActionMode;"}
    1:26:android.view.Menu getMenuWrapper(android.view.Menu):0:0 -> f
androidx.appcompat.view.SupportMenuInflater -> j.g:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.Object mRealOwner -> d
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> e
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> f
    2:13:void <clinit>():0:0 -> <clinit>
    1:16:void <init>(android.content.Context):0:0 -> <init>
    1:20:java.lang.Object findRealOwner(java.lang.Object):0:0 -> a
    1:15:java.lang.Object getRealOwner():0:0 -> b
    1:199:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> c
    1:58:void inflate(int,android.view.Menu):0:0 -> inflate
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> j.g$a:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    java.lang.Object mRealOwner -> a
    java.lang.reflect.Method mMethod -> b
    java.lang.Class[] PARAM_TYPES -> c
    2:11:void <clinit>():0:0 -> <clinit>
    1:57:void <init>(java.lang.Object,java.lang.String):0:0 -> <init>
    3:51:boolean onMenuItemClick(android.view.MenuItem):0:0 -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> j.g$b:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    androidx.core.view.ActionProvider itemActionProvider -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/b;"}
    java.lang.CharSequence itemContentDescription -> B
    java.lang.CharSequence itemTooltipText -> C
    android.content.res.ColorStateList itemIconTintList -> D
    android.graphics.PorterDuff$Mode itemIconTintMode -> E
    androidx.appcompat.view.SupportMenuInflater this$0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/g;"}
    android.view.Menu menu -> a
    int groupId -> b
    int groupCategory -> c
    int groupOrder -> d
    int groupCheckable -> e
    boolean groupVisible -> f
    boolean groupEnabled -> g
    boolean itemAdded -> h
    int itemId -> i
    int itemCategoryOrder -> j
    java.lang.CharSequence itemTitle -> k
    java.lang.CharSequence itemTitleCondensed -> l
    int itemIconResId -> m
    char itemAlphabeticShortcut -> n
    int itemAlphabeticModifiers -> o
    char itemNumericShortcut -> p
    int itemNumericModifiers -> q
    int itemCheckable -> r
    boolean itemChecked -> s
    boolean itemVisible -> t
    boolean itemEnabled -> u
    int itemShowAsAction -> v
    int itemActionViewLayout -> w
    java.lang.String itemActionViewClassName -> x
    java.lang.String itemActionProviderClassName -> y
    java.lang.String itemListenerMethodName -> z
    1:16:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/g;Landroid/view/Menu;)V"}
    2:21:void addItem():0:0 -> a
    2:25:android.view.SubMenu addSubMenuItem():0:0 -> b
    5:9:char getShortcut(java.lang.String):0:0 -> c
    1:3:boolean hasAddedItem():0:0 -> d
    1:51:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]):0:0 -> e
    1:64:void readGroup(android.util.AttributeSet):0:0 -> f
    1:308:void readItem(android.util.AttributeSet):0:0 -> g
    2:15:void resetGroup():0:0 -> h
    1:197:void setItem(android.view.MenuItem):0:0 -> i
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> j.h:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompatSet.java"}
    java.util.ArrayList mAnimators -> a
    long mDuration -> b
    android.view.animation.Interpolator mInterpolator -> c
    androidx.core.view.ViewPropertyAnimatorListener mListener -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/f0;"}
    boolean mIsStarted -> e
    androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/g0;"}
    1:22:void <init>():0:0 -> <init>
    1:31:void cancel():0:0 -> a
    2:4:void onAnimationsEnded():0:0 -> b
    1:10:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/e0;)Lj/h;"}
    1:18:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/e0;Landroidx/core/view/e0;)Lj/h;"}
    1:7:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lj/h;"}
    1:7:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/animation/Interpolator;)Lj/h;"}
    1:7:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/f0;)Lj/h;"}
    1:58:void start():0:0 -> h
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> j.h$a:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompatSet.java"}
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/h;"}
    1:11:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;)V"}
    1:30:void onAnimationEnd(android.view.View):0:0 -> a
    1:19:void onAnimationStart(android.view.View):0:0 -> b
    2:11:void onEnd():0:0 -> d
androidx.appcompat.view.WindowCallbackWrapper -> j.m:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    android.view.Window$Callback mWrapped -> b
    1:16:void <init>(android.view.Window$Callback):0:0 -> <init>
    1:3:android.view.Window$Callback getWrapped():0:0 -> a
    1:7:boolean dispatchGenericMotionEvent(android.view.MotionEvent):0:0 -> dispatchGenericMotionEvent
    1:7:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:7:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:7:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> dispatchPopulateAccessibilityEvent
    1:7:boolean dispatchTouchEvent(android.view.MotionEvent):0:0 -> dispatchTouchEvent
    1:7:boolean dispatchTrackballEvent(android.view.MotionEvent):0:0 -> dispatchTrackballEvent
    1:6:void onActionModeFinished(android.view.ActionMode):0:0 -> onActionModeFinished
    1:6:void onActionModeStarted(android.view.ActionMode):0:0 -> onActionModeStarted
    1:6:void onAttachedToWindow():0:0 -> onAttachedToWindow
    1:7:boolean onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:7:android.view.View onCreatePanelView(int):0:0 -> onCreatePanelView
    1:6:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    1:7:boolean onMenuItemSelected(int,android.view.MenuItem):0:0 -> onMenuItemSelected
    1:7:boolean onMenuOpened(int,android.view.Menu):0:0 -> onMenuOpened
    1:6:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:6:void onPointerCaptureChanged(boolean):0:0 -> onPointerCaptureChanged
    1:7:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    1:6:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int):0:0 -> onProvideKeyboardShortcuts
    1:1:boolean onSearchRequested():0:0 -> onSearchRequested
    2:2:boolean onSearchRequested(android.view.SearchEvent):0:0 -> onSearchRequested
    1:6:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams):0:0 -> onWindowAttributesChanged
    1:6:void onWindowFocusChanged(boolean):0:0 -> onWindowFocusChanged
    1:1:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback):0:0 -> onWindowStartingActionMode
    2:2:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline0 -> j.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void j.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline0.m(android.view.Window$Callback,java.util.List,android.view.Menu,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.view.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline1 -> j.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void j.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline1.m(android.view.Window$Callback,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.view.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline2 -> j.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean j.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline2.m(android.view.Window$Callback,android.view.SearchEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.view.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline3 -> j.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ActionMode j.WindowCallbackWrapper$$ExternalSyntheticApiModelOutline3.m(android.view.Window$Callback,android.view.ActionMode$Callback,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.view.menu.ActionMenuItem -> k.a:
# {"id":"sourceFile","fileName":"ActionMenuItem.java"}
    int mId -> a
    int mGroup -> b
    int mOrdering -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    android.content.Intent mIntent -> f
    char mShortcutNumericChar -> g
    int mShortcutNumericModifiers -> h
    char mShortcutAlphabeticChar -> i
    int mShortcutAlphabeticModifiers -> j
    android.graphics.drawable.Drawable mIconDrawable -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    java.lang.CharSequence mContentDescription -> n
    java.lang.CharSequence mTooltipText -> o
    android.content.res.ColorStateList mIconTintList -> p
    android.graphics.PorterDuff$Mode mIconTintMode -> q
    boolean mHasIconTint -> r
    boolean mHasIconTintMode -> s
    int mFlags -> t
    1:1:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence):0:0 -> <init>
    1:2:androidx.core.view.ActionProvider getSupportActionProvider():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:6:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/b;)Lu/b;"}
    1:45:void applyIconTint():0:0 -> c
    1:2:boolean collapseActionView():0:0 -> collapseActionView
    1:6:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lu/b;"}
    1:6:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Lu/b;"}
    1:2:boolean expandActionView():0:0 -> expandActionView
    1:4:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lu/b;"}
    1:6:android.view.ActionProvider getActionProvider():0:0 -> getActionProvider
    1:2:android.view.View getActionView():0:0 -> getActionView
    1:3:int getAlphabeticModifiers():0:0 -> getAlphabeticModifiers
    1:3:char getAlphabeticShortcut():0:0 -> getAlphabeticShortcut
    1:3:java.lang.CharSequence getContentDescription():0:0 -> getContentDescription
    1:3:int getGroupId():0:0 -> getGroupId
    1:3:android.graphics.drawable.Drawable getIcon():0:0 -> getIcon
    1:3:android.content.res.ColorStateList getIconTintList():0:0 -> getIconTintList
    1:3:android.graphics.PorterDuff$Mode getIconTintMode():0:0 -> getIconTintMode
    1:3:android.content.Intent getIntent():0:0 -> getIntent
    1:3:int getItemId():0:0 -> getItemId
    1:2:android.view.ContextMenu$ContextMenuInfo getMenuInfo():0:0 -> getMenuInfo
    1:3:int getNumericModifiers():0:0 -> getNumericModifiers
    1:3:char getNumericShortcut():0:0 -> getNumericShortcut
    1:3:int getOrder():0:0 -> getOrder
    1:2:android.view.SubMenu getSubMenu():0:0 -> getSubMenu
    1:3:java.lang.CharSequence getTitle():0:0 -> getTitle
    1:8:java.lang.CharSequence getTitleCondensed():0:0 -> getTitleCondensed
    1:3:java.lang.CharSequence getTooltipText():0:0 -> getTooltipText
    1:2:boolean hasSubMenu():0:0 -> hasSubMenu
    1:2:boolean isActionViewExpanded():0:0 -> isActionViewExpanded
    1:9:boolean isCheckable():0:0 -> isCheckable
    1:10:boolean isChecked():0:0 -> isChecked
    1:10:boolean isEnabled():0:0 -> isEnabled
    1:10:boolean isVisible():0:0 -> isVisible
    1:6:android.view.MenuItem setActionProvider(android.view.ActionProvider):0:0 -> setActionProvider
    1:1:android.view.MenuItem setActionView(int):0:0 -> setActionView
    2:2:android.view.MenuItem setActionView(android.view.View):0:0 -> setActionView
    1:1:android.view.MenuItem setAlphabeticShortcut(char):0:0 -> setAlphabeticShortcut
    2:2:android.view.MenuItem setAlphabeticShortcut(char,int):0:0 -> setAlphabeticShortcut
    1:8:android.view.MenuItem setCheckable(boolean):0:0 -> setCheckable
    1:13:android.view.MenuItem setChecked(boolean):0:0 -> setChecked
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    2:2:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lu/b;"}
    1:14:android.view.MenuItem setEnabled(boolean):0:0 -> setEnabled
    1:1:android.view.MenuItem setIcon(int):0:0 -> setIcon
    2:2:android.view.MenuItem setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:9:android.view.MenuItem setIconTintList(android.content.res.ColorStateList):0:0 -> setIconTintList
    1:9:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode):0:0 -> setIconTintMode
    1:3:android.view.MenuItem setIntent(android.content.Intent):0:0 -> setIntent
    1:1:android.view.MenuItem setNumericShortcut(char):0:0 -> setNumericShortcut
    2:2:android.view.MenuItem setNumericShortcut(char,int):0:0 -> setNumericShortcut
    1:6:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener):0:0 -> setOnActionExpandListener
    1:3:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener):0:0 -> setOnMenuItemClickListener
    1:1:android.view.MenuItem setShortcut(char,char):0:0 -> setShortcut
    2:2:android.view.MenuItem setShortcut(char,char,int,int):0:0 -> setShortcut
    1:1:void setShowAsAction(int):0:0 -> setShowAsAction
    1:5:android.view.MenuItem setShowAsActionFlags(int):0:0 -> setShowAsActionFlags
    1:1:android.view.MenuItem setTitle(int):0:0 -> setTitle
    2:2:android.view.MenuItem setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:3:android.view.MenuItem setTitleCondensed(java.lang.CharSequence):0:0 -> setTitleCondensed
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    2:2:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lu/b;"}
    1:13:android.view.MenuItem setVisible(boolean):0:0 -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/g;"}
    java.lang.CharSequence mTitle -> i
    android.graphics.drawable.Drawable mIcon -> j
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e$b;"}
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/v0;"}
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/ActionMenuItemView$b;"}
    boolean mAllowTextWithIcon -> n
    boolean mExpandedFormat -> o
    int mMinWidth -> p
    int mSavedPaddingLeft -> q
    int mMaxIconSize -> r
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:boolean needsDividerBefore():0:0 -> a
    1:1:boolean needsDividerAfter():0:0 -> b
    1:1:boolean prefersCondensedTitle():0:0 -> c
    1:1:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;I)V"}
    1:1:boolean hasText():0:0 -> f
    1:1:boolean shouldAllowTextWithIcon():0:0 -> g
    1:1:void updateTextButtonVisibility():0:0 -> h
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$a:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    androidx.appcompat.view.menu.ActionMenuItemView this$0 -> k
    1:13:androidx.appcompat.view.menu.ShowableListMenu getPopup():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk/e;"}
    1:1:boolean onForwardingStarted():0:0 -> c
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$b:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk/e;"}
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.a:
# {"id":"sourceFile","fileName":"BaseMenuPresenter.java"}
    android.content.Context mSystemContext -> b
    android.content.Context mContext -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    android.view.LayoutInflater mSystemInflater -> e
    android.view.LayoutInflater mInflater -> f
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    int mMenuLayoutRes -> h
    int mItemLayoutRes -> i
    androidx.appcompat.view.menu.MenuView mMenuView -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/k;"}
    int mId -> k
    1:1:void addItemView(android.view.View,int):0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
    1:1:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;)V"}
    void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;Landroidx/appcompat/view/menu/k$a;)V"}
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)Z"}
    1:1:void updateMenuView(boolean):0:0 -> h
    1:1:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Landroidx/appcompat/view/menu/k$a;"}
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
    1:1:boolean filterLeftoverView(android.view.ViewGroup,int):0:0 -> l
    1:1:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/j$a;"}
    1:1:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;Landroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"}
    1:1:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Landroidx/appcompat/view/menu/k;"}
    1:1:void setId(int):0:0 -> p
    boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/appcompat/view/menu/g;)Z"}
androidx.appcompat.view.menu.BaseMenuWrapper -> k.b:
# {"id":"sourceFile","fileName":"BaseMenuWrapper.java"}
    android.content.Context mContext -> a
    androidx.collection.SimpleArrayMap mMenuItems -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    androidx.collection.SimpleArrayMap mSubMenus -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    1:6:void <init>(android.content.Context):0:0 -> <init>
    1:41:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem):0:0 -> c
    1:1:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu):0:0 -> d
    1:15:void internalClear():0:0 -> e
    1:39:void internalRemoveGroup(int):0:0 -> f
    1:38:void internalRemoveItem(int):0:0 -> g
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.b:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> A
    boolean mShouldCloseImmediately -> B
    int ITEM_LAYOUT -> C
    android.content.Context mContext -> c
    int mMenuMaxWidth -> d
    int mPopupStyleAttr -> e
    int mPopupStyleRes -> f
    boolean mOverflowOnly -> g
    android.os.Handler mSubMenuHoverHandler -> h
    java.util.List mPendingMenus -> i
    java.util.List mShowingMenus -> j
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/B0;"}
    int mRawDropDownGravity -> n
    int mDropDownGravity -> o
    android.view.View mAnchorView -> p
    android.view.View mShownAnchorView -> q
    int mLastPosition -> r
    boolean mHasXOffset -> s
    boolean mHasYOffset -> t
    int mXOffset -> u
    int mYOffset -> v
    boolean mForceShowIcon -> w
    boolean mShowTitle -> x
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    android.view.ViewTreeObserver mTreeObserver -> z
    1:1:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)I"}
    1:1:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/e;)Landroid/view/MenuItem;"}
    1:1:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/b$d;Landroidx/appcompat/view/menu/e;)Landroid/view/View;"}
    1:1:int getInitialMenuPosition():0:0 -> D
    1:1:int getNextMenuPosition(int):0:0 -> E
    1:1:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean isShowing():0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;)V"}
    1:1:android.widget.ListView getListView():0:0 -> e
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)Z"}
    1:1:boolean flagActionItems():0:0 -> g
    1:1:void updateMenuView(boolean):0:0 -> h
    1:1:void show():0:0 -> i
    1:1:void addMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean closeMenuOnSubMenuOpened():0:0 -> m
    1:1:void setAnchorView(android.view.View):0:0 -> p
    1:1:void setForceShowIcon(boolean):0:0 -> r
    1:1:void setGravity(int):0:0 -> s
    1:1:void setHorizontalOffset(int):0:0 -> t
    1:1:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> u
    1:1:void setShowTitle(boolean):0:0 -> v
    1:1:void setVerticalOffset(int):0:0 -> w
    1:1:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/F0;"}
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.b$a:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/b;"}
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.b$b:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/b;"}
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.b$c:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/b;"}
    1:1:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)V"}
    1:1:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)V"}
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.b$c$a:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/b$d;"}
    android.view.MenuItem val$item -> b
    androidx.appcompat.view.menu.MenuBuilder val$menu -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/b$c;"}
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.b$d:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    androidx.appcompat.widget.MenuPopupWindow window -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/F0;"}
    androidx.appcompat.view.menu.MenuBuilder menu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    int position -> c
    1:1:android.widget.ListView getListView():0:0 -> a
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
# {"id":"sourceFile","fileName":"ExpandedMenuView.java"}
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    int mAnimations -> c
    int[] TINT_ATTRS -> d
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)Z"}
    1:1:void initialize(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
# {"id":"sourceFile","fileName":"ListMenuItemView.java"}
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/g;"}
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.widget.ImageView mSubMenuArrowView -> h
    android.widget.ImageView mGroupDivider -> i
    android.widget.LinearLayout mContent -> j
    android.graphics.drawable.Drawable mBackground -> k
    int mTextAppearance -> l
    android.content.Context mTextAppearanceContext -> m
    boolean mPreserveIconSpacing -> n
    android.graphics.drawable.Drawable mSubMenuArrow -> o
    boolean mHasListDivider -> p
    android.view.LayoutInflater mInflater -> q
    boolean mForceShowIcon -> r
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void addContentView(android.view.View):0:0 -> a
    1:1:void addContentView(android.view.View,int):0:0 -> b
    1:1:boolean prefersCondensedTitle():0:0 -> c
    1:1:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;I)V"}
    1:1:void insertCheckBox():0:0 -> e
    1:1:void insertIconView():0:0 -> f
    1:1:void insertRadioButton():0:0 -> g
    1:1:void setShortcut(boolean,char):0:0 -> h
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.c:
# {"id":"sourceFile","fileName":"ListMenuPresenter.java"}
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.menu.ExpandedMenuView mMenuView -> e
    int mItemIndexOffset -> f
    int mThemeRes -> g
    int mItemLayoutRes -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/c$a;"}
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    1:1:android.widget.ListAdapter getAdapter():0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
    1:1:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;)V"}
    1:1:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Landroidx/appcompat/view/menu/k;"}
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)Z"}
    1:1:boolean flagActionItems():0:0 -> g
    1:1:void updateMenuView(boolean):0:0 -> h
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.c$a:
# {"id":"sourceFile","fileName":"ListMenuPresenter.java"}
    int mExpandedIndex -> b
    androidx.appcompat.view.menu.ListMenuPresenter this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/c;"}
    1:1:void findExpandedIndex():0:0 -> a
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/appcompat/view/menu/g;"}
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.d:
# {"id":"sourceFile","fileName":"MenuAdapter.java"}
    androidx.appcompat.view.menu.MenuBuilder mAdapterMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    int mExpandedIndex -> c
    boolean mForceShowIcon -> d
    boolean mOverflowOnly -> e
    android.view.LayoutInflater mInflater -> f
    int mItemLayoutRes -> g
    1:1:void findExpandedIndex():0:0 -> a
    1:1:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/appcompat/view/menu/g;"}
    1:1:void setForceShowIcon(boolean):0:0 -> d
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.e:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
    int[] sCategoryToOrder -> A
    android.content.Context mContext -> a
    android.content.res.Resources mResources -> b
    boolean mQwertyMode -> c
    boolean mShortcutsVisible -> d
    androidx.appcompat.view.menu.MenuBuilder$Callback mCallback -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e$a;"}
    java.util.ArrayList mItems -> f
    java.util.ArrayList mVisibleItems -> g
    boolean mIsVisibleItemsStale -> h
    java.util.ArrayList mActionItems -> i
    java.util.ArrayList mNonActionItems -> j
    boolean mIsActionItemsStale -> k
    int mDefaultShowAsAction -> l
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> m
    java.lang.CharSequence mHeaderTitle -> n
    android.graphics.drawable.Drawable mHeaderIcon -> o
    android.view.View mHeaderView -> p
    boolean mPreventDispatchingItemsChanged -> q
    boolean mItemsChangedWhileDispatchPrevented -> r
    boolean mStructureChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    androidx.appcompat.view.menu.MenuItemImpl mExpandedItem -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/g;"}
    boolean mGroupDividerEnabled -> y
    boolean mOverrideVisibleItems -> z
    1:1:boolean getOptionalIconsVisible():0:0 -> A
    1:1:int getOrdering(int):0:0 -> B
    1:1:android.content.res.Resources getResources():0:0 -> C
    1:1:androidx.appcompat.view.menu.MenuBuilder getRootMenu():0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/e;"}
    1:1:java.util.ArrayList getVisibleItems():0:0 -> E
    1:1:boolean isGroupDividerEnabled():0:0 -> F
    1:1:boolean isQwertyMode():0:0 -> G
    1:1:boolean isShortcutsVisible():0:0 -> H
    1:1:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)V"}
    1:1:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)V"}
    1:1:void onItemsChanged(boolean):0:0 -> K
    1:1:boolean performItemAction(android.view.MenuItem,int):0:0 -> L
    1:1:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/MenuItem;Landroidx/appcompat/view/menu/j;I)Z"}
    1:1:void removeItemAtInt(int,boolean):0:0 -> N
    1:1:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j;)V"}
    1:1:void restoreActionViewStates(android.os.Bundle):0:0 -> P
    1:1:void saveActionViewStates(android.os.Bundle):0:0 -> Q
    1:1:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e$a;)V"}
    1:1:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/appcompat/view/menu/e;"}
    1:1:void setExclusiveItemChecked(android.view.MenuItem):0:0 -> T
    1:1:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;)Landroidx/appcompat/view/menu/e;"}
    1:1:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> W
    1:1:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/appcompat/view/menu/e;"}
    1:1:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    1:1:void setOverrideVisibleItems(boolean):0:0 -> a0
    1:1:android.view.MenuItem add(int):0:0 -> add
    2:2:android.view.MenuItem add(int,int,int,int):0:0 -> add
    3:3:android.view.MenuItem add(int,int,int,java.lang.CharSequence):0:0 -> add
    4:4:android.view.MenuItem add(java.lang.CharSequence):0:0 -> add
    1:1:android.view.SubMenu addSubMenu(int):0:0 -> addSubMenu
    2:2:android.view.SubMenu addSubMenu(int,int,int,int):0:0 -> addSubMenu
    3:3:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0:0 -> addSubMenu
    4:4:android.view.SubMenu addSubMenu(java.lang.CharSequence):0:0 -> addSubMenu
    1:1:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j;)V"}
    1:1:void setShortcutsVisibleInner(boolean):0:0 -> b0
    1:1:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j;Landroid/content/Context;)V"}
    1:1:void startDispatchingItemsChanged():0:0 -> c0
    1:1:void changeMenuMode():0:0 -> d
    1:1:void stopDispatchingItemsChanged():0:0 -> d0
    1:1:void close(boolean):0:0 -> e
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)Z"}
    1:1:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIIILjava/lang/CharSequence;I)Landroidx/appcompat/view/menu/g;"}
    1:1:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)Z"}
    1:1:void dispatchPresenterUpdate(boolean):0:0 -> i
    1:1:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;Landroidx/appcompat/view/menu/j;)Z"}
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)Z"}
    1:1:int findGroupIndex(int):0:0 -> l
    1:1:int findGroupIndex(int,int):0:0 -> m
    1:1:int findInsertIndex(java.util.ArrayList,int):0:0 -> n
    1:1:int findItemIndex(int):0:0 -> o
    1:1:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/view/KeyEvent;)Landroidx/appcompat/view/menu/g;"}
    1:1:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> q
    1:1:void flagActionItems():0:0 -> r
    1:1:java.util.ArrayList getActionItems():0:0 -> s
    1:1:java.lang.String getActionViewStatesKey():0:0 -> t
    1:1:android.content.Context getContext():0:0 -> u
    1:1:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/g;"}
    1:1:android.graphics.drawable.Drawable getHeaderIcon():0:0 -> w
    1:1:java.lang.CharSequence getHeaderTitle():0:0 -> x
    1:1:android.view.View getHeaderView():0:0 -> y
    1:1:java.util.ArrayList getNonActionItems():0:0 -> z
androidx.appcompat.view.menu.MenuBuilder$Callback -> androidx.appcompat.view.menu.e$a:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)Z"}
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> androidx.appcompat.view.menu.e$b:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
    boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)Z"}
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.f:
# {"id":"sourceFile","fileName":"MenuDialogHelper.java"}
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.app.AlertDialog mDialog -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/b;"}
    androidx.appcompat.view.menu.ListMenuPresenter mPresenter -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/c;"}
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    1:1:void dismiss():0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)Z"}
    1:1:void show(android.os.IBinder):0:0 -> d
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.g:
# {"id":"sourceFile","fileName":"MenuItemImpl.java"}
    android.view.View mActionView -> A
    androidx.core.view.ActionProvider mActionProvider -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/b;"}
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> C
    boolean mIsActionViewExpanded -> D
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> E
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    int mShortcutNumericModifiers -> i
    char mShortcutAlphabeticChar -> j
    int mShortcutAlphabeticModifiers -> k
    android.graphics.drawable.Drawable mIconDrawable -> l
    int mIconResId -> m
    androidx.appcompat.view.menu.MenuBuilder mMenu -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.menu.SubMenuBuilder mSubMenu -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/m;"}
    java.lang.Runnable mItemCallback -> p
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> q
    java.lang.CharSequence mContentDescription -> r
    java.lang.CharSequence mTooltipText -> s
    android.content.res.ColorStateList mIconTintList -> t
    android.graphics.PorterDuff$Mode mIconTintMode -> u
    boolean mHasIconTint -> v
    boolean mHasIconTintMode -> w
    boolean mNeedToApplyIconTint -> x
    int mFlags -> y
    int mShowAsAction -> z
    1:1:boolean shouldShowShortcut():0:0 -> A
    1:1:boolean showsTextAsAction():0:0 -> B
    1:1:androidx.core.view.ActionProvider getSupportActionProvider():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:31:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/b;)Lu/b;"}
    1:1:void actionFormatChanged():0:0 -> c
    1:1:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String):0:0 -> d
    1:1:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> e
    1:1:int getOrdering():0:0 -> f
    1:1:char getShortcut():0:0 -> g
    1:1:java.lang.String getShortcutLabel():0:0 -> h
    1:1:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/k$a;)Ljava/lang/CharSequence;"}
    1:1:boolean hasCollapsibleActionView():0:0 -> j
    1:1:boolean invoke():0:0 -> k
    1:1:boolean isActionButton():0:0 -> l
    1:1:boolean isExclusiveCheckable():0:0 -> m
    1:1:boolean requestsActionButton():0:0 -> n
    1:1:boolean requiresActionButton():0:0 -> o
    1:24:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lu/b;"}
    1:27:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Lu/b;"}
    1:1:void setActionViewExpanded(boolean):0:0 -> r
    1:1:void setCheckedInt(boolean):0:0 -> s
    1:1:android.view.MenuItem setActionView(int):0:0 -> setActionView
    2:2:android.view.MenuItem setActionView(android.view.View):0:0 -> setActionView
    1:1:android.view.MenuItem setAlphabeticShortcut(char):0:0 -> setAlphabeticShortcut
    2:2:android.view.MenuItem setAlphabeticShortcut(char,int):0:0 -> setAlphabeticShortcut
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    2:2:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lu/b;"}
    1:1:android.view.MenuItem setIcon(int):0:0 -> setIcon
    2:2:android.view.MenuItem setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:android.view.MenuItem setNumericShortcut(char):0:0 -> setNumericShortcut
    2:2:android.view.MenuItem setNumericShortcut(char,int):0:0 -> setNumericShortcut
    1:1:android.view.MenuItem setShortcut(char,char):0:0 -> setShortcut
    2:2:android.view.MenuItem setShortcut(char,char,int,int):0:0 -> setShortcut
    1:1:android.view.MenuItem setTitle(int):0:0 -> setTitle
    2:2:android.view.MenuItem setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    2:2:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lu/b;"}
    1:1:void setExclusiveCheckable(boolean):0:0 -> t
    1:1:void setIsActionButton(boolean):0:0 -> u
    1:1:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo):0:0 -> v
    1:4:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lu/b;"}
    1:1:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)V"}
    1:1:boolean setVisibleInt(boolean):0:0 -> y
    1:1:boolean shouldShowIcon():0:0 -> z
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.g$a:
# {"id":"sourceFile","fileName":"MenuItemImpl.java"}
    androidx.appcompat.view.menu.MenuItemImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/g;"}
androidx.appcompat.view.menu.MenuItemWrapperICS -> k.c:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    androidx.core.internal.view.SupportMenuItem mWrappedObject -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/b;"}
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> e
    1:16:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu/b;)V"}
    1:7:boolean collapseActionView():0:0 -> collapseActionView
    1:7:boolean expandActionView():0:0 -> expandActionView
    1:17:android.view.ActionProvider getActionProvider():0:0 -> getActionProvider
    1:17:android.view.View getActionView():0:0 -> getActionView
    1:7:int getAlphabeticModifiers():0:0 -> getAlphabeticModifiers
    1:7:char getAlphabeticShortcut():0:0 -> getAlphabeticShortcut
    1:7:java.lang.CharSequence getContentDescription():0:0 -> getContentDescription
    1:7:int getGroupId():0:0 -> getGroupId
    1:7:android.graphics.drawable.Drawable getIcon():0:0 -> getIcon
    1:7:android.content.res.ColorStateList getIconTintList():0:0 -> getIconTintList
    1:7:android.graphics.PorterDuff$Mode getIconTintMode():0:0 -> getIconTintMode
    1:7:android.content.Intent getIntent():0:0 -> getIntent
    1:7:int getItemId():0:0 -> getItemId
    1:7:android.view.ContextMenu$ContextMenuInfo getMenuInfo():0:0 -> getMenuInfo
    1:7:int getNumericModifiers():0:0 -> getNumericModifiers
    1:7:char getNumericShortcut():0:0 -> getNumericShortcut
    1:7:int getOrder():0:0 -> getOrder
    1:11:android.view.SubMenu getSubMenu():0:0 -> getSubMenu
    1:7:java.lang.CharSequence getTitle():0:0 -> getTitle
    1:7:java.lang.CharSequence getTitleCondensed():0:0 -> getTitleCondensed
    1:7:java.lang.CharSequence getTooltipText():0:0 -> getTooltipText
    3:53:void setExclusiveCheckable(boolean):0:0 -> h
    1:7:boolean hasSubMenu():0:0 -> hasSubMenu
    1:7:boolean isActionViewExpanded():0:0 -> isActionViewExpanded
    1:7:boolean isCheckable():0:0 -> isCheckable
    1:7:boolean isChecked():0:0 -> isChecked
    1:7:boolean isEnabled():0:0 -> isEnabled
    1:7:boolean isVisible():0:0 -> isVisible
    1:17:android.view.MenuItem setActionProvider(android.view.ActionProvider):0:0 -> setActionProvider
    1:1:android.view.MenuItem setActionView(int):0:0 -> setActionView
    2:2:android.view.MenuItem setActionView(android.view.View):0:0 -> setActionView
    1:1:android.view.MenuItem setAlphabeticShortcut(char):0:0 -> setAlphabeticShortcut
    2:2:android.view.MenuItem setAlphabeticShortcut(char,int):0:0 -> setAlphabeticShortcut
    1:6:android.view.MenuItem setCheckable(boolean):0:0 -> setCheckable
    1:6:android.view.MenuItem setChecked(boolean):0:0 -> setChecked
    1:6:android.view.MenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    1:6:android.view.MenuItem setEnabled(boolean):0:0 -> setEnabled
    1:1:android.view.MenuItem setIcon(int):0:0 -> setIcon
    2:2:android.view.MenuItem setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:6:android.view.MenuItem setIconTintList(android.content.res.ColorStateList):0:0 -> setIconTintList
    1:6:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode):0:0 -> setIconTintMode
    1:6:android.view.MenuItem setIntent(android.content.Intent):0:0 -> setIntent
    1:1:android.view.MenuItem setNumericShortcut(char):0:0 -> setNumericShortcut
    2:2:android.view.MenuItem setNumericShortcut(char,int):0:0 -> setNumericShortcut
    1:15:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener):0:0 -> setOnActionExpandListener
    1:15:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener):0:0 -> setOnMenuItemClickListener
    1:1:android.view.MenuItem setShortcut(char,char):0:0 -> setShortcut
    2:2:android.view.MenuItem setShortcut(char,char,int,int):0:0 -> setShortcut
    1:6:void setShowAsAction(int):0:0 -> setShowAsAction
    1:6:android.view.MenuItem setShowAsActionFlags(int):0:0 -> setShowAsActionFlags
    1:1:android.view.MenuItem setTitle(int):0:0 -> setTitle
    2:2:android.view.MenuItem setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:6:android.view.MenuItem setTitleCondensed(java.lang.CharSequence):0:0 -> setTitleCondensed
    1:6:android.view.MenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    1:7:android.view.MenuItem setVisible(boolean):0:0 -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> k.c$a:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    android.view.ActionProvider mInner -> d
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/c;"}
    1:8:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/c;Landroid/content/Context;Landroid/view/ActionProvider;)V"}
    1:7:boolean hasSubMenu():0:0 -> a
    1:7:boolean onPerformDefaultAction():0:0 -> d
    1:12:void onPrepareSubMenu(android.view.SubMenu):0:0 -> e
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> k.c$b:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    androidx.core.view.ActionProvider$VisibilityListener mListener -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/b$b;"}
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/c;"}
    1:6:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/c;Landroid/content/Context;Landroid/view/ActionProvider;)V"}
    1:7:boolean isVisible():0:0 -> b
    1:7:android.view.View onCreateActionView(android.view.MenuItem):0:0 -> c
    1:7:boolean overridesItemVisibility():0:0 -> f
    1:13:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/b$b;)V"}
    1:8:void onActionProviderVisibilityChanged(boolean):0:0 -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> k.c$c:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    android.view.CollapsibleActionView mWrappedView -> b
    1:16:void <init>(android.view.View):0:0 -> <init>
    1:6:void onActionViewExpanded():0:0 -> a
    1:5:android.view.View getWrappedView():0:0 -> b
    1:6:void onActionViewCollapsed():0:0 -> d
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> k.c$d:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    android.view.MenuItem$OnActionExpandListener mObject -> a
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/c;"}
    1:8:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/c;Landroid/view/MenuItem$OnActionExpandListener;)V"}
    1:13:boolean onMenuItemActionCollapse(android.view.MenuItem):0:0 -> onMenuItemActionCollapse
    1:13:boolean onMenuItemActionExpand(android.view.MenuItem):0:0 -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> k.c$e:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    android.view.MenuItem$OnMenuItemClickListener mObject -> a
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/c;"}
    1:8:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/c;Landroid/view/MenuItem$OnMenuItemClickListener;)V"}
    1:13:boolean onMenuItemClick(android.view.MenuItem):0:0 -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.h:
# {"id":"sourceFile","fileName":"MenuPopup.java"}
    android.graphics.Rect mEpicenterBounds -> b
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean closeMenuOnSubMenuOpened():0:0 -> m
    1:1:android.graphics.Rect getEpicenterBounds():0:0 -> n
    1:1:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int):0:0 -> o
    void setAnchorView(android.view.View) -> p
    1:1:void setEpicenterBounds(android.graphics.Rect):0:0 -> q
    void setForceShowIcon(boolean) -> r
    void setGravity(int) -> s
    void setHorizontalOffset(int) -> t
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> u
    void setShowTitle(boolean) -> v
    void setVerticalOffset(int) -> w
    1:1:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)Z"}
    1:1:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/ListAdapter;)Landroidx/appcompat/view/menu/d;"}
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.i:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    boolean mOverflowOnly -> c
    int mPopupStyleAttr -> d
    int mPopupStyleRes -> e
    android.view.View mAnchorView -> f
    int mDropDownGravity -> g
    boolean mForceShowIcon -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    androidx.appcompat.view.menu.MenuPopup mPopup -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/h;"}
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    1:1:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;Landroid/view/View;ZI)V"}
    2:2:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;Landroid/view/View;ZII)V"}
    1:1:androidx.appcompat.view.menu.MenuPopup createPopup():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/h;"}
    1:1:void dismiss():0:0 -> b
    1:1:androidx.appcompat.view.menu.MenuPopup getPopup():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/h;"}
    1:1:boolean isShowing():0:0 -> d
    1:1:void onDismiss():0:0 -> e
    1:1:void setAnchorView(android.view.View):0:0 -> f
    1:1:void setForceShowIcon(boolean):0:0 -> g
    1:1:void setGravity(int):0:0 -> h
    1:1:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> i
    1:1:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;)V"}
    1:1:void show():0:0 -> k
    1:1:void showPopup(int,int,boolean,boolean):0:0 -> l
    1:1:boolean tryShow():0:0 -> m
    1:1:boolean tryShow(int,int):0:0 -> n
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.i$a:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    androidx.appcompat.view.menu.MenuPopupHelper this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/i;"}
androidx.appcompat.view.menu.MenuPresenter -> androidx.appcompat.view.menu.j:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;)V"}
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)Z"}
    boolean flagActionItems() -> g
    void updateMenuView(boolean) -> h
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;)V"}
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
androidx.appcompat.view.menu.MenuPresenter$Callback -> androidx.appcompat.view.menu.j$a:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)Z"}
androidx.appcompat.view.menu.MenuView -> androidx.appcompat.view.menu.k:
# {"id":"sourceFile","fileName":"MenuView.java"}
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
androidx.appcompat.view.menu.MenuView$ItemView -> androidx.appcompat.view.menu.k$a:
# {"id":"sourceFile","fileName":"MenuView.java"}
    boolean prefersCondensedTitle() -> c
    void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;I)V"}
androidx.appcompat.view.menu.MenuWrapperICS -> k.d:
# {"id":"sourceFile","fileName":"MenuWrapperICS.java"}
    androidx.core.internal.view.SupportMenu mWrappedObject -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/a;"}
    1:16:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu/a;)V"}
    1:1:android.view.MenuItem add(int):0:0 -> add
    2:2:android.view.MenuItem add(int,int,int,int):0:0 -> add
    3:3:android.view.MenuItem add(int,int,int,java.lang.CharSequence):0:0 -> add
    4:4:android.view.MenuItem add(java.lang.CharSequence):0:0 -> add
    1:1:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0:0 -> addIntentOptions
    1:1:android.view.SubMenu addSubMenu(int):0:0 -> addSubMenu
    2:2:android.view.SubMenu addSubMenu(int,int,int,int):0:0 -> addSubMenu
    3:3:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0:0 -> addSubMenu
    4:4:android.view.SubMenu addSubMenu(java.lang.CharSequence):0:0 -> addSubMenu
    1:9:void clear():0:0 -> clear
    1:6:void close():0:0 -> close
    1:11:android.view.MenuItem findItem(int):0:0 -> findItem
    1:11:android.view.MenuItem getItem(int):0:0 -> getItem
    1:7:boolean hasVisibleItems():0:0 -> hasVisibleItems
    1:7:boolean isShortcutKey(int,android.view.KeyEvent):0:0 -> isShortcutKey
    1:7:boolean performIdentifierAction(int,int):0:0 -> performIdentifierAction
    1:7:boolean performShortcut(int,android.view.KeyEvent,int):0:0 -> performShortcut
    1:9:void removeGroup(int):0:0 -> removeGroup
    1:9:void removeItem(int):0:0 -> removeItem
    1:6:void setGroupCheckable(int,boolean,boolean):0:0 -> setGroupCheckable
    1:6:void setGroupEnabled(int,boolean):0:0 -> setGroupEnabled
    1:6:void setGroupVisible(int,boolean):0:0 -> setGroupVisible
    1:6:void setQwertyMode(boolean):0:0 -> setQwertyMode
    1:7:int size():0:0 -> size
androidx.appcompat.view.menu.ShowableListMenu -> k.e:
# {"id":"sourceFile","fileName":"ShowableListMenu.java"}
    boolean isShowing() -> a
    void dismiss() -> dismiss
    android.widget.ListView getListView() -> e
    void show() -> i
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.l:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    android.content.Context mContext -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.menu.MenuAdapter mAdapter -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/d;"}
    boolean mOverflowOnly -> f
    int mPopupMaxWidth -> g
    int mPopupStyleAttr -> h
    int mPopupStyleRes -> i
    androidx.appcompat.widget.MenuPopupWindow mPopup -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/F0;"}
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> m
    android.view.View mAnchorView -> n
    android.view.View mShownAnchorView -> o
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    android.view.ViewTreeObserver mTreeObserver -> q
    boolean mWasDismissed -> r
    boolean mHasContentWidth -> s
    int mContentWidth -> t
    int mDropDownGravity -> u
    boolean mShowTitle -> v
    int ITEM_LAYOUT -> w
    1:1:boolean isShowing():0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;)V"}
    1:1:android.widget.ListView getListView():0:0 -> e
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)Z"}
    1:1:boolean flagActionItems():0:0 -> g
    1:1:void updateMenuView(boolean):0:0 -> h
    1:1:void show():0:0 -> i
    1:1:void addMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:void setAnchorView(android.view.View):0:0 -> p
    1:1:void setForceShowIcon(boolean):0:0 -> r
    1:1:void setGravity(int):0:0 -> s
    1:1:void setHorizontalOffset(int):0:0 -> t
    1:1:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> u
    1:1:void setShowTitle(boolean):0:0 -> v
    1:1:void setVerticalOffset(int):0:0 -> w
    1:1:boolean tryShow():0:0 -> z
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.l$a:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/l;"}
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.l$b:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/l;"}
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.m:
# {"id":"sourceFile","fileName":"SubMenuBuilder.java"}
    androidx.appcompat.view.menu.MenuBuilder mParentMenu -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.menu.MenuItemImpl mItem -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/g;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder getRootMenu():0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/e;"}
    1:1:boolean isGroupDividerEnabled():0:0 -> F
    1:1:boolean isQwertyMode():0:0 -> G
    1:1:boolean isShortcutsVisible():0:0 -> H
    1:1:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e$a;)V"}
    1:1:android.view.Menu getParentMenu():0:0 -> e0
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)Z"}
    1:1:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)Z"}
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)Z"}
    1:1:android.view.SubMenu setHeaderIcon(int):0:0 -> setHeaderIcon
    2:2:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable):0:0 -> setHeaderIcon
    1:1:android.view.SubMenu setHeaderTitle(int):0:0 -> setHeaderTitle
    2:2:android.view.SubMenu setHeaderTitle(java.lang.CharSequence):0:0 -> setHeaderTitle
    1:1:android.view.SubMenu setIcon(int):0:0 -> setIcon
    2:2:android.view.SubMenu setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:java.lang.String getActionViewStatesKey():0:0 -> t
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.a:
# {"id":"sourceFile","fileName":"AbsActionBarView.java"}
    androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/a$a;"}
    android.content.Context mPopupContext -> c
    androidx.appcompat.widget.ActionMenuView mMenuView -> d
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    int mContentHeight -> f
    androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/e0;"}
    boolean mEatingTouch -> h
    boolean mEatingHover -> i
    1:1:void access$001(androidx.appcompat.widget.AbsActionBarView,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/a;I)V"}
    1:1:void access$101(androidx.appcompat.widget.AbsActionBarView,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/a;I)V"}
    1:1:int measureChildView(android.view.View,int,int,int):0:0 -> c
    1:1:int next(int,int,boolean):0:0 -> d
    1:1:int positionChild(android.view.View,int,int,int,boolean):0:0 -> e
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJ)Landroidx/core/view/e0;"}
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.a$a:
# {"id":"sourceFile","fileName":"AbsActionBarView.java"}
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.AbsActionBarView this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/a;"}
    1:1:void onAnimationEnd(android.view.View):0:0 -> a
    1:1:void onAnimationStart(android.view.View):0:0 -> b
    1:1:void onAnimationCancel(android.view.View):0:0 -> c
    1:1:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/e0;I)Landroidx/appcompat/widget/a$a;"}
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.c:
# {"id":"sourceFile","fileName":"ActionBarBackgroundDrawable.java"}
    androidx.appcompat.widget.ActionBarContainer mContainer -> a
androidx.appcompat.widget.ActionBarBackgroundDrawable$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.graphics.drawable.Drawable,android.graphics.Outline):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
# {"id":"sourceFile","fileName":"ActionBarContainer.java"}
    boolean mIsTransitioning -> b
    android.view.View mTabContainer -> c
    android.view.View mActionBarView -> d
    android.view.View mContextView -> e
    android.graphics.drawable.Drawable mBackground -> f
    android.graphics.drawable.Drawable mStackedBackground -> g
    android.graphics.drawable.Drawable mSplitBackground -> h
    boolean mIsSplit -> i
    boolean mIsStacked -> j
    int mHeight -> k
    1:1:int getMeasuredHeightWithMargins(android.view.View):0:0 -> a
    1:1:boolean isCollapsed(android.view.View):0:0 -> b
    1:1:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback):0:0 -> startActionModeForChild
    2:2:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int):0:0 -> startActionModeForChild
androidx.appcompat.widget.ActionBarContainer$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(androidx.appcompat.widget.ActionBarContainer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
# {"id":"sourceFile","fileName":"ActionBarContextView.java"}
    java.lang.CharSequence mTitle -> j
    java.lang.CharSequence mSubtitle -> k
    android.view.View mClose -> l
    android.view.View mCloseButton -> m
    android.view.View mCustomView -> n
    android.widget.LinearLayout mTitleLayout -> o
    android.widget.TextView mTitleView -> p
    android.widget.TextView mSubtitleView -> q
    int mTitleStyleRes -> r
    int mSubtitleStyleRes -> s
    boolean mTitleOptional -> t
    int mCloseItemLayout -> u
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJ)Landroidx/core/view/e0;"}
    1:1:void closeMode():0:0 -> g
    1:114:void initForMode(androidx.appcompat.view.ActionMode):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:void initTitle():0:0 -> i
    1:1:boolean isTitleOptional():0:0 -> j
    1:1:void killMode():0:0 -> k
    1:1:boolean showOverflowMenu():0:0 -> l
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$a:
# {"id":"sourceFile","fileName":"ActionBarContextView.java"}
    androidx.appcompat.view.ActionMode val$mode -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/b;"}
    androidx.appcompat.widget.ActionBarContextView this$0 -> c
    1:8:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/ActionBarContextView;Lj/b;)V"}
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    android.widget.OverScroller mFlingEstimator -> A
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> B
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> C
    java.lang.Runnable mRemoveActionBarHideOffset -> D
    java.lang.Runnable mAddActionBarHideOffset -> E
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/I;"}
    int[] ATTRS -> G
    int mActionBarHeight -> b
    int mWindowVisibility -> c
    androidx.appcompat.widget.ContentFrameLayout mContent -> d
    androidx.appcompat.widget.ActionBarContainer mActionBarTop -> e
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p0;"}
    android.graphics.drawable.Drawable mWindowContentOverlay -> g
    boolean mIgnoreWindowContentOverlay -> h
    boolean mOverlayMode -> i
    boolean mHasNonEmbeddedTabs -> j
    boolean mHideOnContentScroll -> k
    boolean mAnimatingForFling -> l
    int mHideOnContentScrollReference -> m
    int mLastSystemUiVisibility -> n
    android.graphics.Rect mBaseContentInsets -> o
    android.graphics.Rect mLastBaseContentInsets -> p
    android.graphics.Rect mContentInsets -> q
    android.graphics.Rect mBaseInnerInsetsRect -> r
    android.graphics.Rect mLastBaseInnerInsetsRect -> s
    android.graphics.Rect mInnerInsetsRect -> t
    android.graphics.Rect mLastInnerInsetsRect -> u
    androidx.core.view.WindowInsetsCompat mBaseInnerInsets -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    androidx.core.view.WindowInsetsCompat mInnerInsets -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    androidx.core.view.WindowInsetsCompat mLastInnerInsets -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/ActionBarOverlayLayout$d;"}
    1:1:void removeActionBarHideOffset():0:0 -> A
    1:1:boolean shouldHideActionBarOnFling(float):0:0 -> B
    1:1:boolean showOverflowMenu():0:0 -> a
    1:1:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Menu;Landroidx/appcompat/view/menu/j$a;)V"}
    1:1:boolean isOverflowMenuShowPending():0:0 -> c
    1:1:void setMenuPrepared():0:0 -> d
    1:1:boolean isOverflowMenuShowing():0:0 -> e
    1:1:boolean canShowOverflowMenu():0:0 -> f
    1:1:boolean hideOverflowMenu():0:0 -> g
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    1:1:void initFeature(int):0:0 -> h
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> i
    1:1:void dismissPopups():0:0 -> j
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int,int[]):0:0 -> k
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int):0:0 -> l
    1:1:void onStopNestedScroll(android.view.View,int):0:0 -> m
    1:1:void onNestedPreScroll(android.view.View,int,int,int[],int):0:0 -> n
    1:1:boolean onStartNestedScroll(android.view.View,android.view.View,int,int):0:0 -> o
    1:1:void addActionBarHideOffset():0:0 -> p
    1:1:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean):0:0 -> q
    1:1:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/ActionBarOverlayLayout$e;"}
    1:1:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/AttributeSet;)Landroidx/appcompat/widget/ActionBarOverlayLayout$e;"}
    1:1:void setIcon(int):0:0 -> setIcon
    2:2:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/appcompat/widget/p0;"}
    1:1:void haltActionBarHideOffsetAnimations():0:0 -> u
    1:1:void init(android.content.Context):0:0 -> v
    1:1:boolean isInOverlayMode():0:0 -> w
    1:1:void postAddActionBarHideOffset():0:0 -> x
    1:1:void postRemoveActionBarHideOffset():0:0 -> y
    1:1:void pullChildren():0:0 -> z
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$a:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$b:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$c:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> androidx.appcompat.widget.ActionBarOverlayLayout$d:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    void onContentScrollStarted() -> a
    void enableContentAnimations(boolean) -> b
    void onWindowVisibilityChanged(int) -> c
    void hideForSystem() -> d
    void showForSystem() -> e
    void onContentScrollStopped() -> f
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$e:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.e:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$a;"}
    androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$c;"}
    androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$b;"}
    androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$f;"}
    int mOpenSubMenuId -> E
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$d;"}
    android.graphics.drawable.Drawable mPendingOverflowIcon -> m
    boolean mPendingOverflowIconSet -> n
    boolean mReserveOverflow -> o
    boolean mReserveOverflowSet -> p
    int mWidthLimit -> q
    int mActionItemWidthLimit -> r
    int mMaxItems -> s
    boolean mMaxItemsSet -> t
    boolean mStrictWidthLimit -> u
    boolean mWidthLimitSet -> v
    boolean mExpandedActionViewsExclusive -> w
    int mMinCellSize -> x
    android.util.SparseBooleanArray mActionButtonGroups -> y
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$e;"}
    1:1:android.graphics.drawable.Drawable getOverflowIcon():0:0 -> A
    1:1:boolean hideOverflowMenu():0:0 -> B
    1:1:boolean hideSubMenus():0:0 -> C
    1:1:boolean isOverflowMenuShowPending():0:0 -> D
    1:1:boolean isOverflowMenuShowing():0:0 -> E
    1:1:void onConfigurationChanged(android.content.res.Configuration):0:0 -> F
    1:1:void setExpandedActionViewsExclusive(boolean):0:0 -> G
    1:1:void setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> H
    1:1:void setOverflowIcon(android.graphics.drawable.Drawable):0:0 -> I
    1:1:void setReserveOverflow(boolean):0:0 -> J
    1:1:boolean showOverflowMenu():0:0 -> K
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;Landroidx/appcompat/view/menu/k$a;)V"}
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)Z"}
    1:1:boolean flagActionItems():0:0 -> g
    1:1:void updateMenuView(boolean):0:0 -> h
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean filterLeftoverView(android.view.ViewGroup,int):0:0 -> l
    1:1:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;Landroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"}
    1:1:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Landroidx/appcompat/view/menu/k;"}
    1:1:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/appcompat/view/menu/g;)Z"}
    1:1:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/e;)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/e;)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/e;)Landroidx/appcompat/view/menu/k;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/e;)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/e;)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/e;)Landroidx/appcompat/view/menu/e;"}
    1:1:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/e;)Landroidx/appcompat/view/menu/k;"}
    1:1:boolean dismissPopupMenus():0:0 -> y
    1:1:android.view.View findViewForItem(android.view.MenuItem):0:0 -> z
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.e$a:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    1:1:void onDismiss():0:0 -> e
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.e$b:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    1:13:androidx.appcompat.view.menu.ShowableListMenu getPopup():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk/e;"}
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.e$c:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$e;"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.e$d:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    1:1:boolean needsDividerBefore():0:0 -> a
    1:1:boolean needsDividerAfter():0:0 -> b
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.e$d$a:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter val$this$0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e$d;"}
    1:15:androidx.appcompat.view.menu.ShowableListMenu getPopup():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk/e;"}
    1:1:boolean onForwardingStarted():0:0 -> c
    1:1:boolean onForwardingStopped():0:0 -> d
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.e$e:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    1:1:void onDismiss():0:0 -> e
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.e$f:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)Z"}
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    int mGeneratedItemPadding -> A
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/ActionMenuView$e;"}
    androidx.appcompat.view.menu.MenuBuilder mMenu -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    android.content.Context mPopupContext -> r
    int mPopupTheme -> s
    boolean mReserveOverflow -> t
    androidx.appcompat.widget.ActionMenuPresenter mPresenter -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e$a;"}
    boolean mFormatItems -> x
    int mFormatItemsWidth -> y
    int mMinCellSize -> z
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams():0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/ActionMenuView$c;"}
    1:1:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/AttributeSet;)Landroidx/appcompat/widget/ActionMenuView$c;"}
    1:1:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Landroidx/appcompat/widget/ActionMenuView$c;"}
    1:1:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams():0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/ActionMenuView$c;"}
    1:1:boolean hasSupportDividerBeforeChildAt(int):0:0 -> E
    1:1:boolean hideOverflowMenu():0:0 -> F
    1:1:boolean isOverflowMenuShowPending():0:0 -> G
    1:1:boolean isOverflowMenuShowing():0:0 -> H
    1:1:boolean isOverflowReserved():0:0 -> I
    1:1:int measureChildForCells(android.view.View,int,int,int,int):0:0 -> J
    1:1:void onMeasureExactFormat(int,int):0:0 -> K
    1:1:androidx.appcompat.view.menu.MenuBuilder peekMenu():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/view/menu/e;"}
    1:1:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/j$a;Landroidx/appcompat/view/menu/e$a;)V"}
    1:1:boolean showOverflowMenu():0:0 -> N
    1:1:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/g;)Z"}
    1:1:void initialize(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/w0$a;"}
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/AttributeSet;)Landroidx/appcompat/widget/w0$a;"}
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Landroidx/appcompat/widget/w0$a;"}
    1:1:void dismissPopupMenus():0:0 -> z
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> androidx.appcompat.widget.ActionMenuView$a:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$b:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)Z"}
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$c:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/ActionMenuView$c;)V"}
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$d:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    androidx.appcompat.widget.ActionMenuView this$0 -> b
    1:1:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)Z"}
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> androidx.appcompat.widget.ActionMenuView$e:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    int[] TINT_ATTRS -> b
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
# {"id":"sourceFile","fileName":"AlertDialogLayout.java"}
    1:1:boolean tryOnMeasure(int,int):0:0 -> A
    1:1:void forceUniformWidth(int,int):0:0 -> j
    1:1:void setChildFrame(android.view.View,int,int,int,int):0:0 -> y
    1:1:int resolveMinimumHeight(android.view.View):0:0 -> z
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.f:
# {"id":"sourceFile","fileName":"AppCompatAutoCompleteTextView.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatEmojiEditTextHelper mAppCompatEmojiEditTextHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/o;"}
    int[] TINT_ATTRS -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/o;)V"}
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.g:
# {"id":"sourceFile","fileName":"AppCompatBackgroundHelper.java"}
    android.view.View mView -> a
    androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/m;"}
    int mBackgroundResId -> c
    androidx.appcompat.widget.TintInfo mInternalBackgroundTint -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mBackgroundTint -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mTmpInfo -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    1:1:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void applySupportBackgroundTint():0:0 -> b
    1:1:android.content.res.ColorStateList getSupportBackgroundTintList():0:0 -> c
    1:1:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0:0 -> d
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    1:1:void onSetBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> f
    1:1:void onSetBackgroundResource(int):0:0 -> g
    1:1:void setInternalBackgroundTint(android.content.res.ColorStateList):0:0 -> h
    1:1:void setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> i
    1:1:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> j
    1:1:boolean shouldApplyFrameworkTintUsingColorFilter():0:0 -> k
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.h:
# {"id":"sourceFile","fileName":"AppCompatButton.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatEmojiTextHelper mAppCompatEmojiTextHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.i:
# {"id":"sourceFile","fileName":"AppCompatCheckBox.java"}
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/l;"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatEmojiTextHelper mAppCompatEmojiTextHelper -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void setButtonDrawable(int):0:0 -> setButtonDrawable
    2:2:void setButtonDrawable(android.graphics.drawable.Drawable):0:0 -> setButtonDrawable
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.j:
# {"id":"sourceFile","fileName":"AppCompatCheckedTextView.java"}
    androidx.appcompat.widget.AppCompatCheckedTextViewHelper mCheckedHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/k;"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatEmojiTextHelper mAppCompatEmojiTextHelper -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void setCheckMarkDrawable(int):0:0 -> setCheckMarkDrawable
    2:2:void setCheckMarkDrawable(android.graphics.drawable.Drawable):0:0 -> setCheckMarkDrawable
androidx.appcompat.widget.AppCompatCheckedTextViewHelper -> androidx.appcompat.widget.k:
# {"id":"sourceFile","fileName":"AppCompatCheckedTextViewHelper.java"}
    android.widget.CheckedTextView mView -> a
    android.content.res.ColorStateList mCheckMarkTintList -> b
    android.graphics.PorterDuff$Mode mCheckMarkTintMode -> c
    boolean mHasCheckMarkTint -> d
    boolean mHasCheckMarkTintMode -> e
    boolean mSkipNextApply -> f
    1:1:void applyCheckMarkTint():0:0 -> a
    1:1:android.content.res.ColorStateList getSupportCheckMarkTintList():0:0 -> b
    1:1:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode():0:0 -> c
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    1:1:void onSetCheckMarkDrawable():0:0 -> e
    1:1:void setSupportCheckMarkTintList(android.content.res.ColorStateList):0:0 -> f
    1:1:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode):0:0 -> g
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.l:
# {"id":"sourceFile","fileName":"AppCompatCompoundButtonHelper.java"}
    android.widget.CompoundButton mView -> a
    android.content.res.ColorStateList mButtonTintList -> b
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    1:1:void applyButtonTint():0:0 -> a
    1:1:int getCompoundPaddingLeft(int):0:0 -> b
    1:1:android.content.res.ColorStateList getSupportButtonTintList():0:0 -> c
    1:1:android.graphics.PorterDuff$Mode getSupportButtonTintMode():0:0 -> d
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    1:1:void onSetButtonDrawable():0:0 -> f
    1:1:void setSupportButtonTintList(android.content.res.ColorStateList):0:0 -> g
    1:1:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0:0 -> h
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.m:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    androidx.appcompat.widget.ResourceManagerInternal mResourceManager -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/G0;"}
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> b
    androidx.appcompat.widget.AppCompatDrawableManager INSTANCE -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/m;"}
    1:1:android.graphics.PorterDuff$Mode access$000():0:0 -> a
    1:1:androidx.appcompat.widget.AppCompatDrawableManager get():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/m;"}
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> c
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> d
    1:1:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> e
    1:1:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> f
    1:1:void onConfigurationChanged(android.content.Context):0:0 -> g
    1:1:void preload():0:0 -> h
    1:1:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;Landroidx/appcompat/widget/P0;[I)V"}
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.m$a:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> a
    int[] TINT_COLOR_CONTROL_NORMAL -> b
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> c
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> d
    int[] TINT_COLOR_CONTROL_STATE_LIST -> e
    int[] TINT_CHECKABLE_BUTTON_LIST -> f
    1:1:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/G0;Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;"}
    1:1:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> b
    1:1:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> c
    1:1:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> d
    1:1:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int):0:0 -> e
    1:1:boolean arrayContains(int[],int):0:0 -> f
    1:1:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context):0:0 -> g
    1:1:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int):0:0 -> h
    1:1:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context):0:0 -> i
    1:1:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context):0:0 -> j
    1:1:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context):0:0 -> k
    1:1:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/G0;Landroid/content/Context;I)Landroid/graphics/drawable/LayerDrawable;"}
    1:1:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0:0 -> m
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.n:
# {"id":"sourceFile","fileName":"AppCompatEditText.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/N;"}
    androidx.core.widget.TextViewOnReceiveContentListener mDefaultOnReceiveContentListener -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/widget/C;"}
    androidx.appcompat.widget.AppCompatEmojiEditTextHelper mAppCompatEmojiEditTextHelper -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/o;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/c;)Landroidx/core/view/c;"}
    1:1:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/o;)V"}
    1:1:android.text.Editable getText():0:0 -> getText
    2:2:java.lang.CharSequence getText():0:0 -> getText
androidx.appcompat.widget.AppCompatEmojiEditTextHelper -> androidx.appcompat.widget.o:
# {"id":"sourceFile","fileName":"AppCompatEmojiEditTextHelper.java"}
    android.widget.EditText mView -> a
    androidx.emoji2.viewsintegration.EmojiEditTextHelper mEmojiEditTextHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/a;"}
    1:1:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener):0:0 -> a
    1:1:boolean isEmojiCapableKeyListener(android.text.method.KeyListener):0:0 -> b
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> c
    1:1:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> d
    1:1:void setEnabled(boolean):0:0 -> e
androidx.appcompat.widget.AppCompatEmojiTextHelper -> androidx.appcompat.widget.p:
# {"id":"sourceFile","fileName":"AppCompatEmojiTextHelper.java"}
    android.widget.TextView mView -> a
    androidx.emoji2.viewsintegration.EmojiTextViewHelper mEmojiTextViewHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/f;"}
    1:1:android.text.InputFilter[] getFilters(android.text.InputFilter[]):0:0 -> a
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    1:1:void setAllCaps(boolean):0:0 -> c
    1:1:void setEnabled(boolean):0:0 -> d
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.q:
# {"id":"sourceFile","fileName":"AppCompatHintHelper.java"}
    1:1:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View):0:0 -> a
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.r:
# {"id":"sourceFile","fileName":"AppCompatImageButton.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/t;"}
    boolean mHasLevel -> d
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.t:
# {"id":"sourceFile","fileName":"AppCompatImageHelper.java"}
    android.widget.ImageView mView -> a
    androidx.appcompat.widget.TintInfo mInternalImageTint -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mImageTint -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mTmpInfo -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    int mLevel -> e
    1:1:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void applyImageLevel():0:0 -> b
    1:1:void applySupportImageTint():0:0 -> c
    1:1:android.content.res.ColorStateList getSupportImageTintList():0:0 -> d
    1:1:android.graphics.PorterDuff$Mode getSupportImageTintMode():0:0 -> e
    1:1:boolean hasOverlappingRendering():0:0 -> f
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> g
    1:1:void obtainLevelFromDrawable(android.graphics.drawable.Drawable):0:0 -> h
    1:1:void setImageResource(int):0:0 -> i
    1:1:void setSupportImageTintList(android.content.res.ColorStateList):0:0 -> j
    1:1:void setSupportImageTintMode(android.graphics.PorterDuff$Mode):0:0 -> k
    1:1:boolean shouldApplyFrameworkTintUsingColorFilter():0:0 -> l
androidx.appcompat.widget.AppCompatImageHelper$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.u:
# {"id":"sourceFile","fileName":"AppCompatImageView.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/t;"}
    boolean mHasLevel -> d
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.v:
# {"id":"sourceFile","fileName":"AppCompatMultiAutoCompleteTextView.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatEmojiEditTextHelper mAppCompatEmojiEditTextHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/o;"}
    int[] TINT_ATTRS -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/o;)V"}
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.w:
# {"id":"sourceFile","fileName":"AppCompatPopupWindow.java"}
    boolean mOverlapAnchor -> a
    boolean COMPAT_OVERLAP_ANCHOR -> b
    1:1:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> a
    1:1:void setSupportOverlapAnchor(boolean):0:0 -> b
    1:1:void showAsDropDown(android.view.View,int,int):0:0 -> showAsDropDown
    2:2:void showAsDropDown(android.view.View,int,int,int):0:0 -> showAsDropDown
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.x:
# {"id":"sourceFile","fileName":"AppCompatProgressBarHelper.java"}
    android.widget.ProgressBar mView -> a
    android.graphics.Bitmap mSampleTile -> b
    int[] TINT_ATTRS -> c
    1:1:android.graphics.drawable.shapes.Shape getDrawableShape():0:0 -> a
    1:1:android.graphics.Bitmap getSampleTile():0:0 -> b
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> c
    1:1:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0:0 -> d
    1:1:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable):0:0 -> e
androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl -> androidx.appcompat.widget.x$a:
# {"id":"sourceFile","fileName":"AppCompatProgressBarHelper.java"}
    1:1:void transferLayerProperties(android.graphics.drawable.LayerDrawable,android.graphics.drawable.LayerDrawable,int):0:0 -> a
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.y:
# {"id":"sourceFile","fileName":"AppCompatRadioButton.java"}
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/l;"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatEmojiTextHelper mAppCompatEmojiTextHelper -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void setButtonDrawable(int):0:0 -> setButtonDrawable
    2:2:void setButtonDrawable(android.graphics.drawable.Drawable):0:0 -> setButtonDrawable
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.z:
# {"id":"sourceFile","fileName":"AppCompatRatingBar.java"}
    androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/x;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.AppCompatReceiveContentHelper -> androidx.appcompat.widget.A:
# {"id":"sourceFile","fileName":"AppCompatReceiveContentHelper.java"}
    1:1:boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0:0 -> a
    1:1:boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int):0:0 -> b
    1:1:android.app.Activity tryGetActivity(android.view.View):0:0 -> c
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl -> androidx.appcompat.widget.A$a:
# {"id":"sourceFile","fileName":"AppCompatReceiveContentHelper.java"}
    1:1:boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity):0:0 -> a
    1:1:boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity):0:0 -> b
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.B:
# {"id":"sourceFile","fileName":"AppCompatSeekBar.java"}
    androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/C;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.C:
# {"id":"sourceFile","fileName":"AppCompatSeekBarHelper.java"}
    android.widget.SeekBar mView -> d
    android.graphics.drawable.Drawable mTickMark -> e
    android.content.res.ColorStateList mTickMarkTintList -> f
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> g
    boolean mHasTickMarkTint -> h
    boolean mHasTickMarkTintMode -> i
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> c
    1:1:void applyTickMarkTint():0:0 -> f
    1:1:void drawTickMarks(android.graphics.Canvas):0:0 -> g
    1:1:void drawableStateChanged():0:0 -> h
    1:1:void jumpDrawablesToCurrentState():0:0 -> i
    1:1:void setTickMark(android.graphics.drawable.Drawable):0:0 -> j
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.D:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    android.content.Context mPopupContext -> c
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/v0;"}
    android.widget.SpinnerAdapter mTempAdapter -> e
    boolean mPopupSet -> f
    androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D$g;"}
    int mDropDownWidth -> h
    android.graphics.Rect mTempRect -> i
    int[] ATTRS_ANDROID_SPINNERMODE -> j
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    1:1:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable):0:0 -> a
    1:1:void showPopup():0:0 -> b
    1:1:void setAdapter(android.widget.Adapter):0:0 -> setAdapter
    2:2:void setAdapter(android.widget.SpinnerAdapter):0:0 -> setAdapter
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.D$a:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D$e;"}
    androidx.appcompat.widget.AppCompatSpinner this$0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D;"}
    1:3:androidx.appcompat.view.menu.ShowableListMenu getPopup():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk/e;"}
    1:1:boolean onForwardingStarted():0:0 -> c
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.D$b:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    androidx.appcompat.widget.AppCompatSpinner this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D;"}
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.D$c:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    androidx.appcompat.app.AlertDialog mPopup -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/app/b;"}
    android.widget.ListAdapter mListAdapter -> c
    java.lang.CharSequence mPrompt -> d
    androidx.appcompat.widget.AppCompatSpinner this$0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D;"}
    1:1:boolean isShowing():0:0 -> a
    1:1:java.lang.CharSequence getHintText():0:0 -> b
    1:1:void setHorizontalOffset(int):0:0 -> c
    1:1:int getHorizontalOffset():0:0 -> d
    1:1:void show(int,int):0:0 -> f
    1:1:void setPromptText(java.lang.CharSequence):0:0 -> h
    1:1:int getVerticalOffset():0:0 -> j
    1:1:void setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> l
    1:1:void setVerticalOffset(int):0:0 -> m
    1:1:android.graphics.drawable.Drawable getBackground():0:0 -> n
    1:1:void setAdapter(android.widget.ListAdapter):0:0 -> o
    1:1:void setHorizontalOriginalOffset(int):0:0 -> p
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.D$d:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    android.widget.SpinnerAdapter mAdapter -> b
    android.widget.ListAdapter mListAdapter -> c
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.E:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.F:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.widget.ThemedSpinnerAdapter m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.G:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.res.Resources$Theme m(android.widget.ThemedSpinnerAdapter):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.widget.H:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.D$e:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    java.lang.CharSequence mHintText -> K
    android.widget.ListAdapter mAdapter -> L
    android.graphics.Rect mVisibleRect -> M
    int mOriginalHorizontalOffset -> N
    androidx.appcompat.widget.AppCompatSpinner this$0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D;"}
    1:1:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/D$e;)V"}
    1:1:void computeContentWidth():0:0 -> O
    1:1:int getHorizontalOriginalOffset():0:0 -> P
    1:1:boolean isVisibleToUser(android.view.View):0:0 -> Q
    1:1:java.lang.CharSequence getHintText():0:0 -> b
    1:1:void show(int,int):0:0 -> f
    1:1:void setPromptText(java.lang.CharSequence):0:0 -> h
    1:1:void setAdapter(android.widget.ListAdapter):0:0 -> o
    1:1:void setHorizontalOriginalOffset(int):0:0 -> p
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.D$e$a:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    androidx.appcompat.widget.AppCompatSpinner val$this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D;"}
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D$e;"}
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.D$e$b:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D$e;"}
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.D$e$c:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> b
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/D$e;"}
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.D$f:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    boolean mShowDropdown -> a
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcelable):0:0 -> <init>
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.D$f$a:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1:1:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/appcompat/widget/D$f;"}
    1:1:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/appcompat/widget/D$f;"}
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> androidx.appcompat.widget.D$g:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    boolean isShowing() -> a
    java.lang.CharSequence getHintText() -> b
    void setHorizontalOffset(int) -> c
    int getHorizontalOffset() -> d
    void show(int,int) -> f
    void setPromptText(java.lang.CharSequence) -> h
    int getVerticalOffset() -> j
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> l
    void setVerticalOffset(int) -> m
    android.graphics.drawable.Drawable getBackground() -> n
    void setAdapter(android.widget.ListAdapter) -> o
    void setHorizontalOriginalOffset(int) -> p
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.N:
# {"id":"sourceFile","fileName":"AppCompatTextClassifierHelper.java"}
    android.widget.TextView mTextView -> a
    android.view.textclassifier.TextClassifier mTextClassifier -> b
    1:1:android.view.textclassifier.TextClassifier getTextClassifier():0:0 -> a
    1:1:void setTextClassifier(android.view.textclassifier.TextClassifier):0:0 -> b
androidx.appcompat.widget.AppCompatTextClassifierHelper$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.I:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Class m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextClassifierHelper$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.J:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object m(android.content.Context,java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextClassifierHelper$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.K:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.textclassifier.TextClassificationManager m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextClassifierHelper$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.widget.L:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.textclassifier.TextClassifier m(android.view.textclassifier.TextClassificationManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextClassifierHelper$$ExternalSyntheticApiModelOutline4 -> androidx.appcompat.widget.M:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.textclassifier.TextClassifier m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.X:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    android.widget.TextView mView -> a
    androidx.appcompat.widget.TintInfo mDrawableLeftTint -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mDrawableTopTint -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mDrawableRightTint -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mDrawableBottomTint -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mDrawableStartTint -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mDrawableEndTint -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.TintInfo mDrawableTint -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/P0;"}
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/k0;"}
    int mStyle -> j
    int mFontWeight -> k
    android.graphics.Typeface mFontTypeface -> l
    boolean mAsyncFontPending -> m
    1:1:void setTextSize(int,float):0:0 -> A
    1:1:void setTextSizeInternal(int,float):0:0 -> B
    1:1:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/widget/R0;)V"}
    1:1:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;Landroidx/appcompat/widget/P0;)V"}
    1:1:void applyCompoundDrawablesTints():0:0 -> b
    1:1:void autoSizeText():0:0 -> c
    1:1:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/widget/m;I)Landroidx/appcompat/widget/P0;"}
    1:1:int getAutoSizeMaxTextSize():0:0 -> e
    1:1:int getAutoSizeMinTextSize():0:0 -> f
    1:1:int getAutoSizeStepGranularity():0:0 -> g
    1:1:int[] getAutoSizeTextAvailableSizes():0:0 -> h
    1:1:int getAutoSizeTextType():0:0 -> i
    1:1:android.content.res.ColorStateList getCompoundDrawableTintList():0:0 -> j
    1:1:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode():0:0 -> k
    1:1:boolean isAutoSizeEnabled():0:0 -> l
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> m
    1:1:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface):0:0 -> n
    1:1:void onLayout(boolean,int,int,int,int):0:0 -> o
    1:1:void onSetCompoundDrawables():0:0 -> p
    1:1:void onSetTextAppearance(android.content.Context,int):0:0 -> q
    1:1:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> r
    1:1:void setAllCaps(boolean):0:0 -> s
    1:1:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0:0 -> t
    1:1:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0:0 -> u
    1:1:void setAutoSizeTextTypeWithDefaults(int):0:0 -> v
    1:1:void setCompoundDrawableTintList(android.content.res.ColorStateList):0:0 -> w
    1:1:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode):0:0 -> x
    1:1:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> y
    1:1:void setCompoundTints():0:0 -> z
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.O:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.widget.TextView,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.P:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList m(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.Q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,android.os.LocaleList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.widget.S:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale m(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline4 -> androidx.appcompat.widget.T:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.widget.TextView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline5 -> androidx.appcompat.widget.U:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline6 -> androidx.appcompat.widget.V:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,int[],int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline7 -> androidx.appcompat.widget.W:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Typeface m(android.graphics.Typeface,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.X$a:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    int val$fontWeight -> a
    int val$style -> b
    java.lang.ref.WeakReference val$textViewWeak -> c
    androidx.appcompat.widget.AppCompatTextHelper this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    1:1:void onFontRetrievalFailed(int):0:0 -> d
    1:1:void onFontRetrieved(android.graphics.Typeface):0:0 -> e
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.X$b:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    android.widget.TextView val$textView -> a
    android.graphics.Typeface val$typeface -> b
    int val$style -> c
    androidx.appcompat.widget.AppCompatTextHelper this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.Y:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/N;"}
    androidx.appcompat.widget.AppCompatEmojiTextHelper mEmojiTextViewHelper -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p;"}
    boolean mIsSetTypefaceProcessing -> f
    java.util.concurrent.Future mPrecomputedTextFuture -> g
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void consumeTextFutureAndSetBlocking():0:0 -> e
    1:5:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat():0:0 -> getTextMetricsParamsCompat
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/n$a;"}
    1:1:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int):0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    2:2:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1:1:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int):0:0 -> setCompoundDrawablesWithIntrinsicBounds
    2:2:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> setCompoundDrawablesWithIntrinsicBounds
    1:4:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat):0:0 -> setPrecomputedText
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n;)V"}
    1:4:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n$a;)V"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.k0:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    int mAutoSizeTextType -> a
    boolean mNeedsAutoSizeText -> b
    float mAutoSizeStepGranularityInPx -> c
    float mAutoSizeMinTextSizeInPx -> d
    float mAutoSizeMaxTextSizeInPx -> e
    int[] mAutoSizeTextSizesInPx -> f
    boolean mHasPresetAutoSizeValues -> g
    android.text.TextPaint mTempTextPaint -> h
    android.widget.TextView mTextView -> i
    android.content.Context mContext -> j
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl mImpl -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/k0$c;"}
    android.graphics.RectF TEMP_RECTF -> l
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> m
    java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache -> n
    1:1:boolean supportsAutoSizeText():0:0 -> A
    1:1:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float):0:0 -> B
    1:1:void autoSizeText():0:0 -> a
    1:1:int[] cleanupAutoSizePresetSizes(int[]):0:0 -> b
    1:1:void clearAutoSizeConfiguration():0:0 -> c
    1:1:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0:0 -> d
    1:1:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0:0 -> e
    1:1:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int):0:0 -> f
    1:1:int findLargestTextSizeWhichFits(android.graphics.RectF):0:0 -> g
    1:1:int getAutoSizeMaxTextSize():0:0 -> h
    1:1:int getAutoSizeMinTextSize():0:0 -> i
    1:1:int getAutoSizeStepGranularity():0:0 -> j
    1:1:int[] getAutoSizeTextAvailableSizes():0:0 -> k
    1:1:int getAutoSizeTextType():0:0 -> l
    1:1:java.lang.reflect.Method getTextViewMethod(java.lang.String):0:0 -> m
    1:1:void initTempTextPaint(int):0:0 -> n
    1:1:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object):0:0 -> o
    1:1:boolean isAutoSizeEnabled():0:0 -> p
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> q
    1:1:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0:0 -> r
    1:1:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0:0 -> s
    1:1:void setAutoSizeTextTypeWithDefaults(int):0:0 -> t
    1:1:void setRawTextSize(float):0:0 -> u
    1:1:void setTextSizeInternal(int,float):0:0 -> v
    1:1:boolean setupAutoSizeText():0:0 -> w
    1:1:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray):0:0 -> x
    1:1:boolean setupAutoSizeUniformPresetSizesConfiguration():0:0 -> y
    1:1:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> z
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.Z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(java.lang.CharSequence,int,int,android.text.TextPaint,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(android.text.StaticLayout$Builder,android.text.Layout$Alignment):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(android.text.StaticLayout$Builder,float,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.widget.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(android.text.StaticLayout$Builder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline4 -> androidx.appcompat.widget.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.widget.TextView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline5 -> androidx.appcompat.widget.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(android.text.StaticLayout$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline6 -> androidx.appcompat.widget.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.widget.TextView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline7 -> androidx.appcompat.widget.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(android.text.StaticLayout$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline8 -> androidx.appcompat.widget.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(android.text.StaticLayout$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$ExternalSyntheticApiModelOutline9 -> androidx.appcompat.widget.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout m(android.text.StaticLayout$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.k0$c:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    1:1:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView):0:0 -> a
    1:1:boolean isHorizontallyScrollable(android.widget.TextView):0:0 -> b
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.k0$a:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    1:1:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView):0:0 -> a
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder m(android.text.StaticLayout$Builder,android.text.TextDirectionHeuristic):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.k0$b:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    1:1:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView):0:0 -> a
    1:1:boolean isHorizontallyScrollable(android.widget.TextView):0:0 -> b
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.widget.TextView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.TextDirectionHeuristic m(android.widget.TextView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.n0:
# {"id":"sourceFile","fileName":"AppCompatToggleButton.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/g;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X;"}
    androidx.appcompat.widget.AppCompatEmojiTextHelper mAppCompatEmojiTextHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/p;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
# {"id":"sourceFile","fileName":"ButtonBarLayout.java"}
    boolean mAllowStacking -> b
    boolean mStacked -> c
    int mLastWidthSize -> d
    1:1:int getNextVisibleChildIndex(int):0:0 -> a
    1:1:boolean isStacked():0:0 -> b
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
    android.util.TypedValue mMinWidthMajor -> b
    android.util.TypedValue mMinWidthMinor -> c
    android.util.TypedValue mFixedWidthMajor -> d
    android.util.TypedValue mFixedWidthMinor -> e
    android.util.TypedValue mFixedHeightMajor -> f
    android.util.TypedValue mFixedHeightMinor -> g
    android.graphics.Rect mDecorPadding -> h
    androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/ContentFrameLayout$a;"}
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void dispatchFitSystemWindows(android.graphics.Rect):0:0 -> a
    1:1:void setDecorPadding(int,int,int,int):0:0 -> b
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> androidx.appcompat.widget.ContentFrameLayout$a:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
    void onAttachedFromWindow() -> a
androidx.appcompat.widget.DecorContentParent -> androidx.appcompat.widget.o0:
# {"id":"sourceFile","fileName":"DecorContentParent.java"}
    boolean showOverflowMenu() -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Menu;Landroidx/appcompat/view/menu/j$a;)V"}
    boolean isOverflowMenuShowPending() -> c
    void setMenuPrepared() -> d
    boolean isOverflowMenuShowing() -> e
    boolean canShowOverflowMenu() -> f
    boolean hideOverflowMenu() -> g
    void initFeature(int) -> h
    void dismissPopups() -> j
androidx.appcompat.widget.DecorToolbar -> androidx.appcompat.widget.p0:
# {"id":"sourceFile","fileName":"DecorToolbar.java"}
    boolean showOverflowMenu() -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Menu;Landroidx/appcompat/view/menu/j$a;)V"}
    boolean isOverflowMenuShowPending() -> c
    void setMenuPrepared() -> d
    boolean isOverflowMenuShowing() -> e
    boolean canShowOverflowMenu() -> f
    boolean hideOverflowMenu() -> g
    void dismissPopupMenus() -> h
    androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJ)Landroidx/core/view/e0;"}
    int getDisplayOptions() -> j
    void setVisibility(int) -> k
    void initProgress() -> l
    boolean hasExpandedActionView() -> m
    void setLogo(int) -> n
    void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/J0;)V"}
    void setHomeButtonEnabled(boolean) -> p
    void initIndeterminateProgress() -> q
    void setCollapsible(boolean) -> r
    android.content.Context getContext() -> s
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setDisplayOptions(int) -> t
    int getNavigationMode() -> u
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
# {"id":"sourceFile","fileName":"DialogTitle.java"}
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.q0:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    int[] CHECKED_STATE_SET -> a
    int[] EMPTY_STATE_SET -> b
    android.graphics.Rect INSETS_NONE -> c
    1:1:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void fixDrawable(android.graphics.drawable.Drawable):0:0 -> b
    1:1:void forceDrawableStateChange(android.graphics.drawable.Drawable):0:0 -> c
    1:1:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode):0:0 -> d
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.t0:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    android.graphics.Rect mSelectorRect -> b
    int mSelectionLeftPadding -> c
    int mSelectionTopPadding -> d
    int mSelectionRightPadding -> e
    int mSelectionBottomPadding -> f
    int mMotionPosition -> g
    java.lang.reflect.Field mIsChildViewEnabled -> h
    androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/t0$a;"}
    boolean mListSelectionHidden -> j
    boolean mHijackFocus -> k
    boolean mDrawsInPressedState -> l
    androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/e0;"}
    androidx.core.widget.ListViewAutoScrollHelper mScrollHelper -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/widget/o;"}
    androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/t0$b;"}
    1:1:void clearPressedItem():0:0 -> a
    1:1:void clickPressedItem(android.view.View,int):0:0 -> b
    1:1:void drawSelectorCompat(android.graphics.Canvas):0:0 -> c
    1:1:int measureHeightOfChildrenCompat(int,int,int,int,int):0:0 -> d
    1:1:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> e
    1:1:void positionSelectorCompat(int,android.view.View):0:0 -> f
    1:1:void positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> g
    1:1:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0:0 -> h
    1:1:void setPressedItem(android.view.View,int,float,float):0:0 -> i
    1:1:void setSelectorEnabled(boolean):0:0 -> j
    1:1:boolean touchModeDrawsInPressedStateCompat():0:0 -> k
    1:1:void updateSelectorStateCompat():0:0 -> l
androidx.appcompat.widget.DropDownListView$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(androidx.appcompat.widget.DropDownListView,float,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/t0;FF)V"}
androidx.appcompat.widget.DropDownListView$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.s0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.view.View,float,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.t0$a:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    boolean mEnabled -> c
    1:1:void setEnabled(boolean):0:0 -> c
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.t0$b:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    androidx.appcompat.widget.DropDownListView this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/t0;"}
    1:1:void cancel():0:0 -> a
    1:1:void post():0:0 -> b
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
# {"id":"sourceFile","fileName":"FitWindowsFrameLayout.java"}
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/u0$a;"}
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
# {"id":"sourceFile","fileName":"FitWindowsLinearLayout.java"}
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/u0$a;"}
androidx.appcompat.widget.FitWindowsViewGroup -> androidx.appcompat.widget.u0:
# {"id":"sourceFile","fileName":"FitWindowsViewGroup.java"}
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> androidx.appcompat.widget.u0$a:
# {"id":"sourceFile","fileName":"FitWindowsViewGroup.java"}
    void onFitSystemWindows(android.graphics.Rect) -> a
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.v0:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    float mScaledTouchSlop -> b
    int mTapTimeout -> c
    int mLongPressTimeout -> d
    android.view.View mSrc -> e
    java.lang.Runnable mDisallowIntercept -> f
    java.lang.Runnable mTriggerLongPress -> g
    boolean mForwarding -> h
    int mActivePointerId -> i
    int[] mTmpLocation -> j
    1:1:void clearCallbacks():0:0 -> a
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk/e;"}
    boolean onForwardingStarted() -> c
    1:1:boolean onForwardingStopped():0:0 -> d
    1:1:void onLongPress():0:0 -> e
    1:1:boolean onTouchForwarded(android.view.MotionEvent):0:0 -> f
    1:1:boolean onTouchObserved(android.view.MotionEvent):0:0 -> g
    1:1:boolean pointInView(android.view.View,float,float,float):0:0 -> h
    1:1:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> i
    1:1:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> j
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.v0$a:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    androidx.appcompat.widget.ForwardingListener this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/v0;"}
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.v0$b:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    androidx.appcompat.widget.ForwardingListener this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/v0;"}
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.w0:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    boolean mBaselineAligned -> b
    int mBaselineAlignedChildIndex -> c
    int mBaselineChildTop -> d
    int mOrientation -> e
    int mGravity -> f
    int mTotalLength -> g
    float mWeightSum -> h
    boolean mUseLargestChild -> i
    int[] mMaxAscent -> j
    int[] mMaxDescent -> k
    android.graphics.drawable.Drawable mDivider -> l
    int mDividerWidth -> m
    int mDividerHeight -> n
    int mShowDividers -> o
    int mDividerPadding -> p
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void drawDividersHorizontal(android.graphics.Canvas):0:0 -> e
    1:1:void drawDividersVertical(android.graphics.Canvas):0:0 -> f
    1:1:void drawHorizontalDivider(android.graphics.Canvas,int):0:0 -> g
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    1:1:void drawVerticalDivider(android.graphics.Canvas,int):0:0 -> h
    1:1:void forceUniformHeight(int,int):0:0 -> i
    1:1:void forceUniformWidth(int,int):0:0 -> j
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/w0$a;"}
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/AttributeSet;)Landroidx/appcompat/widget/w0$a;"}
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Landroidx/appcompat/widget/w0$a;"}
    1:1:int getChildrenSkipCount(android.view.View,int):0:0 -> n
    1:1:int getLocationOffset(android.view.View):0:0 -> o
    1:1:int getNextLocationOffset(android.view.View):0:0 -> p
    1:1:android.view.View getVirtualChildAt(int):0:0 -> q
    1:1:boolean hasDividerBeforeChildAt(int):0:0 -> r
    1:1:void layoutHorizontal(int,int,int,int):0:0 -> s
    1:1:void layoutVertical(int,int,int,int):0:0 -> t
    1:1:void measureChildBeforeLayout(android.view.View,int,int,int,int,int):0:0 -> u
    1:1:void measureHorizontal(int,int):0:0 -> v
    1:1:int measureNullChild(int):0:0 -> w
    1:1:void measureVertical(int,int):0:0 -> x
    1:1:void setChildFrame(android.view.View,int,int,int,int):0:0 -> y
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.w0$a:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.A0:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0$c;"}
    java.lang.Runnable mShowDropDownRunnable -> B
    android.os.Handler mHandler -> C
    android.graphics.Rect mTempRect -> D
    android.graphics.Rect mEpicenterBounds -> E
    boolean mModal -> F
    android.widget.PopupWindow mPopup -> G
    java.lang.reflect.Method sSetClipToWindowEnabledMethod -> H
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> I
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> J
    android.content.Context mContext -> b
    android.widget.ListAdapter mAdapter -> c
    androidx.appcompat.widget.DropDownListView mDropDownList -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/t0;"}
    int mDropDownHeight -> e
    int mDropDownWidth -> f
    int mDropDownHorizontalOffset -> g
    int mDropDownVerticalOffset -> h
    int mDropDownWindowLayoutType -> i
    boolean mDropDownVerticalOffsetSet -> j
    boolean mOverlapAnchor -> k
    boolean mOverlapAnchorSet -> l
    int mDropDownGravity -> m
    boolean mDropDownAlwaysVisible -> n
    boolean mForceIgnoreOutsideTouch -> o
    int mListItemExpandMaximum -> p
    android.view.View mPromptView -> q
    int mPromptPosition -> r
    android.database.DataSetObserver mObserver -> s
    android.view.View mDropDownAnchorView -> t
    android.graphics.drawable.Drawable mDropDownListHighlight -> u
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> v
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> w
    androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0$g;"}
    androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0$f;"}
    androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0$e;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void setAnimationStyle(int):0:0 -> A
    1:1:void setContentWidth(int):0:0 -> B
    1:1:void setDropDownGravity(int):0:0 -> C
    1:1:void setEpicenterBounds(android.graphics.Rect):0:0 -> D
    1:1:void setInputMethodMode(int):0:0 -> E
    1:1:void setModal(boolean):0:0 -> F
    1:1:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> G
    1:1:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> H
    1:1:void setOverlapAnchor(boolean):0:0 -> I
    1:1:void setPopupClipToScreenEnabled(boolean):0:0 -> J
    1:1:void setPromptPosition(int):0:0 -> K
    1:1:void setSelection(int):0:0 -> L
    1:1:void setWidth(int):0:0 -> M
    1:1:boolean isShowing():0:0 -> a
    1:1:void setHorizontalOffset(int):0:0 -> c
    1:1:int getHorizontalOffset():0:0 -> d
    1:1:android.widget.ListView getListView():0:0 -> e
    1:1:void show():0:0 -> i
    1:1:int getVerticalOffset():0:0 -> j
    1:1:void setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> l
    1:1:void setVerticalOffset(int):0:0 -> m
    1:1:android.graphics.drawable.Drawable getBackground():0:0 -> n
    1:1:void setAdapter(android.widget.ListAdapter):0:0 -> o
    1:1:int buildDropDown():0:0 -> q
    1:1:void clearListSelection():0:0 -> r
    1:1:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Landroidx/appcompat/widget/t0;"}
    1:1:android.view.View getAnchorView():0:0 -> t
    1:1:int getMaxAvailableHeight(android.view.View,int,boolean):0:0 -> u
    1:1:int getWidth():0:0 -> v
    1:1:boolean isInputMethodNotNeeded():0:0 -> w
    1:1:boolean isModal():0:0 -> x
    1:1:void removePromptView():0:0 -> y
    1:1:void setAnchorView(android.view.View):0:0 -> z
androidx.appcompat.widget.ListPopupWindow$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.x0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.PopupWindow,android.graphics.Rect):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ListPopupWindow$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.y0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.widget.PopupWindow,android.view.View,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ListPopupWindow$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.z0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.PopupWindow,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.A0$a:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0;"}
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.A0$b:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0;"}
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.A0$c:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0;"}
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.A0$d:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0;"}
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.A0$e:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0;"}
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.A0$f:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0;"}
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.A0$g:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/A0;"}
androidx.appcompat.widget.MenuItemHoverListener -> androidx.appcompat.widget.B0:
# {"id":"sourceFile","fileName":"MenuItemHoverListener.java"}
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)V"}
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)V"}
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.F0:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/B0;"}
    java.lang.reflect.Method sSetTouchModalMethod -> L
    1:1:void setEnterTransition(java.lang.Object):0:0 -> N
    1:1:void setExitTransition(java.lang.Object):0:0 -> O
    1:1:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/B0;)V"}
    1:1:void setTouchModal(boolean):0:0 -> Q
    1:1:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)V"}
    1:1:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroid/view/MenuItem;)V"}
    1:1:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Landroidx/appcompat/widget/t0;"}
androidx.appcompat.widget.MenuPopupWindow$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.C0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.PopupWindow,android.transition.Transition):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.MenuPopupWindow$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.D0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.PopupWindow,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.MenuPopupWindow$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.E0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.PopupWindow,android.transition.Transition):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.F0$a:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    int mAdvanceKey -> p
    int mRetreatKey -> q
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/B0;"}
    android.view.MenuItem mHoveredMenuItem -> s
    1:1:int measureHeightOfChildrenCompat(int,int,int,int,int):0:0 -> d
    1:1:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> e
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.G0:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    java.util.WeakHashMap mTintLists -> a
    androidx.collection.SimpleArrayMap mDelegates -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    androidx.collection.SparseArrayCompat mKnownDrawableIdTags -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/h;"}
    java.util.WeakHashMap mDrawableCaches -> d
    android.util.TypedValue mTypedValue -> e
    boolean mHasCheckedVectorDrawableSetup -> f
    androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/G0$f;"}
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> h
    androidx.appcompat.widget.ResourceManagerInternal INSTANCE -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/G0;"}
    androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/G0$c;"}
    1:1:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/appcompat/widget/G0$e;)V"}
    1:1:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable):0:0 -> b
    1:1:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> c
    1:1:void checkVectorDrawableSetup(android.content.Context):0:0 -> d
    1:1:long createCacheKey(android.util.TypedValue):0:0 -> e
    1:1:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0:0 -> f
    1:1:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]):0:0 -> g
    1:1:androidx.appcompat.widget.ResourceManagerInternal get():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/G0;"}
    1:1:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> i
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> j
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> k
    1:1:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> l
    1:1:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> m
    1:1:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int):0:0 -> n
    1:1:android.graphics.PorterDuff$Mode getTintMode(int):0:0 -> o
    1:1:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/G0;)V"}
    1:1:boolean isVectorDrawable(android.graphics.drawable.Drawable):0:0 -> q
    1:1:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> r
    1:1:void onConfigurationChanged(android.content.Context):0:0 -> s
    1:1:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/widget/Y0;I)Landroid/graphics/drawable/Drawable;"}
    1:1:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/G0$f;)V"}
    1:1:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0:0 -> v
    1:1:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;Landroidx/appcompat/widget/P0;[I)V"}
    1:1:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> x
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.G0$a:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    1:1:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.G0$b:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    1:1:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.G0$c:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    1:1:int generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> h
    1:1:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode):0:0 -> i
    1:1:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0:0 -> j
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate -> androidx.appcompat.widget.G0$d:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    1:1:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> androidx.appcompat.widget.G0$e:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> androidx.appcompat.widget.G0$f:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/G0;Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;"}
    android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> b
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> c
    boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> d
    android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> e
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.G0$g:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    1:1:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.H0:
# {"id":"sourceFile","fileName":"ResourcesWrapper.java"}
    android.content.res.Resources mResources -> a
    1:1:android.graphics.drawable.Drawable getDrawableCanonical(int):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawableForDensity(int,int):0:0 -> getDrawableForDensity
    2:2:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme):0:0 -> getDrawableForDensity
    1:1:java.lang.String getQuantityString(int,int):0:0 -> getQuantityString
    2:2:java.lang.String getQuantityString(int,int,java.lang.Object[]):0:0 -> getQuantityString
    1:1:java.lang.String getString(int):0:0 -> getString
    2:2:java.lang.String getString(int,java.lang.Object[]):0:0 -> getString
    1:1:java.lang.CharSequence getText(int):0:0 -> getText
    2:2:java.lang.CharSequence getText(int,java.lang.CharSequence):0:0 -> getText
    1:1:void getValue(int,android.util.TypedValue,boolean):0:0 -> getValue
    2:2:void getValue(java.lang.String,android.util.TypedValue,boolean):0:0 -> getValue
    1:1:java.io.InputStream openRawResource(int):0:0 -> openRawResource
    2:2:java.io.InputStream openRawResource(int,android.util.TypedValue):0:0 -> openRawResource
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.I0:
# {"id":"sourceFile","fileName":"RtlSpacingHelper.java"}
    int mLeft -> a
    int mRight -> b
    int mStart -> c
    int mEnd -> d
    int mExplicitLeft -> e
    int mExplicitRight -> f
    boolean mIsRtl -> g
    boolean mIsRelative -> h
    1:1:int getEnd():0:0 -> a
    1:1:int getLeft():0:0 -> b
    1:1:int getRight():0:0 -> c
    1:1:int getStart():0:0 -> d
    1:1:void setAbsolute(int,int):0:0 -> e
    1:1:void setDirection(boolean):0:0 -> f
    1:1:void setRelative(int,int):0:0 -> g
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.J0:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
# {"id":"sourceFile","fileName":"SearchView.java"}
    android.graphics.Rect mSearchSrcTextViewBounds -> A
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> B
    int[] mTemp -> C
    int[] mTemp2 -> D
    android.widget.ImageView mCollapsedIcon -> E
    android.graphics.drawable.Drawable mSearchHintIcon -> F
    int mSuggestionRowLayout -> G
    int mSuggestionCommitIconResId -> H
    android.content.Intent mVoiceWebSearchIntent -> I
    android.content.Intent mVoiceAppSearchIntent -> J
    java.lang.CharSequence mDefaultQueryHint -> K
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> L
    android.view.View$OnClickListener mOnSearchClickListener -> M
    boolean mIconifiedByDefault -> N
    boolean mIconified -> O
    androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"LC/a;"}
    boolean mSubmitButtonEnabled -> Q
    java.lang.CharSequence mQueryHint -> R
    boolean mQueryRefinement -> S
    boolean mClearingFocus -> T
    int mMaxWidth -> U
    boolean mVoiceButtonEnabled -> V
    java.lang.CharSequence mOldQueryText -> W
    java.lang.CharSequence mUserQuery -> a0
    boolean mExpandedInActionView -> b0
    int mCollapsedImeOptions -> c0
    android.app.SearchableInfo mSearchable -> d0
    android.os.Bundle mAppSearchData -> e0
    java.lang.Runnable mUpdateDrawableStateRunnable -> f0
    java.lang.Runnable mReleaseCursorRunnable -> g0
    java.util.WeakHashMap mOutsideDrawablesCache -> h0
    android.view.View$OnClickListener mOnClickListener -> i0
    android.view.View$OnKeyListener mTextKeyListener -> j0
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> k0
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> l0
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> m0
    android.text.TextWatcher mTextWatcher -> n0
    androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector PRE_API_29_HIDDEN_METHOD_INVOKER -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/SearchView$n;"}
    androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> q
    android.view.View mSearchEditFrame -> r
    android.view.View mSearchPlate -> s
    android.view.View mSubmitArea -> t
    android.widget.ImageView mSearchButton -> u
    android.widget.ImageView mGoButton -> v
    android.widget.ImageView mCloseButton -> w
    android.widget.ImageView mVoiceButton -> x
    android.view.View mDropDownAnchor -> y
    androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/SearchView$p;"}
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String):0:0 -> A
    1:1:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> B
    1:1:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo):0:0 -> C
    1:1:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo):0:0 -> D
    1:1:void dismissSuggestions():0:0 -> E
    1:1:void forceSuggestionQuery():0:0 -> F
    1:1:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect):0:0 -> G
    1:1:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence):0:0 -> H
    1:1:boolean hasVoiceSearch():0:0 -> I
    1:1:boolean isIconified():0:0 -> J
    1:1:boolean isLandscapeMode(android.content.Context):0:0 -> K
    1:1:boolean isSubmitAreaEnabled():0:0 -> L
    1:1:void launchIntent(android.content.Intent):0:0 -> M
    1:1:void launchQuerySearch(int,java.lang.String,java.lang.String):0:0 -> N
    1:1:boolean launchSuggestion(int,int,java.lang.String):0:0 -> O
    1:1:void onCloseClicked():0:0 -> P
    1:1:boolean onItemClicked(int,int,java.lang.String):0:0 -> Q
    1:1:boolean onItemSelected(int):0:0 -> R
    1:1:void onQueryRefine(java.lang.CharSequence):0:0 -> S
    1:1:void onSearchClicked():0:0 -> T
    1:1:void onSubmitQuery():0:0 -> U
    1:1:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0:0 -> V
    1:1:void onTextChanged(java.lang.CharSequence):0:0 -> W
    1:1:void onTextFocusChanged():0:0 -> X
    1:1:void onVoiceClicked():0:0 -> Y
    1:1:void postUpdateFocusedState():0:0 -> Z
    1:1:void onActionViewExpanded():0:0 -> a
    1:1:void rewriteQueryFromSuggestion(int):0:0 -> a0
    1:1:void setQuery(java.lang.CharSequence,boolean):0:0 -> b0
    1:1:void updateCloseButton():0:0 -> c0
    1:1:void onActionViewCollapsed():0:0 -> d
    1:1:void updateFocusedState():0:0 -> d0
    1:1:void updateQueryHint():0:0 -> e0
    1:1:void updateSearchAutoComplete():0:0 -> f0
    1:1:void updateSubmitArea():0:0 -> g0
    1:3:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter():0:0 -> getSuggestionsAdapter
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LC/a;"}
    1:1:void updateSubmitButton(boolean):0:0 -> h0
    1:1:void updateViewsVisibility(boolean):0:0 -> i0
    1:1:void updateVoiceButton(boolean):0:0 -> j0
    1:8:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter):0:0 -> setSuggestionsAdapter
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LC/a;)V"}
    1:1:void adjustDropDownSizeAndPosition():0:0 -> z
androidx.appcompat.widget.SearchView$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.K0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(androidx.appcompat.widget.SearchView$SearchAutoComplete):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$b:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$a:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$c:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$d:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$e:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$f:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$g:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$h:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$i:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$j:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$OnCloseListener -> androidx.appcompat.widget.SearchView$k:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnQueryTextListener -> androidx.appcompat.widget.SearchView$l:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnSuggestionListener -> androidx.appcompat.widget.SearchView$m:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$n:
# {"id":"sourceFile","fileName":"SearchView.java"}
    java.lang.reflect.Method mDoBeforeTextChanged -> a
    java.lang.reflect.Method mDoAfterTextChanged -> b
    java.lang.reflect.Method mEnsureImeVisible -> c
    1:1:void doAfterTextChanged(android.widget.AutoCompleteTextView):0:0 -> a
    1:1:void doBeforeTextChanged(android.widget.AutoCompleteTextView):0:0 -> b
    1:1:void ensureImeVisible(android.widget.AutoCompleteTextView):0:0 -> c
    1:1:void preApi29Check():0:0 -> d
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$o:
# {"id":"sourceFile","fileName":"SearchView.java"}
    boolean isIconified -> c
    1:1:void <init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    2:2:void <init>(android.os.Parcelable):0:0 -> <init>
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$o$a:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1:1:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/appcompat/widget/SearchView$o;"}
    1:1:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ljava/lang/ClassLoader;)Landroidx/appcompat/widget/SearchView$o;"}
    1:1:androidx.appcompat.widget.SearchView$SavedState[] newArray(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/appcompat/widget/SearchView$o;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
# {"id":"sourceFile","fileName":"SearchView.java"}
    int mThreshold -> f
    androidx.appcompat.widget.SearchView mSearchView -> g
    boolean mHasPendingShowSoftInputRequest -> h
    java.lang.Runnable mRunShowSoftInputIfNecessary -> i
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void ensureImeVisible():0:0 -> b
    1:1:boolean isEmpty():0:0 -> c
    1:1:void showSoftInputIfNecessary():0:0 -> d
androidx.appcompat.widget.SearchView$SearchAutoComplete$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.L0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(androidx.appcompat.widget.SearchView$SearchAutoComplete,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$a:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView$SearchAutoComplete this$0 -> a
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$p:
# {"id":"sourceFile","fileName":"SearchView.java"}
    android.view.View mDelegateView -> a
    android.graphics.Rect mTargetBounds -> b
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    int mSlop -> e
    boolean mDelegateTargeted -> f
    1:1:void setBounds(android.graphics.Rect,android.graphics.Rect):0:0 -> a
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.M0:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    androidx.appcompat.widget.SearchView mSearchView -> m
    android.app.SearchableInfo mSearchable -> n
    android.content.Context mProviderContext -> o
    java.util.WeakHashMap mOutsideDrawablesCache -> p
    int mCommitIconResId -> q
    boolean mClosed -> r
    int mQueryRefinement -> s
    android.content.res.ColorStateList mUrlColor -> t
    int mText1Col -> u
    int mText2Col -> v
    int mText2UrlCol -> w
    int mIconName1Col -> x
    int mIconName2Col -> y
    int mFlagsCol -> z
    1:1:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> A
    1:1:void updateSpinnerState(android.database.Cursor):0:0 -> B
    1:1:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> a
    1:1:void changeCursor(android.database.Cursor):0:0 -> c
    1:1:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence):0:0 -> d
    1:1:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> e
    1:1:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> h
    1:1:android.graphics.drawable.Drawable checkIconCache(java.lang.String):0:0 -> k
    1:1:java.lang.CharSequence formatUrl(java.lang.CharSequence):0:0 -> l
    1:1:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName):0:0 -> m
    1:1:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName):0:0 -> n
    1:1:java.lang.String getColumnString(android.database.Cursor,java.lang.String):0:0 -> o
    1:1:android.graphics.drawable.Drawable getDefaultIcon1():0:0 -> p
    1:1:android.graphics.drawable.Drawable getDrawable(android.net.Uri):0:0 -> q
    1:1:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri):0:0 -> r
    1:1:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> s
    1:1:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0:0 -> t
    1:1:android.graphics.drawable.Drawable getIcon2(android.database.Cursor):0:0 -> u
    1:1:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int):0:0 -> v
    1:1:java.lang.String getStringOrNull(android.database.Cursor,int):0:0 -> w
    1:1:void setQueryRefinement(int):0:0 -> x
    1:1:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> y
    1:1:void setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> z
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.M0$a:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.N0:
# {"id":"sourceFile","fileName":"ThemeUtils.java"}
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] ACTIVATED_STATE_SET -> d
    int[] PRESSED_STATE_SET -> e
    int[] CHECKED_STATE_SET -> f
    int[] SELECTED_STATE_SET -> g
    int[] NOT_PRESSED_OR_FOCUSED_STATE_SET -> h
    int[] EMPTY_STATE_SET -> i
    int[] TEMP_ARRAY -> j
    1:1:void checkAppCompatTheme(android.view.View,android.content.Context):0:0 -> a
    1:1:int getDisabledThemeAttrColor(android.content.Context,int):0:0 -> b
    1:1:int getThemeAttrColor(android.content.Context,int):0:0 -> c
    1:1:int getThemeAttrColor(android.content.Context,int,float):0:0 -> d
    1:1:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0:0 -> e
    1:1:android.util.TypedValue getTypedValue():0:0 -> f
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.O0:
# {"id":"sourceFile","fileName":"TintContextWrapper.java"}
    android.content.res.Resources mResources -> a
    android.content.res.Resources$Theme mTheme -> b
    java.lang.Object CACHE_LOCK -> c
    java.util.ArrayList sCache -> d
    1:1:boolean shouldWrap(android.content.Context):0:0 -> a
    1:1:android.content.Context wrap(android.content.Context):0:0 -> b
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.P0:
# {"id":"sourceFile","fileName":"TintInfo.java"}
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
    1:1:void clear():0:0 -> a
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.Q0:
# {"id":"sourceFile","fileName":"TintResources.java"}
    java.lang.ref.WeakReference mContextRef -> b
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.R0:
# {"id":"sourceFile","fileName":"TintTypedArray.java"}
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.util.TypedValue mTypedValue -> c
    1:1:boolean getBoolean(int,boolean):0:0 -> a
    1:1:int getColor(int,int):0:0 -> b
    1:1:android.content.res.ColorStateList getColorStateList(int):0:0 -> c
    1:1:int getDimensionPixelOffset(int,int):0:0 -> d
    1:1:int getDimensionPixelSize(int,int):0:0 -> e
    1:1:android.graphics.drawable.Drawable getDrawable(int):0:0 -> f
    1:1:android.graphics.drawable.Drawable getDrawableIfKnown(int):0:0 -> g
    1:1:float getFloat(int,float):0:0 -> h
    1:31:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILr/k$d;)Landroid/graphics/Typeface;"}
    1:1:int getInt(int,int):0:0 -> j
    1:1:int getInteger(int,int):0:0 -> k
    1:1:int getLayoutDimension(int,int):0:0 -> l
    1:1:int getResourceId(int,int):0:0 -> m
    1:1:java.lang.String getString(int):0:0 -> n
    1:1:java.lang.CharSequence getText(int):0:0 -> o
    1:1:java.lang.CharSequence[] getTextArray(int):0:0 -> p
    1:1:android.content.res.TypedArray getWrappedTypeArray():0:0 -> q
    1:1:boolean hasValue(int):0:0 -> r
    1:1:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;I[I)Landroidx/appcompat/widget/R0;"}
    1:1:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;[I)Landroidx/appcompat/widget/R0;"}
    1:1:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;[III)Landroidx/appcompat/widget/R0;"}
    1:1:void recycle():0:0 -> v
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    android.content.res.ColorStateList mTitleTextColor -> A
    android.content.res.ColorStateList mSubtitleTextColor -> B
    boolean mEatingTouch -> C
    boolean mEatingHover -> D
    java.util.ArrayList mTempViews -> E
    java.util.ArrayList mHiddenViews -> F
    int[] mTempMargins -> G
    androidx.core.view.MenuHostHelper mMenuHostHelper -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/v;"}
    java.util.ArrayList mProvidedMenuItems -> I
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/ActionMenuView$e;"}
    androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/T0;"}
    androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/Toolbar$d;"}
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/j$a;"}
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e$a;"}
    boolean mCollapsible -> P
    java.lang.Runnable mShowOverflowMenuRunnable -> Q
    androidx.appcompat.widget.ActionMenuView mMenuView -> b
    android.widget.TextView mTitleTextView -> c
    android.widget.TextView mSubtitleTextView -> d
    android.widget.ImageButton mNavButtonView -> e
    android.widget.ImageView mLogoView -> f
    android.graphics.drawable.Drawable mCollapseIcon -> g
    java.lang.CharSequence mCollapseDescription -> h
    android.widget.ImageButton mCollapseButtonView -> i
    android.view.View mExpandedActionView -> j
    android.content.Context mPopupContext -> k
    int mPopupTheme -> l
    int mTitleTextAppearance -> m
    int mSubtitleTextAppearance -> n
    int mButtonGravity -> o
    int mMaxButtonHeight -> p
    int mTitleMarginStart -> q
    int mTitleMarginEnd -> r
    int mTitleMarginTop -> s
    int mTitleMarginBottom -> t
    androidx.appcompat.widget.RtlSpacingHelper mContentInsets -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/I0;"}
    int mContentInsetStartWithNavigation -> v
    int mContentInsetEndWithActions -> w
    int mGravity -> x
    java.lang.CharSequence mTitleText -> y
    java.lang.CharSequence mSubtitleText -> z
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:boolean isOverflowMenuShowPending():0:0 -> A
    1:1:boolean isOverflowMenuShowing():0:0 -> B
    1:1:int layoutChildLeft(android.view.View,int,int[],int):0:0 -> C
    1:1:int layoutChildRight(android.view.View,int,int[],int):0:0 -> D
    1:1:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]):0:0 -> E
    1:1:void measureChildConstrained(android.view.View,int,int,int,int,int):0:0 -> F
    1:1:void onCreateMenu():0:0 -> G
    1:1:void postShowOverflowMenu():0:0 -> H
    1:1:void removeChildrenForExpandedActionView():0:0 -> I
    1:1:void setContentInsetsRelative(int,int):0:0 -> J
    1:1:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/widget/e;)V"}
    1:1:void setSubtitleTextAppearance(android.content.Context,int):0:0 -> L
    1:1:void setTitleTextAppearance(android.content.Context,int):0:0 -> M
    1:1:boolean shouldCollapse():0:0 -> N
    1:1:boolean shouldLayout(android.view.View):0:0 -> O
    1:1:boolean showOverflowMenu():0:0 -> P
    1:1:void addChildrenForExpandedActionView():0:0 -> a
    1:1:void addCustomViewsWithGravity(java.util.List,int):0:0 -> b
    1:1:void addSystemView(android.view.View,boolean):0:0 -> c
    1:1:boolean canShowOverflowMenu():0:0 -> d
    1:1:void collapseActionView():0:0 -> e
    1:1:void dismissPopupMenus():0:0 -> f
    1:1:void ensureCollapseButtonView():0:0 -> g
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    1:1:void ensureContentInsets():0:0 -> h
    1:1:void ensureLogoView():0:0 -> i
    1:1:void ensureMenu():0:0 -> j
    1:1:void ensureMenuView():0:0 -> k
    1:1:void ensureNavButtonView():0:0 -> l
    1:1:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/appcompat/widget/Toolbar$e;"}
    1:1:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/AttributeSet;)Landroidx/appcompat/widget/Toolbar$e;"}
    1:1:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Landroidx/appcompat/widget/Toolbar$e;"}
    1:1:int getChildHorizontalGravity(int):0:0 -> p
    1:1:int getChildTop(android.view.View,int):0:0 -> q
    1:1:int getChildVerticalGravity(int):0:0 -> r
    1:1:int getHorizontalMargins(android.view.View):0:0 -> s
    1:1:void setCollapseContentDescription(int):0:0 -> setCollapseContentDescription
    2:2:void setCollapseContentDescription(java.lang.CharSequence):0:0 -> setCollapseContentDescription
    1:1:void setCollapseIcon(int):0:0 -> setCollapseIcon
    2:2:void setCollapseIcon(android.graphics.drawable.Drawable):0:0 -> setCollapseIcon
    1:1:void setLogo(int):0:0 -> setLogo
    2:2:void setLogo(android.graphics.drawable.Drawable):0:0 -> setLogo
    1:1:void setLogoDescription(int):0:0 -> setLogoDescription
    2:2:void setLogoDescription(java.lang.CharSequence):0:0 -> setLogoDescription
    1:1:void setNavigationContentDescription(int):0:0 -> setNavigationContentDescription
    2:2:void setNavigationContentDescription(java.lang.CharSequence):0:0 -> setNavigationContentDescription
    1:1:void setNavigationIcon(int):0:0 -> setNavigationIcon
    2:2:void setNavigationIcon(android.graphics.drawable.Drawable):0:0 -> setNavigationIcon
    1:1:void setSubtitle(int):0:0 -> setSubtitle
    2:2:void setSubtitle(java.lang.CharSequence):0:0 -> setSubtitle
    1:1:void setSubtitleTextColor(int):0:0 -> setSubtitleTextColor
    2:2:void setSubtitleTextColor(android.content.res.ColorStateList):0:0 -> setSubtitleTextColor
    1:1:void setTitle(int):0:0 -> setTitle
    2:2:void setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:void setTitleTextColor(int):0:0 -> setTitleTextColor
    2:2:void setTitleTextColor(android.content.res.ColorStateList):0:0 -> setTitleTextColor
    1:1:int getVerticalMargins(android.view.View):0:0 -> t
    1:1:int getViewListMeasuredWidth(java.util.List,int[]):0:0 -> u
    1:1:boolean hasExpandedActionView():0:0 -> v
    1:1:boolean hideOverflowMenu():0:0 -> w
    1:1:void inflateMenu(int):0:0 -> x
    1:1:void invalidateMenu():0:0 -> y
    1:1:boolean isChildOrHidden(android.view.View):0:0 -> z
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.S0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$b6d9ed3bdf57a744d1a9443e7c3a94f21aac3f944e48fce4a198584d7d6a75cf$0.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void <init>(androidx.appcompat.widget.Toolbar):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$a:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    androidx.appcompat.widget.Toolbar this$0 -> a
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$b:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    androidx.appcompat.widget.Toolbar this$0 -> a
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$c:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    androidx.appcompat.widget.Toolbar this$0 -> b
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$d:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/e;"}
    androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/view/menu/g;"}
    androidx.appcompat.widget.Toolbar this$0 -> d
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Z)V"}
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/m;)Z"}
    1:1:boolean flagActionItems():0:0 -> g
    1:1:void updateMenuView(boolean):0:0 -> h
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/appcompat/view/menu/e;)V"}
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/view/menu/e;Landroidx/appcompat/view/menu/g;)Z"}
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$e:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    int mViewType -> b
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
    4:4:void <init>(android.view.ViewGroup$MarginLayoutParams):0:0 -> <init>
    5:5:void <init>(androidx.appcompat.app.ActionBar$LayoutParams):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/app/a$a;)V"}
    6:6:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/Toolbar$e;)V"}
    1:1:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams):0:0 -> a
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> androidx.appcompat.widget.Toolbar$f:
# {"id":"sourceFile","fileName":"Toolbar.java"}
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$g:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    int expandedMenuItemId -> c
    boolean isOverflowOpen -> d
    1:1:void <init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    2:2:void <init>(android.os.Parcelable):0:0 -> <init>
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$g$a:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    1:1:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/appcompat/widget/Toolbar$g;"}
    1:1:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ljava/lang/ClassLoader;)Landroidx/appcompat/widget/Toolbar$g;"}
    1:1:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/appcompat/widget/Toolbar$g;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.T0:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    androidx.appcompat.widget.Toolbar mToolbar -> a
    int mDisplayOpts -> b
    android.view.View mTabView -> c
    android.view.View mCustomView -> d
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.graphics.drawable.Drawable mNavIcon -> g
    boolean mTitleSet -> h
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    android.view.Window$Callback mWindowCallback -> l
    boolean mMenuPrepared -> m
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/e;"}
    int mNavigationMode -> o
    int mDefaultNavigationContentDescription -> p
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> q
    1:1:void <init>(androidx.appcompat.widget.Toolbar,boolean):0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    1:1:void setNavigationContentDescription(java.lang.CharSequence):0:0 -> A
    1:1:void setNavigationIcon(android.graphics.drawable.Drawable):0:0 -> B
    1:1:void setSubtitle(java.lang.CharSequence):0:0 -> C
    1:1:void setTitle(java.lang.CharSequence):0:0 -> D
    1:1:void setTitleInt(java.lang.CharSequence):0:0 -> E
    1:1:void updateHomeAccessibility():0:0 -> F
    1:1:void updateNavigationIcon():0:0 -> G
    1:1:void updateToolbarLogo():0:0 -> H
    1:1:boolean showOverflowMenu():0:0 -> a
    1:1:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Menu;Landroidx/appcompat/view/menu/j$a;)V"}
    1:1:boolean isOverflowMenuShowPending():0:0 -> c
    1:1:void setMenuPrepared():0:0 -> d
    1:1:boolean isOverflowMenuShowing():0:0 -> e
    1:1:boolean canShowOverflowMenu():0:0 -> f
    1:1:boolean hideOverflowMenu():0:0 -> g
    1:1:void dismissPopupMenus():0:0 -> h
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJ)Landroidx/core/view/e0;"}
    1:1:int getDisplayOptions():0:0 -> j
    1:1:void setVisibility(int):0:0 -> k
    1:1:void initProgress():0:0 -> l
    1:1:boolean hasExpandedActionView():0:0 -> m
    1:1:void setLogo(int):0:0 -> n
    1:1:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/J0;)V"}
    1:1:void setHomeButtonEnabled(boolean):0:0 -> p
    1:1:void initIndeterminateProgress():0:0 -> q
    1:1:void setCollapsible(boolean):0:0 -> r
    1:1:android.content.Context getContext():0:0 -> s
    1:1:void setIcon(int):0:0 -> setIcon
    2:2:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:void setDisplayOptions(int):0:0 -> t
    1:1:int getNavigationMode():0:0 -> u
    1:1:int detectDisplayOptions():0:0 -> v
    1:1:void setCustomView(android.view.View):0:0 -> w
    1:1:void setDefaultNavigationContentDescription(int):0:0 -> x
    1:1:void setLogo(android.graphics.drawable.Drawable):0:0 -> y
    1:1:void setNavigationContentDescription(int):0:0 -> z
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.T0$a:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    androidx.appcompat.view.menu.ActionMenuItem mNavItem -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/T0;"}
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.T0$b:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    boolean mCanceled -> a
    int val$visibility -> b
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/T0;"}
    1:1:void onAnimationEnd(android.view.View):0:0 -> a
    1:1:void onAnimationStart(android.view.View):0:0 -> b
    1:1:void onAnimationCancel(android.view.View):0:0 -> c
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.V0:
# {"id":"sourceFile","fileName":"TooltipCompat.java"}
    1:1:void setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> a
androidx.appcompat.widget.TooltipCompat$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.U0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.view.View,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.W0:
# {"id":"sourceFile","fileName":"TooltipCompatHandler.java"}
    android.view.View mAnchor -> b
    java.lang.CharSequence mTooltipText -> c
    int mHoverSlop -> d
    java.lang.Runnable mShowRunnable -> e
    java.lang.Runnable mHideRunnable -> f
    int mAnchorX -> g
    int mAnchorY -> h
    androidx.appcompat.widget.TooltipPopup mPopup -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/X0;"}
    boolean mFromTouch -> j
    androidx.appcompat.widget.TooltipCompatHandler sPendingHandler -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/W0;"}
    androidx.appcompat.widget.TooltipCompatHandler sActiveHandler -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/W0;"}
    1:1:void cancelPendingShow():0:0 -> a
    1:1:void clearAnchorPos():0:0 -> b
    1:1:void hide():0:0 -> c
    1:1:void scheduleShow():0:0 -> d
    1:1:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/W0;)V"}
    1:1:void setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> f
    1:1:void show(boolean):0:0 -> g
    1:1:boolean updateAnchorPos(android.view.MotionEvent):0:0 -> h
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.W0$a:
# {"id":"sourceFile","fileName":"TooltipCompatHandler.java"}
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/W0;"}
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.W0$b:
# {"id":"sourceFile","fileName":"TooltipCompatHandler.java"}
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/W0;"}
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.X0:
# {"id":"sourceFile","fileName":"TooltipPopup.java"}
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.widget.TextView mMessageView -> c
    android.view.WindowManager$LayoutParams mLayoutParams -> d
    android.graphics.Rect mTmpDisplayFrame -> e
    int[] mTmpAnchorPos -> f
    int[] mTmpAppPos -> g
    1:1:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams):0:0 -> a
    1:1:android.view.View getAppRootView(android.view.View):0:0 -> b
    1:1:void hide():0:0 -> c
    1:1:boolean isShowing():0:0 -> d
    1:1:void show(android.view.View,int,int,boolean,java.lang.CharSequence):0:0 -> e
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.Y0:
# {"id":"sourceFile","fileName":"VectorEnabledTintResources.java"}
    java.lang.ref.WeakReference mContextRef -> b
    boolean sCompatVectorFromResourcesEnabled -> c
    1:1:boolean isCompatVectorFromResourcesEnabled():0:0 -> b
    1:1:boolean shouldBeUsed():0:0 -> c
    1:1:android.graphics.drawable.Drawable getDrawable(int):0:0 -> getDrawable
    2:2:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme):0:0 -> getDrawable
    1:1:android.graphics.drawable.Drawable getDrawableForDensity(int,int):0:0 -> getDrawableForDensity
    2:2:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme):0:0 -> getDrawableForDensity
    1:1:java.lang.String getQuantityString(int,int):0:0 -> getQuantityString
    2:2:java.lang.String getQuantityString(int,int,java.lang.Object[]):0:0 -> getQuantityString
    1:1:java.lang.String getString(int):0:0 -> getString
    2:2:java.lang.String getString(int,java.lang.Object[]):0:0 -> getString
    1:1:java.lang.CharSequence getText(int):0:0 -> getText
    2:2:java.lang.CharSequence getText(int,java.lang.CharSequence):0:0 -> getText
    1:1:void getValue(int,android.util.TypedValue,boolean):0:0 -> getValue
    2:2:void getValue(java.lang.String,android.util.TypedValue,boolean):0:0 -> getValue
    1:1:java.io.InputStream openRawResource(int):0:0 -> openRawResource
    2:2:java.io.InputStream openRawResource(int,android.util.TypedValue):0:0 -> openRawResource
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
    int mLayoutResource -> b
    int mInflatedId -> c
    java.lang.ref.WeakReference mInflatedViewRef -> d
    android.view.LayoutInflater mInflater -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:android.view.View inflate():0:0 -> a
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> androidx.appcompat.widget.ViewStubCompat$a:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.Z0:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    1:1:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect):0:0 -> a
    1:1:boolean isLayoutRtl(android.view.View):0:0 -> b
    1:1:void makeOptionalFitsSystemWindows(android.view.View):0:0 -> c
androidx.arch.core.executor.ArchTaskExecutor -> l.a:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/d;"}
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/d;"}
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/a;"}
    java.util.concurrent.Executor sMainThreadExecutor -> d
    java.util.concurrent.Executor sIOThreadExecutor -> e
    1:15:void <clinit>():0:0 -> <clinit>
    1:13:void <init>():0:0 -> <init>
    1:6:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:7:boolean isMainThread():0:0 -> b
    1:6:void postToMainThread(java.lang.Runnable):0:0 -> c
    1:30:androidx.arch.core.executor.ArchTaskExecutor getInstance():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/a;"}
androidx.arch.core.executor.ArchTaskExecutor$1 -> l.a$a:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    1:4:void <init>():0:0 -> <init>
    1:8:void execute(java.lang.Runnable):0:0 -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> l.a$b:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    1:4:void <init>():0:0 -> <init>
    1:8:void execute(java.lang.Runnable):0:0 -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> l.c:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    android.os.Handler mMainHandler -> c
    1:23:void <init>():0:0 -> <init>
    1:6:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:18:boolean isMainThread():0:0 -> b
    1:34:void postToMainThread(java.lang.Runnable):0:0 -> c
    5:65:android.os.Handler createAsync(android.os.Looper):0:0 -> d
androidx.arch.core.executor.DefaultTaskExecutor$$ExternalSyntheticApiModelOutline0 -> l.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.Handler l.DefaultTaskExecutor$$ExternalSyntheticApiModelOutline0.m(android.os.Looper):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor$1 -> l.c$a:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    androidx.arch.core.executor.DefaultTaskExecutor this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/c;"}
    1:14:void <init>(androidx.arch.core.executor.DefaultTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:31:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.arch.core.executor.TaskExecutor -> l.d:
# {"id":"sourceFile","fileName":"TaskExecutor.java"}
    1:4:void <init>():0:0 -> <init>
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> b
    void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.internal.FastSafeIterableMap -> m.a:
# {"id":"sourceFile","fileName":"FastSafeIterableMap.java"}
    java.util.HashMap mHashMap -> e
    1:11:void <init>():0:0 -> <init>
    1:9:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lm/b$c;"}
    1:7:boolean contains(java.lang.Object):0:0 -> contains
    1:20:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> g
    1:10:java.lang.Object remove(java.lang.Object):0:0 -> h
    1:19:java.util.Map$Entry ceil(java.lang.Object):0:0 -> i
androidx.arch.core.internal.SafeIterableMap -> m.b:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b$c;"}
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b$c;"}
    java.util.WeakHashMap mIterators -> c
    int mSize -> d
    1:14:void <init>():0:0 -> <init>
    1:17:java.util.Iterator descendingIterator():0:0 -> a
    1:3:java.util.Map$Entry eldest():0:0 -> b
    1:17:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lm/b$c;"}
    1:13:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/b$d;"}
    1:3:java.util.Map$Entry newest():0:0 -> e
    5:81:boolean equals(java.lang.Object):0:0 -> equals
    1:25:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Lm/b$c;"}
    1:14:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> g
    1:75:java.lang.Object remove(java.lang.Object):0:0 -> h
    1:24:int hashCode():0:0 -> hashCode
    1:17:java.util.Iterator iterator():0:0 -> iterator
    1:3:int size():0:0 -> size
    1:55:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> m.b$a:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    1:4:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;Lm/b$c;)V"}
    1:3:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)Lm/b$c;"}
    1:3:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)Lm/b$c;"}
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> m.b$b:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    1:4:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;Lm/b$c;)V"}
    1:3:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)Lm/b$c;"}
    1:3:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)Lm/b$c;"}
androidx.arch.core.internal.SafeIterableMap$Entry -> m.b$c:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    java.lang.Object mKey -> a
    java.lang.Object mValue -> b
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b$c;"}
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b$c;"}
    1:8:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    5:35:boolean equals(java.lang.Object):0:0 -> equals
    1:3:java.lang.Object getKey():0:0 -> getKey
    1:3:java.lang.Object getValue():0:0 -> getValue
    1:14:int hashCode():0:0 -> hashCode
    1:8:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:25:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> m.b$d:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b$c;"}
    boolean mBeforeStart -> b
    androidx.arch.core.internal.SafeIterableMap this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b;"}
    1:9:void <init>(androidx.arch.core.internal.SafeIterableMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b;)V"}
    1:16:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)V"}
    1:26:java.util.Map$Entry next():0:0 -> b
    1:24:boolean hasNext():0:0 -> hasNext
    1:5:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> m.b$e:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b$c;"}
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b$c;"}
    1:8:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;Lm/b$c;)V"}
    1:34:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)V"}
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)Lm/b$c;"}
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)Lm/b$c;"}
    1:9:java.util.Map$Entry next():0:0 -> d
    1:16:androidx.arch.core.internal.SafeIterableMap$Entry nextNode():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/b$c;"}
    1:8:boolean hasNext():0:0 -> hasNext
    1:5:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> m.b$f:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b$c;)V"}
androidx.browser.R$dimen -> n.a:
    int browser_actions_context_menu_max_width -> a
    int browser_actions_context_menu_min_padding -> b
androidx.browser.browseractions.BrowserActionsFallbackMenuView -> androidx.browser.browseractions.BrowserActionsFallbackMenuView:
# {"id":"sourceFile","fileName":"BrowserActionsFallbackMenuView.java"}
    int mBrowserActionsMenuMinPaddingPx -> b
    int mBrowserActionsMenuMaxWidthPx -> c
androidx.browser.customtabs.CustomTabColorSchemeParams -> androidx.browser.customtabs.a:
# {"id":"sourceFile","fileName":"CustomTabColorSchemeParams.java"}
    java.lang.Integer toolbarColor -> a
    java.lang.Integer secondaryToolbarColor -> b
    java.lang.Integer navigationBarColor -> c
    java.lang.Integer navigationBarDividerColor -> d
    1:1:android.os.Bundle toBundle():0:0 -> a
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder -> androidx.browser.customtabs.a$a:
# {"id":"sourceFile","fileName":"CustomTabColorSchemeParams.java"}
    java.lang.Integer mToolbarColor -> a
    java.lang.Integer mSecondaryToolbarColor -> b
    java.lang.Integer mNavigationBarColor -> c
    java.lang.Integer mNavigationBarDividerColor -> d
    1:1:androidx.browser.customtabs.CustomTabColorSchemeParams build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/browser/customtabs/a;"}
    1:1:androidx.browser.customtabs.CustomTabColorSchemeParams$Builder setToolbarColor(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/browser/customtabs/a$a;"}
androidx.browser.customtabs.CustomTabsCallback -> androidx.browser.customtabs.b:
# {"id":"sourceFile","fileName":"CustomTabsCallback.java"}
    1:1:void extraCallback(java.lang.String,android.os.Bundle):0:0 -> a
    1:1:android.os.Bundle extraCallbackWithResult(java.lang.String,android.os.Bundle):0:0 -> b
    1:1:void onActivityResized(int,int,android.os.Bundle):0:0 -> c
    1:1:void onMessageChannelReady(android.os.Bundle):0:0 -> d
    1:1:void onNavigationEvent(int,android.os.Bundle):0:0 -> e
    1:1:void onPostMessage(java.lang.String,android.os.Bundle):0:0 -> f
    1:1:void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle):0:0 -> g
androidx.browser.customtabs.CustomTabsClient -> androidx.browser.customtabs.c:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    android.support.customtabs.ICustomTabsService mService -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b;"}
    android.content.ComponentName mServiceComponentName -> b
    android.content.Context mApplicationContext -> c
    1:10:void <init>(android.support.customtabs.ICustomTabsService,android.content.ComponentName,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/b;Landroid/content/ComponentName;Landroid/content/Context;)V"}
    1:1:boolean bindCustomTabsService(android.content.Context,java.lang.String,androidx.browser.customtabs.CustomTabsServiceConnection):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroidx/browser/customtabs/e;)Z"}
    1:6:android.support.customtabs.ICustomTabsCallback$Stub createCallbackWrapper(androidx.browser.customtabs.CustomTabsCallback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/browser/customtabs/b;)La/a$a;"}
    1:1:androidx.browser.customtabs.CustomTabsSession newSession(androidx.browser.customtabs.CustomTabsCallback):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/browser/customtabs/b;)Landroidx/browser/customtabs/f;"}
    1:1:androidx.browser.customtabs.CustomTabsSession newSessionInternal(androidx.browser.customtabs.CustomTabsCallback,android.app.PendingIntent):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/browser/customtabs/b;Landroid/app/PendingIntent;)Landroidx/browser/customtabs/f;"}
    1:1:boolean warmup(long):0:0 -> e
androidx.browser.customtabs.CustomTabsClient$2 -> androidx.browser.customtabs.c$a:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    android.os.Handler mHandler -> a
    androidx.browser.customtabs.CustomTabsCallback val$callback -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/b;"}
    androidx.browser.customtabs.CustomTabsClient this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c;"}
    1:1:void onPostMessage(java.lang.String,android.os.Bundle):0:0 -> b
    1:1:void extraCallback(java.lang.String,android.os.Bundle):0:0 -> d
    1:1:void onMessageChannelReady(android.os.Bundle):0:0 -> e
    1:1:void onActivityResized(int,int,android.os.Bundle):0:0 -> f
    1:1:android.os.Bundle extraCallbackWithResult(java.lang.String,android.os.Bundle):0:0 -> j
    1:1:void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle):0:0 -> n
    1:1:void onNavigationEvent(int,android.os.Bundle):0:0 -> s
androidx.browser.customtabs.CustomTabsClient$2$1 -> androidx.browser.customtabs.c$a$a:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    int val$navigationEvent -> a
    android.os.Bundle val$extras -> b
    androidx.browser.customtabs.CustomTabsClient$2 this$1 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c$a;"}
androidx.browser.customtabs.CustomTabsClient$2$2 -> androidx.browser.customtabs.c$a$b:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    java.lang.String val$callbackName -> a
    android.os.Bundle val$args -> b
    androidx.browser.customtabs.CustomTabsClient$2 this$1 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c$a;"}
androidx.browser.customtabs.CustomTabsClient$2$3 -> androidx.browser.customtabs.c$a$c:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    android.os.Bundle val$extras -> a
    androidx.browser.customtabs.CustomTabsClient$2 this$1 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c$a;"}
androidx.browser.customtabs.CustomTabsClient$2$4 -> androidx.browser.customtabs.c$a$d:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    java.lang.String val$message -> a
    android.os.Bundle val$extras -> b
    androidx.browser.customtabs.CustomTabsClient$2 this$1 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c$a;"}
androidx.browser.customtabs.CustomTabsClient$2$5 -> androidx.browser.customtabs.c$a$e:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    int val$relation -> a
    android.net.Uri val$requestedOrigin -> b
    boolean val$result -> c
    android.os.Bundle val$extras -> d
    androidx.browser.customtabs.CustomTabsClient$2 this$1 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c$a;"}
androidx.browser.customtabs.CustomTabsClient$2$6 -> androidx.browser.customtabs.c$a$f:
# {"id":"sourceFile","fileName":"CustomTabsClient.java"}
    int val$height -> a
    int val$width -> b
    android.os.Bundle val$extras -> c
    androidx.browser.customtabs.CustomTabsClient$2 this$1 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c$a;"}
androidx.browser.customtabs.CustomTabsIntent -> androidx.browser.customtabs.d:
# {"id":"sourceFile","fileName":"CustomTabsIntent.java"}
    android.content.Intent intent -> a
    android.os.Bundle startAnimationBundle -> b
    1:1:void launchUrl(android.content.Context,android.net.Uri):0:0 -> a
androidx.browser.customtabs.CustomTabsIntent$Api24Impl -> androidx.browser.customtabs.d$a:
# {"id":"sourceFile","fileName":"CustomTabsIntent.java"}
    1:1:java.lang.String getDefaultLocale():0:0 -> a
androidx.browser.customtabs.CustomTabsIntent$Builder -> androidx.browser.customtabs.d$b:
# {"id":"sourceFile","fileName":"CustomTabsIntent.java"}
    android.content.Intent mIntent -> a
    androidx.browser.customtabs.CustomTabColorSchemeParams$Builder mDefaultColorSchemeBuilder -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/a$a;"}
    java.util.ArrayList mMenuItems -> c
    android.os.Bundle mStartAnimationBundle -> d
    java.util.ArrayList mActionButtons -> e
    android.util.SparseArray mColorSchemeParamBundles -> f
    android.os.Bundle mDefaultColorSchemeBundle -> g
    int mShareState -> h
    boolean mInstantAppsEnabled -> i
    1:1:androidx.browser.customtabs.CustomTabsIntent build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/browser/customtabs/d;"}
    1:1:void setCurrentLocaleAsDefaultAcceptLanguage():0:0 -> b
    1:1:androidx.browser.customtabs.CustomTabsIntent$Builder setSession(androidx.browser.customtabs.CustomTabsSession):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/browser/customtabs/f;)Landroidx/browser/customtabs/d$b;"}
    1:1:void setSessionParameters(android.os.IBinder,android.app.PendingIntent):0:0 -> d
    1:1:androidx.browser.customtabs.CustomTabsIntent$Builder setToolbarColor(int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/browser/customtabs/d$b;"}
androidx.browser.customtabs.CustomTabsServiceConnection -> androidx.browser.customtabs.e:
# {"id":"sourceFile","fileName":"CustomTabsServiceConnection.java"}
    android.content.Context mApplicationContext -> a
    void onCustomTabsServiceConnected(android.content.ComponentName,androidx.browser.customtabs.CustomTabsClient) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/ComponentName;Landroidx/browser/customtabs/c;)V"}
    1:1:void setApplicationContext(android.content.Context):0:0 -> b
androidx.browser.customtabs.CustomTabsServiceConnection$1 -> androidx.browser.customtabs.e$a:
# {"id":"sourceFile","fileName":"CustomTabsServiceConnection.java"}
    androidx.browser.customtabs.CustomTabsServiceConnection this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/e;"}
    1:6:void <init>(androidx.browser.customtabs.CustomTabsServiceConnection,android.support.customtabs.ICustomTabsService,android.content.ComponentName,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/browser/customtabs/e;La/b;Landroid/content/ComponentName;Landroid/content/Context;)V"}
androidx.browser.customtabs.CustomTabsSession -> androidx.browser.customtabs.f:
# {"id":"sourceFile","fileName":"CustomTabsSession.java"}
    java.lang.Object mLock -> a
    android.support.customtabs.ICustomTabsService mService -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b;"}
    android.support.customtabs.ICustomTabsCallback mCallback -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/a;"}
    android.content.ComponentName mComponentName -> d
    android.app.PendingIntent mId -> e
    1:19:void <init>(android.support.customtabs.ICustomTabsService,android.support.customtabs.ICustomTabsCallback,android.content.ComponentName,android.app.PendingIntent):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/b;La/a;Landroid/content/ComponentName;Landroid/app/PendingIntent;)V"}
    1:1:void addIdToBundle(android.os.Bundle):0:0 -> a
    1:1:android.os.Bundle createBundleWithId(android.os.Bundle):0:0 -> b
    1:1:android.os.IBinder getBinder():0:0 -> c
    1:1:android.content.ComponentName getComponentName():0:0 -> d
    1:1:android.app.PendingIntent getId():0:0 -> e
    1:1:boolean validateRelationship(int,android.net.Uri,android.os.Bundle):0:0 -> f
androidx.browser.trusted.NotificationApiHelperForM -> o.b:
# {"id":"sourceFile","fileName":"NotificationApiHelperForM.java"}
    1:5:android.os.Parcelable[] getActiveNotifications(android.app.NotificationManager):0:0 -> a
androidx.browser.trusted.NotificationApiHelperForM$$ExternalSyntheticApiModelOutline0 -> o.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.service.notification.StatusBarNotification[] o.NotificationApiHelperForM$$ExternalSyntheticApiModelOutline0.m(android.app.NotificationManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.browser.trusted.NotificationApiHelperForO -> o.h:
# {"id":"sourceFile","fileName":"NotificationApiHelperForO.java"}
    1:33:android.app.Notification copyNotificationOntoChannel(android.content.Context,android.app.NotificationManager,android.app.Notification,java.lang.String,java.lang.String):0:0 -> a
    1:17:boolean isChannelEnabled(android.app.NotificationManager,java.lang.String):0:0 -> b
androidx.browser.trusted.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline0 -> o.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.NotificationChannel o.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline0.m(android.app.NotificationManager,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.browser.trusted.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline1 -> o.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int o.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline1.m(android.app.NotificationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.browser.trusted.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline2 -> o.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void o.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline2.m(android.app.NotificationManager,android.app.NotificationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.browser.trusted.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline3 -> o.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.Notification$Builder o.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline3.m(android.content.Context,android.app.Notification):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.browser.trusted.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline4 -> o.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.Notification$Builder o.NotificationApiHelperForO$$ExternalSyntheticApiModelOutline4.m(android.app.Notification$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.browser.trusted.PackageIdentityUtils -> o.i:
# {"id":"sourceFile","fileName":"PackageIdentityUtils.java"}
    1:17:byte[] getCertificateSHA256Fingerprint(android.content.pm.Signature):0:0 -> a
    1:19:java.util.List getFingerprintsForPackage(java.lang.String,android.content.pm.PackageManager):0:0 -> b
    1:18:androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat getImpl():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/i$c;"}
    1:21:boolean packageMatchesToken(java.lang.String,android.content.pm.PackageManager,androidx.browser.trusted.TokenContents):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/pm/PackageManager;Lo/l;)Z"}
androidx.browser.trusted.PackageIdentityUtils$Api28Implementation -> o.i$a:
# {"id":"sourceFile","fileName":"PackageIdentityUtils.java"}
    1:4:void <init>():0:0 -> <init>
    1:44:boolean packageMatchesToken(java.lang.String,android.content.pm.PackageManager,androidx.browser.trusted.TokenContents):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/pm/PackageManager;Lo/l;)Z"}
    3:53:java.util.List getFingerprintsForPackage(java.lang.String,android.content.pm.PackageManager):0:0 -> b
androidx.browser.trusted.PackageIdentityUtils$Pre28Implementation -> o.i$b:
# {"id":"sourceFile","fileName":"PackageIdentityUtils.java"}
    1:4:void <init>():0:0 -> <init>
    1:28:boolean packageMatchesToken(java.lang.String,android.content.pm.PackageManager,androidx.browser.trusted.TokenContents):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/pm/PackageManager;Lo/l;)Z"}
    3:37:java.util.List getFingerprintsForPackage(java.lang.String,android.content.pm.PackageManager):0:0 -> b
androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat -> o.i$c:
# {"id":"sourceFile","fileName":"PackageIdentityUtils.java"}
    boolean packageMatchesToken(java.lang.String,android.content.pm.PackageManager,androidx.browser.trusted.TokenContents) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/pm/PackageManager;Lo/l;)Z"}
    java.util.List getFingerprintsForPackage(java.lang.String,android.content.pm.PackageManager) -> b
androidx.browser.trusted.Token -> o.j:
# {"id":"sourceFile","fileName":"Token.java"}
    androidx.browser.trusted.TokenContents mContents -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lo/l;"}
    1:6:void <init>(androidx.browser.trusted.TokenContents):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/l;)V"}
    1:27:androidx.browser.trusted.Token create(java.lang.String,android.content.pm.PackageManager):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/pm/PackageManager;)Lo/j;"}
    1:10:androidx.browser.trusted.Token deserialize(byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lo/j;"}
    1:7:boolean matches(java.lang.String,android.content.pm.PackageManager):0:0 -> c
    1:7:byte[] serialize():0:0 -> d
androidx.browser.trusted.TokenContents -> o.l:
# {"id":"sourceFile","fileName":"TokenContents.java"}
    byte[] mContents -> a
    java.lang.String mPackageName -> b
    java.util.List mFingerprints -> c
    1:1:void <init>(byte[]):0:0 -> <init>
    2:2:void <init>(byte[],java.lang.String,java.util.List):0:0 -> <init>
    1:1:int o.TokenContents.$r8$lambda$CBVg26zUpxC1pz1KzAQxDAVlyy0(byte[],byte[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    14:41:int compareByteArrays(byte[],byte[]):0:0 -> b
    1:10:androidx.browser.trusted.TokenContents create(java.lang.String,java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/util/List;)Lo/l;"}
    1:60:byte[] createToken(java.lang.String,java.util.List):0:0 -> d
    1:6:androidx.browser.trusted.TokenContents deserialize(byte[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lo/l;"}
    7:28:boolean equals(java.lang.Object):0:0 -> equals
    1:33:byte[] getFingerprint(int):0:0 -> f
    1:14:java.lang.String getPackageName():0:0 -> g
    1:66:void parseIfNeeded():0:0 -> h
    1:7:int hashCode():0:0 -> hashCode
    1:8:byte[] serialize():0:0 -> i
androidx.browser.trusted.TokenContents$$ExternalSyntheticLambda0 -> o.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void o.TokenContents$$ExternalSyntheticLambda0.<init>():0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int o.TokenContents$$ExternalSyntheticLambda0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.browser.trusted.TokenStore -> o.m:
# {"id":"sourceFile","fileName":"TokenStore.java"}
    androidx.browser.trusted.Token load() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/j;"}
androidx.browser.trusted.TrustedWebActivityCallbackRemote -> o.n:
# {"id":"sourceFile","fileName":"TrustedWebActivityCallbackRemote.java"}
    android.support.customtabs.trusted.ITrustedWebActivityCallback mCallbackBinder -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/a;"}
    1:6:void <init>(android.support.customtabs.trusted.ITrustedWebActivityCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb/a;)V"}
    6:18:androidx.browser.trusted.TrustedWebActivityCallbackRemote fromBinder(android.os.IBinder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Lo/n;"}
androidx.browser.trusted.TrustedWebActivityDisplayMode -> o.o:
# {"id":"sourceFile","fileName":"TrustedWebActivityDisplayMode.java"}
    android.os.Bundle toBundle() -> a
androidx.browser.trusted.TrustedWebActivityDisplayMode$DefaultMode -> o.o$a:
# {"id":"sourceFile","fileName":"TrustedWebActivityDisplayMode.java"}
    1:4:void <init>():0:0 -> <init>
    1:12:android.os.Bundle toBundle():0:0 -> a
androidx.browser.trusted.TrustedWebActivityIntent -> o.p:
# {"id":"sourceFile","fileName":"TrustedWebActivityIntent.java"}
    android.content.Intent mIntent -> a
    java.util.List mSharedFileUris -> b
    1:8:void <init>(android.content.Intent,java.util.List):0:0 -> <init>
    1:30:void grantUriPermissionToProvider(android.content.Context):0:0 -> a
    1:10:void launchTrustedWebActivity(android.content.Context):0:0 -> b
androidx.browser.trusted.TrustedWebActivityIntentBuilder -> o.q:
# {"id":"sourceFile","fileName":"TrustedWebActivityIntentBuilder.java"}
    android.net.Uri mUri -> a
    androidx.browser.customtabs.CustomTabsIntent$Builder mIntentBuilder -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/d$b;"}
    java.util.List mAdditionalTrustedOrigins -> c
    android.os.Bundle mSplashScreenParams -> d
    androidx.browser.trusted.TrustedWebActivityDisplayMode mDisplayMode -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lo/o;"}
    int mScreenOrientation -> f
    1:23:void <init>(android.net.Uri):0:0 -> <init>
    3:87:androidx.browser.trusted.TrustedWebActivityIntent build(androidx.browser.customtabs.CustomTabsSession):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/browser/customtabs/f;)Lo/p;"}
androidx.browser.trusted.TrustedWebActivityService -> o.r:
# {"id":"sourceFile","fileName":"TrustedWebActivityService.java"}
    android.app.NotificationManager mNotificationManager -> b
    int mVerifiedUid -> c
    android.support.customtabs.trusted.ITrustedWebActivityService$Stub mBinder -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/b$a;"}
    1:14:void <init>():0:0 -> <init>
    1:32:java.lang.String channelNameToId(java.lang.String):0:0 -> a
    1:13:void ensureOnCreateCalled():0:0 -> b
    androidx.browser.trusted.TokenStore getTokenStore() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/m;"}
    1:34:boolean onAreNotificationsEnabled(java.lang.String):0:0 -> d
    1:9:void onCancelNotification(java.lang.String,int):0:0 -> e
    android.os.Bundle onExtraCommand(java.lang.String,android.os.Bundle,androidx.browser.trusted.TrustedWebActivityCallbackRemote) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/os/Bundle;Lo/n;)Landroid/os/Bundle;"}
    1:24:android.os.Parcelable[] onGetActiveNotifications():0:0 -> g
    1:27:android.os.Bundle onGetSmallIconBitmap():0:0 -> h
    2:32:int onGetSmallIconId():0:0 -> i
    1:47:boolean onNotifyNotificationWithChannel(java.lang.String,int,android.app.Notification,java.lang.String):0:0 -> j
    1:3:android.os.IBinder onBind(android.content.Intent):0:0 -> onBind
    1:14:void onCreate():0:0 -> onCreate
    2:8:boolean onUnbind(android.content.Intent):0:0 -> onUnbind
androidx.browser.trusted.TrustedWebActivityService$1 -> o.r$a:
# {"id":"sourceFile","fileName":"TrustedWebActivityService.java"}
    androidx.browser.trusted.TrustedWebActivityService this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lo/r;"}
    1:6:void <init>(androidx.browser.trusted.TrustedWebActivityService):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/r;)V"}
    1:19:android.os.Bundle getActiveNotifications():0:0 -> c
    1:10:int getSmallIconId():0:0 -> g
    1:17:void cancelNotification(android.os.Bundle):0:0 -> h
    1:31:android.os.Bundle notifyNotificationWithChannel(android.os.Bundle):0:0 -> l
    1:10:android.os.Bundle getSmallIconBitmap():0:0 -> m
    1:25:android.os.Bundle areNotificationsEnabled(android.os.Bundle):0:0 -> o
    1:14:android.os.Bundle extraCommand(java.lang.String,android.os.Bundle,android.os.IBinder):0:0 -> r
    1:86:void checkCaller():0:0 -> v
androidx.browser.trusted.TrustedWebActivityServiceConnection -> o.s:
# {"id":"sourceFile","fileName":"TrustedWebActivityServiceConnection.java"}
    1:30:void ensureBundleContains(android.os.Bundle,java.lang.String):0:0 -> a
androidx.browser.trusted.TrustedWebActivityServiceConnection$ActiveNotificationsArgs -> o.s$a:
# {"id":"sourceFile","fileName":"TrustedWebActivityServiceConnection.java"}
    android.os.Parcelable[] notifications -> a
    1:6:void <init>(android.os.Parcelable[]):0:0 -> <init>
    1:13:android.os.Bundle toBundle():0:0 -> a
androidx.browser.trusted.TrustedWebActivityServiceConnection$CancelNotificationArgs -> o.s$b:
# {"id":"sourceFile","fileName":"TrustedWebActivityServiceConnection.java"}
    java.lang.String platformTag -> a
    int platformId -> b
    1:8:void <init>(java.lang.String,int):0:0 -> <init>
    1:24:androidx.browser.trusted.TrustedWebActivityServiceConnection$CancelNotificationArgs fromBundle(android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Lo/s$b;"}
androidx.browser.trusted.TrustedWebActivityServiceConnection$NotificationsEnabledArgs -> o.s$c:
# {"id":"sourceFile","fileName":"TrustedWebActivityServiceConnection.java"}
    java.lang.String channelName -> a
    1:6:void <init>(java.lang.String):0:0 -> <init>
    1:15:androidx.browser.trusted.TrustedWebActivityServiceConnection$NotificationsEnabledArgs fromBundle(android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Lo/s$c;"}
androidx.browser.trusted.TrustedWebActivityServiceConnection$NotifyNotificationArgs -> o.s$d:
# {"id":"sourceFile","fileName":"TrustedWebActivityServiceConnection.java"}
    java.lang.String platformTag -> a
    int platformId -> b
    android.app.Notification notification -> c
    java.lang.String channelName -> d
    1:12:void <init>(java.lang.String,int,android.app.Notification,java.lang.String):0:0 -> <init>
    1:44:androidx.browser.trusted.TrustedWebActivityServiceConnection$NotifyNotificationArgs fromBundle(android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Lo/s$d;"}
androidx.browser.trusted.TrustedWebActivityServiceConnection$ResultArgs -> o.s$e:
# {"id":"sourceFile","fileName":"TrustedWebActivityServiceConnection.java"}
    boolean success -> a
    1:6:void <init>(boolean):0:0 -> <init>
    1:13:android.os.Bundle toBundle():0:0 -> a
androidx.collection.ArrayMap -> p.a:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    androidx.collection.MapCollections mCollections -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:9:java.util.Set entrySet():0:0 -> entrySet
    1:9:java.util.Set keySet():0:0 -> keySet
    1:14:androidx.collection.MapCollections getCollection():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/f;"}
    1:43:void putAll(java.util.Map):0:0 -> putAll
    1:9:java.util.Collection values():0:0 -> values
androidx.collection.ArrayMap$1 -> p.a$a:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    androidx.collection.ArrayMap this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    1:6:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/a;)V"}
    1:6:void colClear():0:0 -> a
    1:10:java.lang.Object colGetEntry(int,int):0:0 -> b
    1:3:java.util.Map colGetMap():0:0 -> c
    1:5:int colGetSize():0:0 -> d
    1:7:int colIndexOfKey(java.lang.Object):0:0 -> e
    1:7:int colIndexOfValue(java.lang.Object):0:0 -> f
    1:6:void colPut(java.lang.Object,java.lang.Object):0:0 -> g
    1:6:void colRemoveAt(int):0:0 -> h
    1:7:java.lang.Object colSetValue(int,java.lang.Object):0:0 -> i
androidx.collection.ArraySet -> p.b:
# {"id":"sourceFile","fileName":"ArraySet.java"}
    int[] mHashes -> a
    java.lang.Object[] mArray -> b
    int mSize -> c
    androidx.collection.MapCollections mCollections -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    int[] INT -> e
    java.lang.Object[] OBJECT -> f
    java.lang.Object[] sBaseCache -> g
    int sBaseCacheSize -> h
    java.lang.Object[] sTwiceBaseCache -> i
    int sTwiceBaseCacheSize -> j
    2:10:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    8:95:void allocArrays(int):0:0 -> a
    4:105:boolean add(java.lang.Object):0:0 -> add
    1:32:boolean addAll(java.util.Collection):0:0 -> addAll
    1:33:void ensureCapacity(int):0:0 -> b
    1:84:void freeArrays(int[],java.lang.Object[],int):0:0 -> c
    1:23:void clear():0:0 -> clear
    1:10:boolean contains(java.lang.Object):0:0 -> contains
    1:24:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:14:androidx.collection.MapCollections getCollection():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/f;"}
    3:16:int indexOf(java.lang.Object):0:0 -> e
    5:43:boolean equals(java.lang.Object):0:0 -> equals
    1:77:int indexOf(java.lang.Object,int):0:0 -> f
    1:66:int indexOfNull():0:0 -> g
    1:112:java.lang.Object removeAt(int):0:0 -> h
    1:15:int hashCode():0:0 -> hashCode
    1:5:java.lang.Object valueAt(int):0:0 -> i
    1:8:boolean isEmpty():0:0 -> isEmpty
    1:13:java.util.Iterator iterator():0:0 -> iterator
    1:13:boolean remove(java.lang.Object):0:0 -> remove
    1:22:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:25:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:3:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:63:java.lang.String toString():0:0 -> toString
androidx.collection.ArraySet$1 -> p.b$a:
# {"id":"sourceFile","fileName":"ArraySet.java"}
    androidx.collection.ArraySet this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/b;"}
    1:6:void <init>(androidx.collection.ArraySet):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/b;)V"}
    1:6:void colClear():0:0 -> a
    1:7:java.lang.Object colGetEntry(int,int):0:0 -> b
    1:8:java.util.Map colGetMap():0:0 -> c
    1:5:int colGetSize():0:0 -> d
    1:7:int colIndexOfKey(java.lang.Object):0:0 -> e
    1:7:int colIndexOfValue(java.lang.Object):0:0 -> f
    1:6:void colPut(java.lang.Object,java.lang.Object):0:0 -> g
    1:6:void colRemoveAt(int):0:0 -> h
    1:8:java.lang.Object colSetValue(int,java.lang.Object):0:0 -> i
androidx.collection.ContainerHelpers -> p.c:
# {"id":"sourceFile","fileName":"ContainerHelpers.java"}
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    2:14:void <clinit>():0:0 -> <clinit>
    10:27:int binarySearch(int[],int,int):0:0 -> a
    10:31:int binarySearch(long[],int,long):0:0 -> b
    5:15:boolean equal(java.lang.Object,java.lang.Object):0:0 -> c
    1:16:int idealByteArraySize(int):0:0 -> d
    3:9:int idealIntArraySize(int):0:0 -> e
    3:9:int idealLongArraySize(int):0:0 -> f
androidx.collection.LongSparseArray -> p.d:
# {"id":"sourceFile","fileName":"LongSparseArray.java"}
    boolean mGarbage -> a
    long[] mKeys -> b
    java.lang.Object[] mValues -> c
    int mSize -> d
    java.lang.Object DELETED -> e
    1:8:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:77:void append(long,java.lang.Object):0:0 -> a
    1:19:void clear():0:0 -> b
    1:34:androidx.collection.LongSparseArray clone():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d;"}
    1:5:java.lang.Object clone():0:0 -> clone
    1:38:void gc():0:0 -> d
    2:6:java.lang.Object get(long):0:0 -> e
    1:21:java.lang.Object get(long,java.lang.Object):0:0 -> f
    1:12:long keyAt(int):0:0 -> g
    1:129:void put(long,java.lang.Object):0:0 -> h
    1:24:void remove(long):0:0 -> i
    1:10:int size():0:0 -> j
    1:12:java.lang.Object valueAt(int):0:0 -> k
    1:75:java.lang.String toString():0:0 -> toString
androidx.collection.LruCache -> p.e:
# {"id":"sourceFile","fileName":"LruCache.java"}
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    1:27:void <init>(int):0:0 -> <init>
    1:2:java.lang.Object create(java.lang.Object):0:0 -> a
    1:1:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> b
    3:94:java.lang.Object get(java.lang.Object):0:0 -> c
    5:63:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> d
    1:38:int safeSizeOf(java.lang.Object,java.lang.Object):0:0 -> e
    1:2:int sizeOf(java.lang.Object,java.lang.Object):0:0 -> f
    1:120:void trimToSize(int):0:0 -> g
    2:64:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections -> p.f:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f$b;"}
    androidx.collection.MapCollections$KeySet mKeySet -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f$c;"}
    androidx.collection.MapCollections$ValuesCollection mValues -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f$e;"}
    1:4:void <init>():0:0 -> <init>
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
    1:24:boolean containsAllHelper(java.util.Map,java.util.Collection):0:0 -> j
    5:31:boolean equalsSetHelper(java.util.Set,java.lang.Object):0:0 -> k
    1:14:java.util.Set getEntrySet():0:0 -> l
    1:14:java.util.Set getKeySet():0:0 -> m
    1:14:java.util.Collection getValues():0:0 -> n
    1:32:boolean removeAllHelper(java.util.Map,java.util.Collection):0:0 -> o
    1:42:boolean retainAllHelper(java.util.Map,java.util.Collection):0:0 -> p
    1:19:java.lang.Object[] toArrayHelper(int):0:0 -> q
    1:40:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0:0 -> r
androidx.collection.MapCollections$ArrayIterator -> p.f$a:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    androidx.collection.MapCollections this$0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    1:17:void <init>(androidx.collection.MapCollections,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;I)V"}
    1:10:boolean hasNext():0:0 -> hasNext
    1:31:java.lang.Object next():0:0 -> next
    1:31:void remove():0:0 -> remove
androidx.collection.MapCollections$EntrySet -> p.f$b:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    androidx.collection.MapCollections this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    1:6:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)V"}
    1:6:boolean add(java.util.Map$Entry):0:0 -> a
    1:7:boolean add(java.lang.Object):0:0 -> add
    1:48:boolean addAll(java.util.Collection):0:0 -> addAll
    1:6:void clear():0:0 -> clear
    1:37:boolean contains(java.lang.Object):0:0 -> contains
    1:24:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:5:boolean equals(java.lang.Object):0:0 -> equals
    1:46:int hashCode():0:0 -> hashCode
    1:12:boolean isEmpty():0:0 -> isEmpty
    1:8:java.util.Iterator iterator():0:0 -> iterator
    1:6:boolean remove(java.lang.Object):0:0 -> remove
    1:6:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:6:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:7:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.MapCollections$KeySet -> p.f$c:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    androidx.collection.MapCollections this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    1:6:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)V"}
    1:6:boolean add(java.lang.Object):0:0 -> add
    1:6:boolean addAll(java.util.Collection):0:0 -> addAll
    1:6:void clear():0:0 -> clear
    1:12:boolean contains(java.lang.Object):0:0 -> contains
    1:11:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:5:boolean equals(java.lang.Object):0:0 -> equals
    1:31:int hashCode():0:0 -> hashCode
    1:12:boolean isEmpty():0:0 -> isEmpty
    1:9:java.util.Iterator iterator():0:0 -> iterator
    1:17:boolean remove(java.lang.Object):0:0 -> remove
    1:11:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:11:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:7:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.MapCollections$MapIterator -> p.f$d:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    1:20:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)V"}
    1:21:java.util.Map$Entry next():0:0 -> a
    1:59:boolean equals(java.lang.Object):0:0 -> equals
    1:22:java.lang.Object getKey():0:0 -> getKey
    1:22:java.lang.Object getValue():0:0 -> getValue
    1:10:boolean hasNext():0:0 -> hasNext
    1:47:int hashCode():0:0 -> hashCode
    1:5:java.lang.Object next():0:0 -> next
    1:33:void remove():0:0 -> remove
    1:21:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:29:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections$ValuesCollection -> p.f$e:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    androidx.collection.MapCollections this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    1:6:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)V"}
    1:6:boolean add(java.lang.Object):0:0 -> add
    1:6:boolean addAll(java.util.Collection):0:0 -> addAll
    1:6:void clear():0:0 -> clear
    1:12:boolean contains(java.lang.Object):0:0 -> contains
    1:24:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:12:boolean isEmpty():0:0 -> isEmpty
    1:9:java.util.Iterator iterator():0:0 -> iterator
    1:17:boolean remove(java.lang.Object):0:0 -> remove
    1:36:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:36:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:7:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.SimpleArrayMap -> p.g:
# {"id":"sourceFile","fileName":"SimpleArrayMap.java"}
    int[] mHashes -> a
    java.lang.Object[] mArray -> b
    int mSize -> c
    java.lang.Object[] mBaseCache -> d
    int mBaseCacheSize -> e
    java.lang.Object[] mTwiceBaseCache -> f
    int mTwiceBaseCacheSize -> g
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    8:96:void allocArrays(int):0:0 -> a
    1:11:int binarySearchHashes(int[],int,int):0:0 -> b
    1:43:void ensureCapacity(int):0:0 -> c
    1:33:void clear():0:0 -> clear
    1:10:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:10:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:88:void freeArrays(int[],java.lang.Object[],int):0:0 -> d
    1:83:int indexOf(java.lang.Object,int):0:0 -> e
    5:119:boolean equals(java.lang.Object):0:0 -> equals
    3:16:int indexOfKey(java.lang.Object):0:0 -> f
    1:72:int indexOfNull():0:0 -> g
    2:6:java.lang.Object get(java.lang.Object):0:0 -> get
    1:15:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
    1:40:int indexOfValue(java.lang.Object):0:0 -> h
    1:32:int hashCode():0:0 -> hashCode
    1:7:java.lang.Object keyAt(int):0:0 -> i
    1:8:boolean isEmpty():0:0 -> isEmpty
    1:134:java.lang.Object removeAt(int):0:0 -> j
    5:11:java.lang.Object setValueAt(int,java.lang.Object):0:0 -> k
    1:9:java.lang.Object valueAt(int):0:0 -> l
    1:147:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:11:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    2:2:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
    1:1:java.lang.Object replace(java.lang.Object,java.lang.Object):0:0 -> replace
    2:2:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> replace
    1:3:int size():0:0 -> size
    1:81:java.lang.String toString():0:0 -> toString
androidx.collection.SparseArrayCompat -> p.h:
# {"id":"sourceFile","fileName":"SparseArrayCompat.java"}
    boolean mGarbage -> a
    int[] mKeys -> b
    java.lang.Object[] mValues -> c
    int mSize -> d
    java.lang.Object DELETED -> e
    1:8:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:75:void append(int,java.lang.Object):0:0 -> a
    1:19:void clear():0:0 -> b
    1:34:androidx.collection.SparseArrayCompat clone():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/h;"}
    1:5:java.lang.Object clone():0:0 -> clone
    1:38:void gc():0:0 -> d
    2:6:java.lang.Object get(int):0:0 -> e
    1:21:java.lang.Object get(int,java.lang.Object):0:0 -> f
    1:12:int keyAt(int):0:0 -> g
    1:129:void put(int,java.lang.Object):0:0 -> h
    1:10:int size():0:0 -> i
    1:12:java.lang.Object valueAt(int):0:0 -> j
    1:75:java.lang.String toString():0:0 -> toString
androidx.core.R$attr -> q.a:
    int alpha -> a
    int lStar -> b
    int nestedScrollViewStyle -> c
androidx.core.R$id -> q.b:
    int accessibility_custom_action_31 -> A
    int accessibility_custom_action_4 -> B
    int accessibility_custom_action_5 -> C
    int accessibility_custom_action_6 -> D
    int accessibility_custom_action_7 -> E
    int accessibility_custom_action_8 -> F
    int accessibility_custom_action_9 -> G
    int tag_accessibility_actions -> H
    int tag_accessibility_clickable_spans -> I
    int tag_accessibility_heading -> J
    int tag_accessibility_pane_title -> K
    int tag_on_apply_window_listener -> L
    int tag_on_receive_content_listener -> M
    int tag_on_receive_content_mime_types -> N
    int tag_screen_reader_focusable -> O
    int tag_state_description -> P
    int tag_unhandled_key_event_manager -> Q
    int tag_unhandled_key_listeners -> R
    int tag_window_insets_animation_callback -> S
    int accessibility_action_clickable_span -> a
    int accessibility_custom_action_0 -> b
    int accessibility_custom_action_1 -> c
    int accessibility_custom_action_10 -> d
    int accessibility_custom_action_11 -> e
    int accessibility_custom_action_12 -> f
    int accessibility_custom_action_13 -> g
    int accessibility_custom_action_14 -> h
    int accessibility_custom_action_15 -> i
    int accessibility_custom_action_16 -> j
    int accessibility_custom_action_17 -> k
    int accessibility_custom_action_18 -> l
    int accessibility_custom_action_19 -> m
    int accessibility_custom_action_2 -> n
    int accessibility_custom_action_20 -> o
    int accessibility_custom_action_21 -> p
    int accessibility_custom_action_22 -> q
    int accessibility_custom_action_23 -> r
    int accessibility_custom_action_24 -> s
    int accessibility_custom_action_25 -> t
    int accessibility_custom_action_26 -> u
    int accessibility_custom_action_27 -> v
    int accessibility_custom_action_28 -> w
    int accessibility_custom_action_29 -> x
    int accessibility_custom_action_3 -> y
    int accessibility_custom_action_30 -> z
androidx.core.R$styleable -> q.c:
    int[] GradientColor -> A
    int GradientColor_android_startColor -> B
    int GradientColor_android_endColor -> C
    int GradientColor_android_type -> D
    int GradientColor_android_centerX -> E
    int GradientColor_android_centerY -> F
    int GradientColor_android_gradientRadius -> G
    int GradientColor_android_tileMode -> H
    int GradientColor_android_centerColor -> I
    int GradientColor_android_startX -> J
    int GradientColor_android_startY -> K
    int GradientColor_android_endX -> L
    int GradientColor_android_endY -> M
    int[] GradientColorItem -> N
    int GradientColorItem_android_color -> O
    int GradientColorItem_android_offset -> P
    int[] Capability -> a
    int[] ColorStateListItem -> b
    int ColorStateListItem_android_color -> c
    int ColorStateListItem_android_alpha -> d
    int ColorStateListItem_android_lStar -> e
    int ColorStateListItem_alpha -> f
    int ColorStateListItem_lStar -> g
    int[] FontFamily -> h
    int FontFamily_fontProviderAuthority -> i
    int FontFamily_fontProviderCerts -> j
    int FontFamily_fontProviderFetchStrategy -> k
    int FontFamily_fontProviderFetchTimeout -> l
    int FontFamily_fontProviderPackage -> m
    int FontFamily_fontProviderQuery -> n
    int FontFamily_fontProviderSystemFontFamily -> o
    int[] FontFamilyFont -> p
    int FontFamilyFont_android_font -> q
    int FontFamilyFont_android_fontWeight -> r
    int FontFamilyFont_android_fontStyle -> s
    int FontFamilyFont_android_ttcIndex -> t
    int FontFamilyFont_android_fontVariationSettings -> u
    int FontFamilyFont_font -> v
    int FontFamilyFont_fontStyle -> w
    int FontFamilyFont_fontVariationSettings -> x
    int FontFamilyFont_fontWeight -> y
    int FontFamilyFont_ttcIndex -> z
    7:70:void <clinit>():0:0 -> <clinit>
androidx.core.app.ActivityCompat -> androidx.core.app.b:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    1:1:void finishAffinity(android.app.Activity):0:0 -> i
    1:1:void recreate(android.app.Activity):0:0 -> j
    1:1:void requestPermissions(android.app.Activity,java.lang.String[],int):0:0 -> k
androidx.core.app.ActivityCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.app.Activity,java.lang.String[],int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ActivityCompat$1 -> androidx.core.app.b$a:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    java.lang.String[] val$permissions -> a
    android.app.Activity val$activity -> b
    int val$requestCode -> c
androidx.core.app.ActivityCompat$2 -> androidx.core.app.b$b:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    android.app.Activity val$activity -> a
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback -> androidx.core.app.b$c:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> androidx.core.app.b$d:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    void validateRequestPermissionsRequestCode(int) -> a
androidx.core.app.ActivityRecreator -> androidx.core.app.c:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    java.lang.Class activityThreadClass -> a
    java.lang.reflect.Field mainThreadField -> b
    java.lang.reflect.Field tokenField -> c
    java.lang.reflect.Method performStopActivity3ParamsMethod -> d
    java.lang.reflect.Method performStopActivity2ParamsMethod -> e
    java.lang.reflect.Method requestRelaunchActivityMethod -> f
    android.os.Handler mainHandler -> g
    1:1:java.lang.Class getActivityThreadClass():0:0 -> a
    1:1:java.lang.reflect.Field getMainThreadField():0:0 -> b
    1:1:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class):0:0 -> c
    1:1:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class):0:0 -> d
    1:1:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class):0:0 -> e
    1:1:java.lang.reflect.Field getTokenField():0:0 -> f
    1:1:boolean needsRelaunchCall():0:0 -> g
    1:1:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity):0:0 -> h
    1:1:boolean recreate(android.app.Activity):0:0 -> i
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.c$a:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/app/c$d;"}
    java.lang.Object val$token -> b
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.c$b:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    android.app.Application val$application -> a
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/app/c$d;"}
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.c$c:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    java.lang.Object val$activityThread -> a
    java.lang.Object val$token -> b
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.c$d:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    java.lang.Object currentlyRecreatingToken -> a
    android.app.Activity mActivity -> b
    int mRecreatingHashCode -> c
    boolean mStarted -> d
    boolean mDestroyed -> e
    boolean mStopQueued -> f
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.f:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    1:1:int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String):0:0 -> a
    1:1:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String):0:0 -> b
    1:1:java.lang.String permissionToOp(java.lang.String):0:0 -> c
androidx.core.app.AppOpsManagerCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.app.AppOpsManager,java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.AppOpsManagerCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.app.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String m(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.AppOpsManagerCompat$Api29Impl -> androidx.core.app.f$a:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    1:1:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String):0:0 -> a
    1:1:java.lang.String getOpPackageName(android.content.Context):0:0 -> b
    1:1:android.app.AppOpsManager getSystemService(android.content.Context):0:0 -> c
androidx.core.app.BundleCompat -> androidx.core.app.g:
# {"id":"sourceFile","fileName":"BundleCompat.java"}
    1:1:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder):0:0 -> a
androidx.core.app.ComponentActivity -> androidx.core.app.h:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    androidx.collection.SimpleArrayMap mExtraDataMap -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/l;"}
    1:1:boolean superDispatchKeyEvent(android.view.KeyEvent):0:0 -> i
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
# {"id":"sourceFile","fileName":"CoreComponentFactory.java"}
    1:1:java.lang.Object checkCompatWrapper(java.lang.Object):0:0 -> a
androidx.core.app.NavUtils -> androidx.core.app.i:
# {"id":"sourceFile","fileName":"NavUtils.java"}
    1:1:android.content.Intent getParentActivityIntent(android.app.Activity):0:0 -> a
    1:1:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName):0:0 -> b
    1:1:java.lang.String getParentActivityName(android.app.Activity):0:0 -> c
    1:1:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName):0:0 -> d
    1:1:void navigateUpTo(android.app.Activity,android.content.Intent):0:0 -> e
    1:1:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent):0:0 -> f
androidx.core.app.NotificationManagerCompat -> androidx.core.app.k:
# {"id":"sourceFile","fileName":"NotificationManagerCompat.java"}
    android.content.Context mContext -> a
    android.app.NotificationManager mNotificationManager -> b
    java.lang.Object sEnabledNotificationListenersLock -> c
    java.util.Set sEnabledNotificationListenerPackages -> d
    java.lang.Object sLock -> e
    1:1:boolean areNotificationsEnabled():0:0 -> a
    1:1:void createNotificationChannel(android.app.NotificationChannel):0:0 -> b
    1:1:androidx.core.app.NotificationManagerCompat from(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/app/k;"}
    1:1:android.app.NotificationChannel getNotificationChannel(java.lang.String):0:0 -> d
androidx.core.app.NotificationManagerCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.app.NotificationManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
# {"id":"sourceFile","fileName":"RemoteActionCompat.java"}
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    android.app.PendingIntent mActionIntent -> d
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
androidx.core.app.TaskStackBuilder -> androidx.core.app.l:
# {"id":"sourceFile","fileName":"TaskStackBuilder.java"}
    java.util.ArrayList mIntents -> a
    android.content.Context mSourceContext -> b
    1:1:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;)Landroidx/core/app/l;"}
    1:1:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Landroidx/core/app/l;"}
    1:1:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/ComponentName;)Landroidx/core/app/l;"}
    1:1:androidx.core.app.TaskStackBuilder create(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/app/l;"}
    1:1:void startActivities():0:0 -> e
    1:1:void startActivities(android.os.Bundle):0:0 -> f
androidx.core.app.TaskStackBuilder$SupportParentable -> androidx.core.app.l$a:
# {"id":"sourceFile","fileName":"TaskStackBuilder.java"}
    android.content.Intent getSupportParentActivityIntent() -> j
androidx.core.content.ContextCompat -> androidx.core.content.a:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    java.lang.Object sLock -> a
    java.lang.Object sSync -> b
    1:1:int checkSelfPermission(android.content.Context,java.lang.String):0:0 -> a
    1:1:int getColor(android.content.Context,int):0:0 -> b
    1:1:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0:0 -> c
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> d
    1:1:java.io.File[] getExternalCacheDirs(android.content.Context):0:0 -> e
    1:1:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String):0:0 -> f
    1:1:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle):0:0 -> g
    1:1:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle):0:0 -> h
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.a$a:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1:1:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle):0:0 -> a
    1:1:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle):0:0 -> b
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.a$b:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1:1:java.io.File[] getExternalCacheDirs(android.content.Context):0:0 -> a
    1:1:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String):0:0 -> b
    1:1:java.io.File[] getObbDirs(android.content.Context):0:0 -> c
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.a$c:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1:1:java.io.File getCodeCacheDir(android.content.Context):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> b
    1:1:java.io.File getNoBackupFilesDir(android.content.Context):0:0 -> c
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.a$d:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1:1:int getColor(android.content.Context,int):0:0 -> a
    1:1:java.lang.Object getSystemService(android.content.Context,java.lang.Class):0:0 -> b
    1:1:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class):0:0 -> c
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    androidx.core.content.FileProvider$PathStrategy mStrategy -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/content/FileProvider$a;"}
    java.lang.String[] COLUMNS -> c
    java.io.File DEVICE_ROOT -> d
    java.util.HashMap sCache -> e
    1:1:java.io.File buildPath(java.io.File,java.lang.String[]):0:0 -> a
    1:1:java.lang.Object[] copyOf(java.lang.Object[],int):0:0 -> b
    1:1:java.lang.String[] copyOf(java.lang.String[],int):0:0 -> c
    1:1:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Landroidx/core/content/FileProvider$a;"}
    1:1:int modeToMode(java.lang.String):0:0 -> e
    1:1:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Landroidx/core/content/FileProvider$a;"}
androidx.core.content.FileProvider$$ExternalSyntheticApiModelOutline0 -> androidx.core.content.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.io.File[] m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.FileProvider$PathStrategy -> androidx.core.content.FileProvider$a:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    java.io.File getFileForUri(android.net.Uri) -> a
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$b:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    1:1:java.io.File getFileForUri(android.net.Uri):0:0 -> a
    1:1:void addRoot(java.lang.String,java.io.File):0:0 -> b
androidx.core.content.PermissionChecker -> androidx.core.content.c:
# {"id":"sourceFile","fileName":"PermissionChecker.java"}
    1:1:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> a
    1:1:int checkSelfPermission(android.content.Context,java.lang.String):0:0 -> b
androidx.core.content.res.CamColor -> r.a:
# {"id":"sourceFile","fileName":"CamColor.java"}
    float mHue -> a
    float mChroma -> b
    float mJ -> c
    float mQ -> d
    float mM -> e
    float mS -> f
    float mJstar -> g
    float mAstar -> h
    float mBstar -> i
    1:22:void <init>(float,float,float,float,float,float,float,float,float):0:0 -> <init>
    1:58:float distance(androidx.core.content.res.CamColor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/a;)F"}
    13:101:androidx.core.content.res.CamColor findCamByJ(float,float,float):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FFF)Lr/a;"}
    1:7:androidx.core.content.res.CamColor fromColor(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr/a;"}
    1:576:androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILr/n;)Lr/a;"}
    1:7:androidx.core.content.res.CamColor fromJch(float,float,float):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FFF)Lr/a;"}
    2:148:androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FFFLr/n;)Lr/a;"}
    1:3:float getAStar():0:0 -> g
    1:3:float getBStar():0:0 -> h
    1:3:float getChroma():0:0 -> i
    1:3:float getHue():0:0 -> j
    1:3:float getJ():0:0 -> k
    1:3:float getJStar():0:0 -> l
    1:7:int toColor(float,float,float):0:0 -> m
    8:111:int toColor(float,float,float,androidx.core.content.res.ViewingConditions):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FFFLr/n;)I"}
    1:1:int viewed(androidx.core.content.res.ViewingConditions):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/n;)I"}
    1:7:int viewedInSrgb():0:0 -> p
androidx.core.content.res.CamUtils -> r.b:
# {"id":"sourceFile","fileName":"CamUtils.java"}
    float[][] XYZ_TO_CAM16RGB -> a
    float[][] CAM16RGB_TO_XYZ -> b
    float[] WHITE_POINT_D65 -> c
    float[][] SRGB_TO_XYZ -> d
    2:88:void <clinit>():0:0 -> <clinit>
    72:94:int intFromLStar(float):0:0 -> a
    1:9:float lStarFromInt(int):0:0 -> b
    18:30:float lStarFromY(float):0:0 -> c
    1:5:float lerp(float,float,float):0:0 -> d
    35:40:float linearized(int):0:0 -> e
    1:87:float[] xyzFromInt(int):0:0 -> f
    1:46:float yFromInt(int):0:0 -> g
    12:33:float yFromLStar(float):0:0 -> h
androidx.core.content.res.ColorStateListInflaterCompat -> r.c:
# {"id":"sourceFile","fileName":"ColorStateListInflaterCompat.java"}
    java.lang.ThreadLocal sTempTypedValue -> a
    1:8:void <clinit>():0:0 -> <clinit>
    1:32:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> a
    1:47:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> b
    1:19:android.util.TypedValue getTypedValue():0:0 -> c
    1:19:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> d
    7:248:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    1:21:boolean isColorInt(android.content.res.Resources,int):0:0 -> f
    25:67:int modulateColorAlpha(int,float,float):0:0 -> g
    3:13:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]):0:0 -> h
androidx.core.content.res.ComplexColorCompat -> r.d:
# {"id":"sourceFile","fileName":"ComplexColorCompat.java"}
    android.graphics.Shader mShader -> a
    android.content.res.ColorStateList mColorStateList -> b
    int mColor -> c
    1:10:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int):0:0 -> <init>
    1:102:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Lr/d;"}
    1:7:androidx.core.content.res.ComplexColorCompat from(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr/d;"}
    1:11:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/ColorStateList;)Lr/d;"}
    1:8:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Shader;)Lr/d;"}
    1:3:int getColor():0:0 -> e
    1:3:android.graphics.Shader getShader():0:0 -> f
    1:15:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Lr/d;"}
    1:8:boolean isGradient():0:0 -> h
    1:18:boolean isStateful():0:0 -> i
    1:26:boolean onStateChanged(int[]):0:0 -> j
    1:3:void setColor(int):0:0 -> k
    1:15:boolean willDraw():0:0 -> l
androidx.core.content.res.FontResourcesParserCompat -> r.f:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    1:22:int getType(android.content.res.TypedArray,int):0:0 -> a
    1:28:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources;)Lr/f$a;"}
    3:88:java.util.List readCerts(android.content.res.Resources,int):0:0 -> c
    3:26:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources;)Lr/f$a;"}
    1:160:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources;)Lr/f$a;"}
    1:129:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources;)Lr/f$c;"}
    4:21:void skip(org.xmlpull.v1.XmlPullParser):0:0 -> g
    1:23:java.util.List toByteArrayList(java.lang.String[]):0:0 -> h
androidx.core.content.res.FontResourcesParserCompat$$ExternalSyntheticApiModelOutline0 -> r.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int r.FontResourcesParserCompat$$ExternalSyntheticApiModelOutline0.m(android.content.res.TypedArray,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> r.f$a:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> r.f$b:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lr/f$c;"}
    1:6:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lr/f$c;)V"}
    1:3:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lr/f$c;"}
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> r.f$c:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    java.lang.String mFileName -> a
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
    int mTtcIndex -> e
    int mResourceId -> f
    1:1:void <init>(java.lang.String,int,boolean,java.lang.String,int,int):0:0 -> <init>
    1:3:java.lang.String getFileName():0:0 -> a
    1:3:int getResourceId():0:0 -> b
    1:3:int getTtcIndex():0:0 -> c
    1:3:java.lang.String getVariationSettings():0:0 -> d
    1:3:int getWeight():0:0 -> e
    1:3:boolean isItalic():0:0 -> f
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> r.f$d:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    androidx.core.provider.FontRequest mRequest -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/d;"}
    int mTimeoutMs -> b
    int mStrategy -> c
    java.lang.String mSystemFontFamilyName -> d
    1:12:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/d;IILjava/lang/String;)V"}
    1:3:int getFetchStrategy():0:0 -> a
    1:3:androidx.core.provider.FontRequest getRequest():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/d;"}
    1:3:java.lang.String getSystemFontFamilyName():0:0 -> c
    1:3:int getTimeout():0:0 -> d
androidx.core.content.res.GradientColorInflaterCompat -> r.g:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
    4:15:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/g$a;IIZI)Lr/g$a;"}
    3:242:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> b
    1:147:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Lr/g$a;"}
    7:15:android.graphics.Shader$TileMode parseTileMode(int):0:0 -> d
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> r.g$a:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
    int[] mColors -> a
    float[] mOffsets -> b
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(int,int,int):0:0 -> <init>
    3:3:void <init>(java.util.List,java.util.List):0:0 -> <init>
androidx.core.content.res.GrowingArrayUtils -> r.h:
# {"id":"sourceFile","fileName":"GrowingArrayUtils.java"}
    3:19:int[] append(int[],int,int):0:0 -> a
    3:31:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object):0:0 -> b
    1:9:int growSize(int):0:0 -> c
androidx.core.content.res.ResourcesCompat -> r.k:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    java.lang.ThreadLocal sTempTypedValue -> a
    java.util.WeakHashMap sColorStateCaches -> b
    java.lang.Object sColorStateCacheLock -> c
    1:23:void <clinit>():0:0 -> <clinit>
    1:42:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/k$c;ILandroid/content/res/ColorStateList;)V"}
    1:55:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/k$c;I)Landroid/content/res/ColorStateList;"}
    1:38:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> c
    1:16:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> d
    1:16:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme):0:0 -> e
    1:21:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILandroid/util/TypedValue;ILr/k$d;)Landroid/graphics/Typeface;"}
    1:19:android.util.TypedValue getTypedValue():0:0 -> g
    1:26:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> h
    1:21:boolean isColorInt(android.content.res.Resources,int):0:0 -> i
    1:1:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILandroid/util/TypedValue;ILr/k$d;Landroid/os/Handler;ZZ)Landroid/graphics/Typeface;"}
    1:1:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/res/Resources;Landroid/util/TypedValue;IILr/k$d;Landroid/os/Handler;ZZ)Landroid/graphics/Typeface;"}
androidx.core.content.res.ResourcesCompat$$ExternalSyntheticApiModelOutline0 -> r.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.Drawable r.ResourcesCompat$$ExternalSyntheticApiModelOutline0.m(android.content.res.Resources,int,int,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$$ExternalSyntheticApiModelOutline1 -> r.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.Drawable r.ResourcesCompat$$ExternalSyntheticApiModelOutline1.m(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$Api23Impl -> r.k$a:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    1:5:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> r.k$b:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    android.content.res.ColorStateList mValue -> a
    android.content.res.Configuration mConfiguration -> b
    1:8:void <init>(android.content.res.ColorStateList,android.content.res.Configuration):0:0 -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> r.k$c:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    android.content.res.Resources mResources -> a
    android.content.res.Resources$Theme mTheme -> b
    1:8:void <init>(android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> <init>
    8:42:boolean equals(java.lang.Object):0:0 -> equals
    1:18:int hashCode():0:0 -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> r.k$d:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    1:4:void <init>():0:0 -> <init>
    1:13:void callbackFailAsync(int,android.os.Handler):0:0 -> a
    1:13:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler):0:0 -> b
    3:12:android.os.Handler getHandler(android.os.Handler):0:0 -> c
    void onFontRetrievalFailed(int) -> d
    void onFontRetrieved(android.graphics.Typeface) -> e
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> r.k$d$a:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    android.graphics.Typeface val$typeface -> a
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/k$d;"}
    1:8:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/k$d;Landroid/graphics/Typeface;)V"}
    1:8:void run():0:0 -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> r.k$d$b:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    int val$reason -> a
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/k$d;"}
    1:8:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/k$d;I)V"}
    1:8:void run():0:0 -> run
androidx.core.content.res.ResourcesCompat$ThemeCompat -> r.k$e:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    1:18:void rebase(android.content.res.Resources$Theme):0:0 -> a
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23 -> r.k$e$a:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    java.lang.Object sRebaseMethodLock -> a
    java.lang.reflect.Method sRebaseMethod -> b
    boolean sRebaseMethodFetched -> c
    1:8:void <clinit>():0:0 -> <clinit>
    1:59:void rebase(android.content.res.Resources$Theme):0:0 -> a
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29 -> r.k$e$b:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    1:4:void rebase(android.content.res.Resources$Theme):0:0 -> a
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29$$ExternalSyntheticApiModelOutline0 -> r.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void r.ResourcesCompat$ThemeCompat$ImplApi29$$ExternalSyntheticApiModelOutline0.m(android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.TypedArrayUtils -> r.m:
# {"id":"sourceFile","fileName":"TypedArrayUtils.java"}
    1:12:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean):0:0 -> a
    1:12:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> b
    1:79:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int):0:0 -> c
    1:7:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue):0:0 -> d
    1:1:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Lr/d;"}
    1:12:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> f
    1:12:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> g
    1:12:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> h
    1:13:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> i
    1:12:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> j
    3:13:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]):0:0 -> k
    1:13:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> l
androidx.core.content.res.ViewingConditions -> r.n:
# {"id":"sourceFile","fileName":"ViewingConditions.java"}
    float mAw -> a
    float mNbb -> b
    float mNcb -> c
    float mC -> d
    float mNc -> e
    float mN -> f
    float[] mRgbD -> g
    float mFl -> h
    float mFlRoot -> i
    float mZ -> j
    androidx.core.content.res.ViewingConditions DEFAULT -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/n;"}
    1:33:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(float,float,float,float,float,float,float[],float,float,float):0:0 -> <init>
    1:3:float getAw():0:0 -> a
    1:3:float getC():0:0 -> b
    1:3:float getFl():0:0 -> c
    1:3:float getFlRoot():0:0 -> d
    1:3:float getN():0:0 -> e
    1:3:float getNbb():0:0 -> f
    1:3:float getNc():0:0 -> g
    1:3:float getNcb():0:0 -> h
    1:3:float[] getRgbD():0:0 -> i
    1:3:float getZ():0:0 -> j
    1:1:androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"([FFFFZ)Lr/n;"}
androidx.core.graphics.ColorUtils -> s.a:
# {"id":"sourceFile","fileName":"ColorUtils.java"}
    java.lang.ThreadLocal TEMP_ARRAY -> a
    1:8:void <clinit>():0:0 -> <clinit>
    104:187:int XYZToColor(double,double,double):0:0 -> a
    7:11:int compositeAlpha(int,int):0:0 -> b
    1:53:int compositeColors(int,int):0:0 -> c
    18:19:int compositeComponent(int,int,int,int,int):0:0 -> d
    1:8:int constrain(int,int,int):0:0 -> e
    15:22:int setAlphaComponent(int,int):0:0 -> f
androidx.core.graphics.Insets -> s.g:
# {"id":"sourceFile","fileName":"Insets.java"}
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    androidx.core.graphics.Insets NONE -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    1:9:void <clinit>():0:0 -> <clinit>
    1:12:void <init>(int,int,int,int):0:0 -> <init>
    1:37:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;Ls/g;)Ls/g;"}
    9:17:androidx.core.graphics.Insets of(int,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Ls/g;"}
    1:13:androidx.core.graphics.Insets of(android.graphics.Rect):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;)Ls/g;"}
    1:21:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Insets;)Ls/g;"}
    1:13:android.graphics.Insets toPlatformInsets():0:0 -> e
    8:48:boolean equals(java.lang.Object):0:0 -> equals
    1:18:int hashCode():0:0 -> hashCode
    1:55:java.lang.String toString():0:0 -> toString
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline0 -> s.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int s.Insets$$ExternalSyntheticApiModelOutline0.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline1 -> s.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int s.Insets$$ExternalSyntheticApiModelOutline1.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline2 -> s.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int s.Insets$$ExternalSyntheticApiModelOutline2.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline3 -> s.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int s.Insets$$ExternalSyntheticApiModelOutline3.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline4 -> s.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets s.Insets$$ExternalSyntheticApiModelOutline4.m(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.PaintCompat -> s.i:
# {"id":"sourceFile","fileName":"PaintCompat.java"}
    java.lang.ThreadLocal sRectThreadLocal -> a
    1:8:void <clinit>():0:0 -> <clinit>
    1:131:boolean hasGlyph(android.graphics.Paint,java.lang.String):0:0 -> a
    1:44:androidx.core.util.Pair obtainEmptyRects():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/d;"}
androidx.core.graphics.PaintCompat$$ExternalSyntheticApiModelOutline0 -> s.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean s.PaintCompat$$ExternalSyntheticApiModelOutline0.m(android.graphics.Paint,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.PathParser -> s.j:
# {"id":"sourceFile","fileName":"PathParser.java"}
    1:9:void addNode(java.util.ArrayList,char,float[]):0:0 -> a
    7:41:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/j$b;[Ls/j$b;)Z"}
    3:32:float[] copyOfRange(float[],int,int):0:0 -> c
    5:85:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)[Ls/j$b;"}
    1:41:android.graphics.Path createPathFromPathData(java.lang.String):0:0 -> e
    5:24:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/j$b;)[Ls/j$b;"}
    2:62:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILs/j$a;)V"}
    2:105:float[] getFloats(java.lang.String):0:0 -> h
    1:39:int nextStart(java.lang.String,int):0:0 -> i
    3:36:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/j$b;[Ls/j$b;)V"}
androidx.core.graphics.PathParser$ExtractFloatResult -> s.j$a:
# {"id":"sourceFile","fileName":"PathParser.java"}
    int mEndPosition -> a
    boolean mEndWithNegOrDot -> b
    1:4:void <init>():0:0 -> <init>
androidx.core.graphics.PathParser$PathDataNode -> s.j$b:
# {"id":"sourceFile","fileName":"PathParser.java"}
    char mType -> a
    float[] mParams -> b
    1:1:void <init>(char,float[]):0:0 -> <init>
    2:2:void <init>(androidx.core.graphics.PathParser$PathDataNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j$b;)V"}
    1:1:void addCommand(android.graphics.Path,float[],char,char,float[]):0:0 -> a
    1:1:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double):0:0 -> b
    1:1:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean):0:0 -> c
    1:32:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j$b;Ls/j$b;F)V"}
    2:26:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/j$b;Landroid/graphics/Path;)V"}
androidx.core.graphics.TypefaceCompat -> s.k:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
    androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/q;"}
    androidx.collection.LruCache sTypefaceCache -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/e;"}
    1:76:void <clinit>():0:0 -> <clinit>
    3:28:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int):0:0 -> a
    1:7:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;[Lx/f$b;I)Landroid/graphics/Typeface;"}
    1:1:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr/f$a;Landroid/content/res/Resources;IILr/k$d;Landroid/os/Handler;Z)Landroid/graphics/Typeface;"}
    1:23:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int):0:0 -> d
    1:31:java.lang.String createResourceUid(android.content.res.Resources,int,int):0:0 -> e
    1:13:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int):0:0 -> f
    1:19:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int):0:0 -> g
    4:31:android.graphics.Typeface getSystemFontFamily(java.lang.String):0:0 -> h
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> s.k$a:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
    androidx.core.content.res.ResourcesCompat$FontCallback mFontCallback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/k$d;"}
    1:6:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/k$d;)V"}
    1:8:void onTypefaceRequestFailed(int):0:0 -> a
    1:8:void onTypefaceRetrieved(android.graphics.Typeface):0:0 -> b
androidx.core.graphics.TypefaceCompatApi21Impl -> s.l:
# {"id":"sourceFile","fileName":"TypefaceCompatApi21Impl.java"}
    java.lang.Class sFontFamily -> b
    java.lang.reflect.Constructor sFontFamilyCtor -> c
    java.lang.reflect.Method sAddFontWeightStyle -> d
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> e
    boolean sHasInitBeenCalled -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:4:void <init>():0:0 -> <init>
    1:75:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr/f$b;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    1:95:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;[Lx/f$b;I)Landroid/graphics/Typeface;"}
    1:45:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean):0:0 -> k
    3:37:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> l
    2:44:java.io.File getFile(android.os.ParcelFileDescriptor):0:0 -> m
    3:93:void init():0:0 -> n
    1:22:java.lang.Object newFamily():0:0 -> o
androidx.core.graphics.TypefaceCompatApi24Impl -> s.m:
# {"id":"sourceFile","fileName":"TypefaceCompatApi24Impl.java"}
    java.lang.Class sFontFamily -> b
    java.lang.reflect.Constructor sFontFamilyCtor -> c
    java.lang.reflect.Method sAddFontWeightStyle -> d
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> e
    4:94:void <clinit>():0:0 -> <clinit>
    1:4:void <init>():0:0 -> <init>
    1:56:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr/f$b;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    1:75:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;[Lx/f$b;I)Landroid/graphics/Typeface;"}
    2:45:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean):0:0 -> k
    4:26:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> l
    1:17:boolean isUsable():0:0 -> m
    2:8:java.lang.Object newFamily():0:0 -> n
androidx.core.graphics.TypefaceCompatApi26Impl -> s.n:
# {"id":"sourceFile","fileName":"TypefaceCompatApi26Impl.java"}
    java.lang.Class mFontFamily -> g
    java.lang.reflect.Constructor mFontFamilyCtor -> h
    java.lang.reflect.Method mAddFontFromAssetManager -> i
    java.lang.reflect.Method mAddFontFromBuffer -> j
    java.lang.reflect.Method mFreeze -> k
    java.lang.reflect.Method mAbortCreation -> l
    java.lang.reflect.Method mCreateFromFamiliesWithDefault -> m
    1:87:void <init>():0:0 -> <init>
    1:8:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class):0:0 -> A
    1:82:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr/f$b;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    1:166:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;[Lx/f$b;I)Landroid/graphics/Typeface;"}
    1:49:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int):0:0 -> e
    4:41:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> l
    2:8:java.lang.Object newFamily():0:0 -> o
    1:7:void abortCreation(java.lang.Object):0:0 -> p
    1:1:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]):0:0 -> q
    2:45:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int):0:0 -> r
    1:16:boolean freeze(java.lang.Object):0:0 -> s
    1:19:boolean isFontFamilyPrivateAPIAvailable():0:0 -> t
    1:8:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class):0:0 -> u
    3:45:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class):0:0 -> v
    2:31:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class):0:0 -> w
    2:34:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class):0:0 -> x
    1:7:java.lang.Class obtainFontFamily():0:0 -> y
    2:6:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class):0:0 -> z
androidx.core.graphics.TypefaceCompatApi28Impl -> s.o:
# {"id":"sourceFile","fileName":"TypefaceCompatApi28Impl.java"}
    1:4:void <init>():0:0 -> <init>
    3:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> l
    2:39:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class):0:0 -> x
androidx.core.graphics.TypefaceCompatApi29Impl -> s.p:
# {"id":"sourceFile","fileName":"TypefaceCompatApi29Impl.java"}
    1:4:void <init>():0:0 -> <init>
    2:114:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr/f$b;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    1:133:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;[Lx/f$b;I)Landroid/graphics/Typeface;"}
    1:8:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream):0:0 -> d
    1:38:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int):0:0 -> e
    1:8:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lx/f$b;I)Lx/f$b;"}
androidx.core.graphics.TypefaceCompatBaseImpl -> s.q:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    java.util.concurrent.ConcurrentHashMap mFontFamilies -> a
    1:11:void <init>():0:0 -> <init>
    1:20:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Typeface;Lr/f$b;)V"}
    1:24:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr/f$b;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    1:45:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;[Lx/f$b;I)Landroid/graphics/Typeface;"}
    1:39:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream):0:0 -> d
    1:39:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int):0:0 -> e
    1:16:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/f$b;I)Lr/f$c;"}
    19:59:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;ILs/q$c;)Ljava/lang/Object;"}
    1:12:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lx/f$b;I)Lx/f$b;"}
    1:25:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Typeface;)Lr/f$b;"}
    1:44:long getUniqueKey(android.graphics.Typeface):0:0 -> j
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> s.q$a:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    androidx.core.graphics.TypefaceCompatBaseImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/q;"}
    1:6:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/q;)V"}
    1:7:int getWeight(java.lang.Object):0:0 -> a
    1:7:boolean isItalic(java.lang.Object):0:0 -> b
    1:5:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f$b;)I"}
    1:5:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f$b;)Z"}
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> s.q$b:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    androidx.core.graphics.TypefaceCompatBaseImpl this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/q;"}
    1:6:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/q;)V"}
    1:7:int getWeight(java.lang.Object):0:0 -> a
    1:7:boolean isItalic(java.lang.Object):0:0 -> b
    1:5:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/f$c;)I"}
    1:5:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/f$c;)Z"}
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor -> s.q$c:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    int getWeight(java.lang.Object) -> a
    boolean isItalic(java.lang.Object) -> b
androidx.core.graphics.TypefaceCompatUtil -> s.r:
# {"id":"sourceFile","fileName":"TypefaceCompatUtil.java"}
    3:6:void closeQuietly(java.io.Closeable):0:0 -> a
    1:31:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0:0 -> b
    1:20:boolean copyToFile(java.io.File,android.content.res.Resources,int):0:0 -> c
    1:85:boolean copyToFile(java.io.File,java.io.InputStream):0:0 -> d
    1:80:java.io.File getTempFile(android.content.Context):0:0 -> e
    1:73:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri):0:0 -> f
    1:37:java.nio.ByteBuffer mmap(java.io.File):0:0 -> g
    1:44:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[Lx/f$b;Landroid/os/CancellationSignal;)Ljava/util/Map;"}
androidx.core.graphics.drawable.DrawableCompat -> t.l:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    java.lang.reflect.Method sSetLayoutDirectionMethod -> a
    boolean sSetLayoutDirectionMethodFetched -> b
    java.lang.reflect.Method sGetLayoutDirectionMethod -> c
    boolean sGetLayoutDirectionMethodFetched -> d
    1:10:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme):0:0 -> a
    1:13:boolean canApplyTheme(android.graphics.drawable.Drawable):0:0 -> b
    1:5:int getAlpha(android.graphics.drawable.Drawable):0:0 -> c
    1:13:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable):0:0 -> d
    1:66:int getLayoutDirection(android.graphics.drawable.Drawable):0:0 -> e
    1:14:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> f
    1:5:boolean isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> g
    1:4:void jumpToCurrentState(android.graphics.drawable.Drawable):0:0 -> h
    1:4:void setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> i
    1:10:void setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> j
    1:10:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> k
    3:73:boolean setLayoutDirection(android.graphics.drawable.Drawable,int):0:0 -> l
    1:20:void setTint(android.graphics.drawable.Drawable,int):0:0 -> m
    1:20:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> n
    1:20:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> o
    1:33:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable):0:0 -> p
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline0 -> t.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorFilter t.DrawableCompat$$ExternalSyntheticApiModelOutline0.m(android.graphics.drawable.Drawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline1 -> t.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void t.DrawableCompat$$ExternalSyntheticApiModelOutline1.m(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline10 -> t.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void t.DrawableCompat$$ExternalSyntheticApiModelOutline10.m(android.graphics.drawable.Drawable,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline2 -> t.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void t.DrawableCompat$$ExternalSyntheticApiModelOutline2.m(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline3 -> t.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void t.DrawableCompat$$ExternalSyntheticApiModelOutline3.m(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline4 -> t.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int t.DrawableCompat$$ExternalSyntheticApiModelOutline4.m(android.graphics.drawable.Drawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline5 -> t.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void t.DrawableCompat$$ExternalSyntheticApiModelOutline5.m(android.graphics.drawable.Drawable,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline6 -> t.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean t.DrawableCompat$$ExternalSyntheticApiModelOutline6.m(android.graphics.drawable.Drawable,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline7 -> t.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void t.DrawableCompat$$ExternalSyntheticApiModelOutline7.m(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline8 -> t.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean t.DrawableCompat$$ExternalSyntheticApiModelOutline8.m(android.graphics.drawable.Drawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.DrawableCompat$$ExternalSyntheticApiModelOutline9 -> t.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void t.DrawableCompat$$ExternalSyntheticApiModelOutline9.m(android.graphics.drawable.Drawable,float,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    int mType -> a
    java.lang.Object mObj1 -> b
    byte[] mData -> c
    android.os.Parcelable mParcelable -> d
    int mInt1 -> e
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    android.graphics.PorterDuff$Mode mTintMode -> h
    java.lang.String mTintModeStr -> i
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    1:1:int getResId():0:0 -> a
    1:1:int getResId(android.graphics.drawable.Icon):0:0 -> b
    1:1:void onPostParceling():0:0 -> c
    1:1:void onPreParceling(boolean):0:0 -> d
    1:1:java.lang.String typeToString(int):0:0 -> e
androidx.core.graphics.drawable.IconCompat$$ExternalSyntheticApiModelOutline0 -> t.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.Icon t.IconCompat$$ExternalSyntheticApiModelOutline0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompat$$ExternalSyntheticApiModelOutline1 -> t.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int t.IconCompat$$ExternalSyntheticApiModelOutline1.m(android.graphics.drawable.Icon):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
androidx.core.graphics.drawable.TintAwareDrawable -> t.o:
# {"id":"sourceFile","fileName":"TintAwareDrawable.java"}
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawable -> t.p:
# {"id":"sourceFile","fileName":"WrappedDrawable.java"}
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> b
androidx.core.graphics.drawable.WrappedDrawableApi14 -> t.q:
# {"id":"sourceFile","fileName":"WrappedDrawableApi14.java"}
    int mCurrentColor -> b
    android.graphics.PorterDuff$Mode mCurrentMode -> c
    boolean mColorFilterSet -> d
    androidx.core.graphics.drawable.WrappedDrawableState mState -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lt/t;"}
    boolean mMutated -> f
    android.graphics.drawable.Drawable mDrawable -> g
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> h
    1:5:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.graphics.drawable.Drawable):0:0 -> <init>
    2:2:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/t;Landroid/content/res/Resources;)V"}
    1:3:android.graphics.drawable.Drawable getWrappedDrawable():0:0 -> a
    1:58:void setWrappedDrawable(android.graphics.drawable.Drawable):0:0 -> b
    1:2:boolean isCompatTintEnabled():0:0 -> c
    1:8:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt/t;"}
    1:6:void draw(android.graphics.Canvas):0:0 -> draw
    1:16:void updateLocalState(android.content.res.Resources):0:0 -> e
    1:55:boolean updateTint(int[]):0:0 -> f
    1:23:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:23:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    1:7:android.graphics.drawable.Drawable getCurrent():0:0 -> getCurrent
    1:7:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:7:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:7:int getLayoutDirection():0:0 -> getLayoutDirection
    1:7:int getMinimumHeight():0:0 -> getMinimumHeight
    1:7:int getMinimumWidth():0:0 -> getMinimumWidth
    1:7:int getOpacity():0:0 -> getOpacity
    1:7:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    1:7:int[] getState():0:0 -> getState
    1:7:android.graphics.Region getTransparentRegion():0:0 -> getTransparentRegion
    1:4:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:7:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:34:boolean isStateful():0:0 -> isStateful
    1:6:void jumpToCurrentState():0:0 -> jumpToCurrentState
    1:43:android.graphics.drawable.Drawable mutate():0:0 -> mutate
    1:8:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    1:7:boolean onLayoutDirectionChanged(int):0:0 -> onLayoutDirectionChanged
    1:7:boolean onLevelChange(int):0:0 -> onLevelChange
    1:4:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:6:void setAlpha(int):0:0 -> setAlpha
    1:6:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    1:6:void setChangingConfigurations(int):0:0 -> setChangingConfigurations
    1:6:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:6:void setDither(boolean):0:0 -> setDither
    1:6:void setFilterBitmap(boolean):0:0 -> setFilterBitmap
    1:19:boolean setState(int[]):0:0 -> setState
    1:8:void setTint(int):0:0 -> setTint
    1:12:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:12:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:19:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:4:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
androidx.core.graphics.drawable.WrappedDrawableApi21 -> t.s:
# {"id":"sourceFile","fileName":"WrappedDrawableApi21.java"}
    java.lang.reflect.Method sIsProjectedDrawableMethod -> i
    1:1:void <init>(android.graphics.drawable.Drawable):0:0 -> <init>
    2:2:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/t;Landroid/content/res/Resources;)V"}
    1:29:boolean isCompatTintEnabled():0:0 -> c
    1:25:void findAndCacheIsProjectedDrawableMethod():0:0 -> g
    1:7:android.graphics.Rect getDirtyBounds():0:0 -> getDirtyBounds
    1:6:void getOutline(android.graphics.Outline):0:0 -> getOutline
    1:30:boolean isProjected():0:0 -> isProjected
    1:6:void setHotspot(float,float):0:0 -> setHotspot
    1:6:void setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:13:boolean setState(int[]):0:0 -> setState
    1:16:void setTint(int):0:0 -> setTint
    1:16:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:16:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableApi21$$ExternalSyntheticApiModelOutline0 -> t.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Rect t.WrappedDrawableApi21$$ExternalSyntheticApiModelOutline0.m(android.graphics.drawable.Drawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.WrappedDrawableState -> t.t:
# {"id":"sourceFile","fileName":"WrappedDrawableState.java"}
    int mChangingConfigurations -> a
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    1:29:void <init>(androidx.core.graphics.drawable.WrappedDrawableState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/t;)V"}
    1:8:boolean canConstantState():0:0 -> a
    1:14:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
androidx.core.internal.view.SupportMenu -> u.a:
# {"id":"sourceFile","fileName":"SupportMenu.java"}
androidx.core.internal.view.SupportMenuItem -> u.b:
# {"id":"sourceFile","fileName":"SupportMenuItem.java"}
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/b;)Lu/b;"}
    boolean collapseActionView() -> collapseActionView
    boolean expandActionView() -> expandActionView
    android.view.View getActionView() -> getActionView
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    int getNumericModifiers() -> getNumericModifiers
    java.lang.CharSequence getTooltipText() -> getTooltipText
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lu/b;"}
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lu/b;"}
androidx.core.math.MathUtils -> v.a:
# {"id":"sourceFile","fileName":"MathUtils.java"}
    1:7:int clamp(int,int,int):0:0 -> a
androidx.core.os.BuildCompat -> w.a:
# {"id":"sourceFile","fileName":"BuildCompat.java"}
    1:18:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String):0:0 -> a
    1:10:boolean isAtLeastR():0:0 -> b
    1:21:boolean isAtLeastS():0:0 -> c
androidx.core.os.CancellationSignal -> w.b:
# {"id":"sourceFile","fileName":"CancellationSignal.java"}
    void cancel() -> a
androidx.core.os.TraceCompat -> w.c:
# {"id":"sourceFile","fileName":"TraceCompat.java"}
    long sTraceTagApp -> a
    java.lang.reflect.Method sIsTagEnabledMethod -> b
    java.lang.reflect.Method sAsyncTraceBeginMethod -> c
    java.lang.reflect.Method sAsyncTraceEndMethod -> d
    java.lang.reflect.Method sTraceCounterMethod -> e
    5:101:void <clinit>():0:0 -> <clinit>
    1:4:void beginSection(java.lang.String):0:0 -> a
    1:4:void endSection():0:0 -> b
androidx.core.provider.CallbackWithHandler -> x.a:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    androidx.core.provider.FontsContractCompat$FontRequestCallback mCallback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/f$c;"}
    android.os.Handler mCallbackHandler -> b
    1:8:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f$c;Landroid/os/Handler;)V"}
    1:13:void onTypefaceRequestFailed(int):0:0 -> a
    1:18:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e$e;)V"}
    1:13:void onTypefaceRetrieved(android.graphics.Typeface):0:0 -> c
androidx.core.provider.CallbackWithHandler$1 -> x.a$a:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/f$c;"}
    android.graphics.Typeface val$typeface -> b
    androidx.core.provider.CallbackWithHandler this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/a;"}
    1:10:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/a;Lx/f$c;Landroid/graphics/Typeface;)V"}
    1:8:void run():0:0 -> run
androidx.core.provider.CallbackWithHandler$2 -> x.a$b:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/f$c;"}
    int val$reason -> b
    androidx.core.provider.CallbackWithHandler this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/a;"}
    1:10:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/a;Lx/f$c;I)V"}
    1:8:void run():0:0 -> run
androidx.core.provider.CalleeHandler -> x.b:
# {"id":"sourceFile","fileName":"CalleeHandler.java"}
    1:22:android.os.Handler create():0:0 -> a
androidx.core.provider.FontProvider -> x.c:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    java.util.Comparator sByteArrayComparator -> a
    1:8:void <clinit>():0:0 -> <clinit>
    1:22:java.util.List convertToByteArrayList(android.content.pm.Signature[]):0:0 -> a
    1:43:boolean equalsByteArrayList(java.util.List,java.util.List):0:0 -> b
    1:20:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/d;Landroid/content/res/Resources;)Ljava/util/List;"}
    1:33:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;Landroid/os/CancellationSignal;)Lx/f$a;"}
    1:140:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/pm/PackageManager;Lx/d;Landroid/content/res/Resources;)Landroid/content/pm/ProviderInfo;"}
    3:235:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;Ljava/lang/String;Landroid/os/CancellationSignal;)[Lx/f$b;"}
androidx.core.provider.FontProvider$1 -> x.c$a:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    1:4:void <init>():0:0 -> <init>
    1:25:int compare(byte[],byte[]):0:0 -> a
    1:9:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
androidx.core.provider.FontRequest -> x.d:
# {"id":"sourceFile","fileName":"FontRequest.java"}
    java.lang.String mProviderAuthority -> a
    java.lang.String mProviderPackage -> b
    java.lang.String mQuery -> c
    java.util.List mCertificates -> d
    int mCertificatesArray -> e
    java.lang.String mIdentifier -> f
    1:45:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
    1:24:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String):0:0 -> a
    1:3:java.util.List getCertificates():0:0 -> b
    1:3:int getCertificatesArrayResId():0:0 -> c
    1:3:java.lang.String getId():0:0 -> d
    1:3:java.lang.String getProviderAuthority():0:0 -> e
    1:3:java.lang.String getProviderPackage():0:0 -> f
    1:3:java.lang.String getQuery():0:0 -> g
    1:148:java.lang.String toString():0:0 -> toString
androidx.core.provider.FontRequestWorker -> x.e:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    androidx.collection.LruCache sTypefaceCache -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/e;"}
    java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE -> b
    java.lang.Object LOCK -> c
    androidx.collection.SimpleArrayMap PENDING_REPLIES -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    1:36:void <clinit>():0:0 -> <clinit>
    1:25:java.lang.String createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/d;I)Ljava/lang/String;"}
    1:49:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f$a;)I"}
    1:66:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/Context;Lx/d;I)Lx/e$e;"}
    1:81:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;ILjava/util/concurrent/Executor;Lx/a;)Landroid/graphics/Typeface;"}
    1:66:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;Lx/a;II)Landroid/graphics/Typeface;"}
androidx.core.provider.FontRequestWorker$1 -> x.e$a:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    java.lang.String val$id -> a
    android.content.Context val$context -> b
    androidx.core.provider.FontRequest val$request -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/d;"}
    int val$style -> d
    1:12:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/Context;Lx/d;I)V"}
    1:13:androidx.core.provider.FontRequestWorker$TypefaceResult call():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/e$e;"}
    1:5:java.lang.Object call():0:0 -> call
androidx.core.provider.FontRequestWorker$2 -> x.e$b:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    androidx.core.provider.CallbackWithHandler val$callback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/a;"}
    1:6:void <init>(androidx.core.provider.CallbackWithHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/a;)V"}
    1:6:void accept(java.lang.Object):0:0 -> a
    3:14:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e$e;)V"}
androidx.core.provider.FontRequestWorker$3 -> x.e$c:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    java.lang.String val$id -> a
    android.content.Context val$context -> b
    androidx.core.provider.FontRequest val$request -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/d;"}
    int val$style -> d
    1:12:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/Context;Lx/d;I)V"}
    1:20:androidx.core.provider.FontRequestWorker$TypefaceResult call():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/e$e;"}
    1:5:java.lang.Object call():0:0 -> call
androidx.core.provider.FontRequestWorker$4 -> x.e$d:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    java.lang.String val$id -> a
    1:6:void <init>(java.lang.String):0:0 -> <init>
    1:6:void accept(java.lang.Object):0:0 -> a
    1:49:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e$e;)V"}
androidx.core.provider.FontRequestWorker$TypefaceResult -> x.e$e:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(android.graphics.Typeface):0:0 -> <init>
    1:8:boolean isSuccess():0:0 -> a
androidx.core.provider.FontsContractCompat -> x.f:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    2:6:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;[Lx/f$b;)Landroid/graphics/Typeface;"}
    1:5:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/CancellationSignal;Lx/d;)Lx/f$a;"}
    1:1:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;IZILandroid/os/Handler;Lx/f$c;)Landroid/graphics/Typeface;"}
androidx.core.provider.FontsContractCompat$FontFamilyResult -> x.f$a:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    int mStatusCode -> a
    androidx.core.provider.FontsContractCompat$FontInfo[] mFonts -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lx/f$b;"}
    1:8:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Lx/f$b;)V"}
    1:6:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Lx/f$b;)Lx/f$a;"}
    1:3:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lx/f$b;"}
    1:3:int getStatusCode():0:0 -> c
androidx.core.provider.FontsContractCompat$FontInfo -> x.f$b:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    android.net.Uri mUri -> a
    int mTtcIndex -> b
    int mWeight -> c
    boolean mItalic -> d
    int mResultCode -> e
    1:20:void <init>(android.net.Uri,int,int,boolean,int):0:0 -> <init>
    1:12:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IIZI)Lx/f$b;"}
    1:3:int getResultCode():0:0 -> b
    1:3:int getTtcIndex():0:0 -> c
    1:3:android.net.Uri getUri():0:0 -> d
    1:3:int getWeight():0:0 -> e
    1:3:boolean isItalic():0:0 -> f
androidx.core.provider.FontsContractCompat$FontRequestCallback -> x.f$c:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    1:4:void <init>():0:0 -> <init>
    void onTypefaceRequestFailed(int) -> a
    void onTypefaceRetrieved(android.graphics.Typeface) -> b
androidx.core.provider.RequestExecutor -> x.g:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    1:26:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int):0:0 -> a
    1:13:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;Lz/a;)V"}
    1:31:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int):0:0 -> c
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> x.g$a:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    java.lang.String mThreadName -> a
    int mPriority -> b
    1:8:void <init>(java.lang.String,int):0:0 -> <init>
    1:10:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> x.g$a$a:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    int mPriority -> a
    1:6:void <init>(java.lang.Runnable,java.lang.String,int):0:0 -> <init>
    1:9:void run():0:0 -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> x.g$b:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    java.util.concurrent.Callable mCallable -> a
    androidx.core.util.Consumer mConsumer -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lz/a;"}
    android.os.Handler mHandler -> c
    1:10:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Ljava/util/concurrent/Callable;Lz/a;)V"}
    1:21:void run():0:0 -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> x.g$b$a:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    androidx.core.util.Consumer val$consumer -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lz/a;"}
    java.lang.Object val$result -> b
    androidx.core.provider.RequestExecutor$ReplyRunnable this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/g$b;"}
    1:10:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g$b;Lz/a;Ljava/lang/Object;)V"}
    1:8:void run():0:0 -> run
androidx.core.text.PrecomputedTextCompat -> y.n:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
androidx.core.text.PrecomputedTextCompat$Params -> y.n$a:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    android.text.TextPaint mPaint -> a
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    int mHyphenationFrequency -> d
    android.text.PrecomputedText$Params mWrapped -> e
    1:1:void <init>(android.text.PrecomputedText$Params):0:0 -> <init>
    2:2:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int):0:0 -> <init>
    1:231:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n$a;)Z"}
    1:3:int getBreakStrategy():0:0 -> b
    1:3:int getHyphenationFrequency():0:0 -> c
    1:3:android.text.TextDirectionHeuristic getTextDirection():0:0 -> d
    1:3:android.text.TextPaint getTextPaint():0:0 -> e
    5:29:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0 -> y.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0.m(android.text.TextPaint):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline1 -> y.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline1.m(android.text.TextPaint):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline10 -> y.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params$Builder y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline10.m(android.text.PrecomputedText$Params$Builder,android.text.TextDirectionHeuristic):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline11 -> y.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline11.m(android.text.PrecomputedText$Params$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline12 -> y.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline12.m(android.text.TextPaint):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline2 -> y.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline2.m(android.text.TextPaint):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline3 -> y.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline3.m(android.text.TextPaint):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline4 -> y.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.TextPaint y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline4.m(android.text.PrecomputedText$Params):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline5 -> y.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.TextDirectionHeuristic y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline5.m(android.text.PrecomputedText$Params):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline6 -> y.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline6.m(android.text.PrecomputedText$Params):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline7 -> y.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline7.m(android.text.PrecomputedText$Params):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline8 -> y.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params$Builder y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline8.m(android.text.PrecomputedText$Params$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline9 -> y.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params$Builder y.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline9.m(android.text.PrecomputedText$Params$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$Builder -> y.n$a$a:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    android.text.TextPaint mPaint -> a
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    int mHyphenationFrequency -> d
    1:27:void <init>(android.text.TextPaint):0:0 -> <init>
    1:14:androidx.core.text.PrecomputedTextCompat$Params build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/n$a;"}
    1:3:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ly/n$a$a;"}
    1:3:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ly/n$a$a;"}
    1:3:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/TextDirectionHeuristic;)Ly/n$a$a;"}
androidx.core.util.Consumer -> z.a:
# {"id":"sourceFile","fileName":"Consumer.java"}
    void accept(java.lang.Object) -> a
androidx.core.util.DebugUtils -> z.b:
# {"id":"sourceFile","fileName":"DebugUtils.java"}
    3:62:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder):0:0 -> a
androidx.core.util.ObjectsCompat -> z.c:
# {"id":"sourceFile","fileName":"ObjectsCompat.java"}
    1:5:boolean equals(java.lang.Object,java.lang.Object):0:0 -> a
    1:5:int hash(java.lang.Object[]):0:0 -> b
    4:9:java.lang.Object requireNonNull(java.lang.Object,java.lang.String):0:0 -> c
androidx.core.util.Pair -> z.d:
# {"id":"sourceFile","fileName":"Pair.java"}
    java.lang.Object first -> a
    java.lang.Object second -> b
    1:8:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:30:boolean equals(java.lang.Object):0:0 -> equals
    1:22:int hashCode():0:0 -> hashCode
    1:35:java.lang.String toString():0:0 -> toString
androidx.core.util.Preconditions -> z.e:
# {"id":"sourceFile","fileName":"Preconditions.java"}
    4:13:void checkArgument(boolean,java.lang.Object):0:0 -> a
    10:69:int checkArgumentInRange(int,int,int,java.lang.String):0:0 -> b
    4:9:int checkArgumentNonnegative(int):0:0 -> c
    4:9:int checkArgumentNonnegative(int,java.lang.String):0:0 -> d
    6:49:int checkFlagsArgument(int,int):0:0 -> e
    1:4:java.lang.Object checkNotNull(java.lang.Object):0:0 -> f
    4:13:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object):0:0 -> g
    4:9:void checkState(boolean,java.lang.String):0:0 -> h
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.a:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    android.view.View$AccessibilityDelegate mOriginalDelegate -> a
    android.view.View$AccessibilityDelegate mBridge -> b
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.view.View$AccessibilityDelegate):0:0 -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:16:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)LA/C;"}
    1:1:java.util.List getActionList(android.view.View):0:0 -> c
    1:1:android.view.View$AccessibilityDelegate getBridge():0:0 -> d
    1:1:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View):0:0 -> e
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> f
    1:10:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;LA/B;)V"}
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> h
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> i
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> j
    1:1:boolean performClickableSpanAction(int,android.view.View):0:0 -> k
    1:1:void sendAccessibilityEvent(android.view.View,int):0:0 -> l
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> m
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.a$a:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    androidx.core.view.AccessibilityDelegateCompat mCompat -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/a;"}
androidx.core.view.ActionProvider -> androidx.core.view.b:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
    android.content.Context mContext -> a
    androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/b$a;"}
    androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/b$b;"}
    boolean hasSubMenu() -> a
    boolean isVisible() -> b
    android.view.View onCreateActionView(android.view.MenuItem) -> c
    boolean onPerformDefaultAction() -> d
    void onPrepareSubMenu(android.view.SubMenu) -> e
    boolean overridesItemVisibility() -> f
    1:1:void reset():0:0 -> g
    1:1:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/b$a;)V"}
    void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/b$b;)V"}
androidx.core.view.ActionProvider$SubUiVisibilityListener -> androidx.core.view.b$a:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
androidx.core.view.ActionProvider$VisibilityListener -> androidx.core.view.b$b:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
androidx.core.view.ContentInfoCompat -> androidx.core.view.c:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    androidx.core.view.ContentInfoCompat$Compat mCompat -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/c$f;"}
    1:1:java.lang.String flagsToString(int):0:0 -> a
    1:1:android.content.ClipData getClip():0:0 -> b
    1:1:int getFlags():0:0 -> c
    1:1:int getSource():0:0 -> d
    1:1:java.lang.String sourceToString(int):0:0 -> e
    1:1:android.view.ContentInfo toContentInfo():0:0 -> f
    1:1:androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ContentInfo;)Landroidx/core/view/c;"}
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.c$a:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    androidx.core.view.ContentInfoCompat$BuilderCompat mBuilderCompat -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/c$c;"}
    1:1:androidx.core.view.ContentInfoCompat build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/c;"}
    1:1:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Landroidx/core/view/c$a;"}
    1:1:androidx.core.view.ContentInfoCompat$Builder setFlags(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/view/c$a;"}
    1:1:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Landroidx/core/view/c$a;"}
androidx.core.view.ContentInfoCompat$BuilderCompat -> androidx.core.view.c$c:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    void setExtras(android.os.Bundle) -> a
    void setLinkUri(android.net.Uri) -> b
    androidx.core.view.ContentInfoCompat build() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/c;"}
    void setFlags(int) -> d
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl -> androidx.core.view.c$b:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    android.view.ContentInfo$Builder mPlatformBuilder -> a
    1:1:void setExtras(android.os.Bundle):0:0 -> a
    1:1:void setLinkUri(android.net.Uri):0:0 -> b
    1:1:androidx.core.view.ContentInfoCompat build():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/c;"}
    1:1:void setFlags(int):0:0 -> d
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ContentInfo m(android.view.ContentInfo$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ContentInfo$Builder m(android.view.ContentInfo$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ContentInfo$Builder m(android.view.ContentInfo$Builder,android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ContentInfo$Builder m(android.view.ContentInfo$Builder,android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompatImpl -> androidx.core.view.c$d:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    android.content.ClipData mClip -> a
    int mSource -> b
    int mFlags -> c
    android.net.Uri mLinkUri -> d
    android.os.Bundle mExtras -> e
    1:1:void setExtras(android.os.Bundle):0:0 -> a
    1:1:void setLinkUri(android.net.Uri):0:0 -> b
    1:1:androidx.core.view.ContentInfoCompat build():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/c;"}
    1:1:void setFlags(int):0:0 -> d
androidx.core.view.ContentInfoCompat$Compat -> androidx.core.view.c$f:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    int getSource() -> a
    android.content.ClipData getClip() -> b
    int getFlags() -> c
    android.view.ContentInfo getWrapped() -> d
androidx.core.view.ContentInfoCompat$Compat31Impl -> androidx.core.view.c$e:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    android.view.ContentInfo mWrapped -> a
    1:1:int getSource():0:0 -> a
    1:1:android.content.ClipData getClip():0:0 -> b
    1:1:int getFlags():0:0 -> c
    1:1:android.view.ContentInfo getWrapped():0:0 -> d
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.ClipData m(android.view.ContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.ContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ContentInfo m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.ContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$CompatImpl -> androidx.core.view.c$g:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    android.content.ClipData mClip -> a
    int mSource -> b
    int mFlags -> c
    android.net.Uri mLinkUri -> d
    android.os.Bundle mExtras -> e
    1:1:int getSource():0:0 -> a
    1:1:android.content.ClipData getClip():0:0 -> b
    1:1:int getFlags():0:0 -> c
    1:1:android.view.ContentInfo getWrapped():0:0 -> d
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.q:
# {"id":"sourceFile","fileName":"DisplayCutoutCompat.java"}
    java.lang.Object mDisplayCutout -> a
    1:1:int getSafeInsetBottom():0:0 -> a
    1:1:int getSafeInsetLeft():0:0 -> b
    1:1:int getSafeInsetRight():0:0 -> c
    1:1:int getSafeInsetTop():0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Landroidx/core/view/q;"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.GravityCompat -> androidx.core.view.r:
# {"id":"sourceFile","fileName":"GravityCompat.java"}
    1:1:int getAbsoluteGravity(int,int):0:0 -> a
androidx.core.view.KeyEventDispatcher -> androidx.core.view.s:
# {"id":"sourceFile","fileName":"KeyEventDispatcher.java"}
    boolean sActionBarFieldsFetched -> a
    java.lang.reflect.Method sActionBarOnMenuKeyMethod -> b
    boolean sDialogFieldsFetched -> c
    java.lang.reflect.Field sDialogKeyListenerField -> d
    1:1:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent):0:0 -> a
    1:1:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0:0 -> b
    1:1:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent):0:0 -> c
    1:1:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> d
    1:1:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/s$a;Landroid/view/View;Landroid/view/Window$Callback;Landroid/view/KeyEvent;)Z"}
    1:1:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog):0:0 -> f
androidx.core.view.KeyEventDispatcher$Component -> androidx.core.view.s$a:
# {"id":"sourceFile","fileName":"KeyEventDispatcher.java"}
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> i
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.t:
# {"id":"sourceFile","fileName":"LayoutInflaterCompat.java"}
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> a
    boolean sCheckedField -> b
    1:1:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> a
    1:1:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> b
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.u:
# {"id":"sourceFile","fileName":"MarginLayoutParamsCompat.java"}
    1:1:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams):0:0 -> a
    1:1:int getMarginStart(android.view.ViewGroup$MarginLayoutParams):0:0 -> b
androidx.core.view.MenuHostHelper -> androidx.core.view.v:
# {"id":"sourceFile","fileName":"MenuHostHelper.java"}
    java.lang.Runnable mOnInvalidateMenuCallback -> a
    java.util.concurrent.CopyOnWriteArrayList mMenuProviders -> b
    java.util.Map mProviderToLifecycleContainers -> c
    1:1:void onCreateMenu(android.view.Menu,android.view.MenuInflater):0:0 -> a
    1:1:boolean onMenuItemSelected(android.view.MenuItem):0:0 -> b
androidx.core.view.MenuItemCompat -> androidx.core.view.C:
# {"id":"sourceFile","fileName":"MenuItemCompat.java"}
    1:1:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/MenuItem;Landroidx/core/view/b;)Landroid/view/MenuItem;"}
    1:1:void setAlphabeticShortcut(android.view.MenuItem,char,int):0:0 -> b
    1:1:void setContentDescription(android.view.MenuItem,java.lang.CharSequence):0:0 -> c
    1:1:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList):0:0 -> d
    1:1:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode):0:0 -> e
    1:1:void setNumericShortcut(android.view.MenuItem,char,int):0:0 -> f
    1:1:void setTooltipText(android.view.MenuItem,java.lang.CharSequence):0:0 -> g
androidx.core.view.MenuItemCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.MenuItem m(android.view.MenuItem,android.content.res.ColorStateList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.MenuItem m(android.view.MenuItem,char,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.MenuItem m(android.view.MenuItem,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.MenuItem m(android.view.MenuItem,char,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.A:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.MenuItem m(android.view.MenuItem,android.graphics.PorterDuff$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.B:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.MenuItem m(android.view.MenuItem,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.NestedScrollingChild -> androidx.core.view.D:
# {"id":"sourceFile","fileName":"NestedScrollingChild.java"}
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.E:
# {"id":"sourceFile","fileName":"NestedScrollingChildHelper.java"}
    android.view.ViewParent mNestedScrollingParentTouch -> a
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    android.view.View mView -> c
    boolean mIsNestedScrollingEnabled -> d
    int[] mTempNestedScrollConsumed -> e
    1:1:boolean dispatchNestedFling(float,float,boolean):0:0 -> a
    1:1:boolean dispatchNestedPreFling(float,float):0:0 -> b
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> c
    1:1:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> d
    1:1:boolean dispatchNestedScroll(int,int,int,int,int[]):0:0 -> e
    1:1:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0:0 -> f
    1:1:android.view.ViewParent getNestedScrollingParentForType(int):0:0 -> g
    1:1:int[] getTempNestedScrollConsumed():0:0 -> h
    1:1:boolean hasNestedScrollingParent(int):0:0 -> i
    1:1:boolean isNestedScrollingEnabled():0:0 -> j
    1:1:void setNestedScrollingEnabled(boolean):0:0 -> k
    1:1:void setNestedScrollingParentForType(int,android.view.ViewParent):0:0 -> l
    1:1:boolean startNestedScroll(int,int):0:0 -> m
    1:1:void stopNestedScroll(int):0:0 -> n
androidx.core.view.NestedScrollingParent -> androidx.core.view.H:
# {"id":"sourceFile","fileName":"NestedScrollingParent.java"}
androidx.core.view.NestedScrollingParent2 -> androidx.core.view.F:
# {"id":"sourceFile","fileName":"NestedScrollingParent2.java"}
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> i
    void onNestedScroll(android.view.View,int,int,int,int,int) -> l
    void onStopNestedScroll(android.view.View,int) -> m
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> n
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> o
androidx.core.view.NestedScrollingParent3 -> androidx.core.view.G:
# {"id":"sourceFile","fileName":"NestedScrollingParent3.java"}
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> k
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.I:
# {"id":"sourceFile","fileName":"NestedScrollingParentHelper.java"}
    int mNestedScrollAxesTouch -> a
    int mNestedScrollAxesNonTouch -> b
    1:1:int getNestedScrollAxes():0:0 -> a
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int):0:0 -> b
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> c
    1:1:void onStopNestedScroll(android.view.View,int):0:0 -> d
androidx.core.view.OnApplyWindowInsetsListener -> androidx.core.view.J:
# {"id":"sourceFile","fileName":"OnApplyWindowInsetsListener.java"}
    androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/j0;)Landroidx/core/view/j0;"}
androidx.core.view.OnReceiveContentListener -> androidx.core.view.K:
# {"id":"sourceFile","fileName":"OnReceiveContentListener.java"}
    androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/c;)Landroidx/core/view/c;"}
androidx.core.view.OnReceiveContentViewBehavior -> androidx.core.view.L:
# {"id":"sourceFile","fileName":"OnReceiveContentViewBehavior.java"}
    androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/c;)Landroidx/core/view/c;"}
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.M:
# {"id":"sourceFile","fileName":"OneShotPreDrawListener.java"}
    android.view.View mView -> b
    android.view.ViewTreeObserver mViewTreeObserver -> c
    java.lang.Runnable mRunnable -> d
    1:1:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ljava/lang/Runnable;)Landroidx/core/view/M;"}
    1:1:void removeListener():0:0 -> b
androidx.core.view.TintableBackgroundView -> androidx.core.view.N:
# {"id":"sourceFile","fileName":"TintableBackgroundView.java"}
androidx.core.view.ViewCompat -> androidx.core.view.Q:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    java.util.concurrent.atomic.AtomicInteger sNextGeneratedId -> a
    java.util.WeakHashMap sTransitionNameMap -> b
    java.util.WeakHashMap sViewPropertyAnimatorMap -> c
    java.lang.reflect.Field sAccessibilityDelegateField -> d
    boolean sAccessibilityDelegateCheckFailed -> e
    int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS -> f
    androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/L;"}
    androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/Q$e;"}
    1:1:boolean isAttachedToWindow(android.view.View):0:0 -> A
    1:1:boolean isLaidOut(android.view.View):0:0 -> B
    1:1:boolean isScreenReaderFocusable(android.view.View):0:0 -> C
    1:1:androidx.core.view.ContentInfoCompat lambda$static$0(androidx.core.view.ContentInfoCompat):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/c;)Landroidx/core/view/c;"}
    1:1:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0:0 -> E
    1:1:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/j0;)Landroidx/core/view/j0;"}
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty():0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/Q$f;"}
    1:1:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/c;)Landroidx/core/view/c;"}
    1:1:void postInvalidateOnAnimation(android.view.View):0:0 -> I
    1:1:void postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> J
    1:1:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> K
    1:1:void requestApplyInsets(android.view.View):0:0 -> L
    1:1:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> M
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty():0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/Q$f;"}
    1:1:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/a;)V"}
    1:1:void setAccessibilityHeading(android.view.View,boolean):0:0 -> P
    1:1:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence):0:0 -> Q
    1:1:void setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> R
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> S
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> T
    1:1:void setElevation(android.view.View,float):0:0 -> U
    1:1:void setImportantForAccessibility(android.view.View,int):0:0 -> V
    1:1:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/J;)V"}
    1:1:void setScreenReaderFocusable(android.view.View,boolean):0:0 -> X
    1:1:void setScrollIndicators(android.view.View,int,int):0:0 -> Y
    1:1:void setTransitionName(android.view.View,java.lang.String):0:0 -> Z
    1:1:androidx.core.view.ContentInfoCompat $r8$lambda$mRexKut8PHPxTytR38MAzVT9ekI(androidx.core.view.ContentInfoCompat):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/c;)Landroidx/core/view/c;"}
    1:1:void setViewImportanceForAccessibilityIfNeeded(android.view.View):0:0 -> a0
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/Q$f;"}
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty():0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/Q$f;"}
    1:1:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/e0;"}
    1:1:void stopNestedScroll(android.view.View):0:0 -> c0
    1:1:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/j0;Landroid/graphics/Rect;)Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/j0;)Landroidx/core/view/j0;"}
    1:1:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0:0 -> f
    1:1:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> g
    1:1:void ensureAccessibilityDelegateCompat(android.view.View):0:0 -> h
    1:1:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/a;"}
    1:1:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View):0:0 -> j
    1:1:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View):0:0 -> k
    1:1:int getAccessibilityLiveRegion(android.view.View):0:0 -> l
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> m
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View):0:0 -> n
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View):0:0 -> o
    1:1:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/L;"}
    1:1:int getImportantForAccessibility(android.view.View):0:0 -> q
    1:1:int getLayoutDirection(android.view.View):0:0 -> r
    1:1:int getMinimumHeight(android.view.View):0:0 -> s
    1:1:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View):0:0 -> t
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/j0;"}
    1:1:java.lang.CharSequence getStateDescription(android.view.View):0:0 -> v
    1:1:java.lang.String getTransitionName(android.view.View):0:0 -> w
    1:1:int getWindowSystemUiVisibility(android.view.View):0:0 -> x
    1:1:boolean hasOnClickListeners(android.view.View):0:0 -> y
    1:1:boolean isAccessibilityHeading(android.view.View):0:0 -> z
androidx.core.view.ViewCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.O:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.view.WindowInsets,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$$ExternalSyntheticLambda1 -> androidx.core.view.P:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void <init>():0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/c;)Landroidx/core/view/c;"}
androidx.core.view.ViewCompat$1 -> androidx.core.view.Q$a:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:java.lang.Object frameworkGet(android.view.View):0:0 -> d
    1:1:void frameworkSet(android.view.View,java.lang.Object):0:0 -> e
    1:1:boolean shouldUpdate(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Boolean frameworkGet(android.view.View):0:0 -> i
    1:1:void frameworkSet(android.view.View,java.lang.Boolean):0:0 -> j
    1:1:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean):0:0 -> k
androidx.core.view.ViewCompat$2 -> androidx.core.view.Q$b:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:java.lang.Object frameworkGet(android.view.View):0:0 -> d
    1:1:void frameworkSet(android.view.View,java.lang.Object):0:0 -> e
    1:1:boolean shouldUpdate(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> i
    1:1:void frameworkSet(android.view.View,java.lang.CharSequence):0:0 -> j
    1:1:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence):0:0 -> k
androidx.core.view.ViewCompat$3 -> androidx.core.view.Q$c:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:java.lang.Object frameworkGet(android.view.View):0:0 -> d
    1:1:void frameworkSet(android.view.View,java.lang.Object):0:0 -> e
    1:1:boolean shouldUpdate(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> i
    1:1:void frameworkSet(android.view.View,java.lang.CharSequence):0:0 -> j
    1:1:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence):0:0 -> k
androidx.core.view.ViewCompat$4 -> androidx.core.view.Q$d:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:java.lang.Object frameworkGet(android.view.View):0:0 -> d
    1:1:void frameworkSet(android.view.View,java.lang.Object):0:0 -> e
    1:1:boolean shouldUpdate(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Boolean frameworkGet(android.view.View):0:0 -> i
    1:1:void frameworkSet(android.view.View,java.lang.Boolean):0:0 -> j
    1:1:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean):0:0 -> k
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.Q$e:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    java.util.WeakHashMap mPanesToVisible -> b
    1:1:void addAccessibilityPane(android.view.View):0:0 -> a
    1:1:void checkPaneVisibility(android.view.View,boolean):0:0 -> b
    1:1:void registerForLayoutCallback(android.view.View):0:0 -> c
    1:1:void removeAccessibilityPane(android.view.View):0:0 -> d
    1:1:void unregisterForLayoutCallback(android.view.View):0:0 -> e
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.Q$f:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    int mTagKey -> a
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mContentChangeType -> d
    1:1:void <init>(int,java.lang.Class,int):0:0 -> <init>
    2:2:void <init>(int,java.lang.Class,int,int):0:0 -> <init>
    1:1:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean):0:0 -> a
    1:1:boolean extrasAvailable():0:0 -> b
    1:1:boolean frameworkAvailable():0:0 -> c
    java.lang.Object frameworkGet(android.view.View) -> d
    void frameworkSet(android.view.View,java.lang.Object) -> e
    1:1:java.lang.Object get(android.view.View):0:0 -> f
    1:1:void set(android.view.View,java.lang.Object):0:0 -> g
    boolean shouldUpdate(java.lang.Object,java.lang.Object) -> h
androidx.core.view.ViewCompat$Api15Impl -> androidx.core.view.Q$g:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:boolean hasOnClickListeners(android.view.View):0:0 -> a
androidx.core.view.ViewCompat$Api16Impl -> androidx.core.view.Q$h:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0:0 -> a
    1:1:boolean getFitsSystemWindows(android.view.View):0:0 -> b
    1:1:int getImportantForAccessibility(android.view.View):0:0 -> c
    1:1:int getMinimumHeight(android.view.View):0:0 -> d
    1:1:int getMinimumWidth(android.view.View):0:0 -> e
    1:1:android.view.ViewParent getParentForAccessibility(android.view.View):0:0 -> f
    1:1:int getWindowSystemUiVisibility(android.view.View):0:0 -> g
    1:1:boolean hasOverlappingRendering(android.view.View):0:0 -> h
    1:1:boolean hasTransientState(android.view.View):0:0 -> i
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> j
    1:1:void postInvalidateOnAnimation(android.view.View):0:0 -> k
    1:1:void postInvalidateOnAnimation(android.view.View,int,int,int,int):0:0 -> l
    1:1:void postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> m
    1:1:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> n
    1:1:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener):0:0 -> o
    1:1:void requestFitSystemWindows(android.view.View):0:0 -> p
    1:1:void setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> q
    1:1:void setHasTransientState(android.view.View,boolean):0:0 -> r
    1:1:void setImportantForAccessibility(android.view.View,int):0:0 -> s
androidx.core.view.ViewCompat$Api17Impl -> androidx.core.view.Q$i:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:int generateViewId():0:0 -> a
    1:1:android.view.Display getDisplay(android.view.View):0:0 -> b
    1:1:int getLabelFor(android.view.View):0:0 -> c
    1:1:int getLayoutDirection(android.view.View):0:0 -> d
    1:1:int getPaddingEnd(android.view.View):0:0 -> e
    1:1:int getPaddingStart(android.view.View):0:0 -> f
    1:1:boolean isPaddingRelative(android.view.View):0:0 -> g
    1:1:void setLabelFor(android.view.View,int):0:0 -> h
    1:1:void setLayerPaint(android.view.View,android.graphics.Paint):0:0 -> i
    1:1:void setLayoutDirection(android.view.View,int):0:0 -> j
    1:1:void setPaddingRelative(android.view.View,int,int,int,int):0:0 -> k
androidx.core.view.ViewCompat$Api19Impl -> androidx.core.view.Q$j:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:int getAccessibilityLiveRegion(android.view.View):0:0 -> a
    1:1:boolean isAttachedToWindow(android.view.View):0:0 -> b
    1:1:boolean isLaidOut(android.view.View):0:0 -> c
    1:1:boolean isLayoutDirectionResolved(android.view.View):0:0 -> d
    1:1:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int):0:0 -> e
    1:1:void setAccessibilityLiveRegion(android.view.View,int):0:0 -> f
    1:1:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int):0:0 -> g
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.Q$k:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> a
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> b
    1:1:void requestApplyInsets(android.view.View):0:0 -> c
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.Q$l:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/j0;Landroid/graphics/Rect;)Landroidx/core/view/j0;"}
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean):0:0 -> c
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float):0:0 -> d
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]):0:0 -> e
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]):0:0 -> f
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View):0:0 -> g
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View):0:0 -> h
    1:1:float getElevation(android.view.View):0:0 -> i
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/j0;"}
    1:1:java.lang.String getTransitionName(android.view.View):0:0 -> k
    1:1:float getTranslationZ(android.view.View):0:0 -> l
    1:1:float getZ(android.view.View):0:0 -> m
    1:1:boolean hasNestedScrollingParent(android.view.View):0:0 -> n
    1:1:boolean isImportantForAccessibility(android.view.View):0:0 -> o
    1:1:boolean isNestedScrollingEnabled(android.view.View):0:0 -> p
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> q
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> r
    1:1:void setElevation(android.view.View,float):0:0 -> s
    1:1:void setNestedScrollingEnabled(android.view.View,boolean):0:0 -> t
    1:1:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/J;)V"}
    1:1:void setTransitionName(android.view.View,java.lang.String):0:0 -> v
    1:1:void setTranslationZ(android.view.View,float):0:0 -> w
    1:1:void setZ(android.view.View,float):0:0 -> x
    1:1:boolean startNestedScroll(android.view.View,int):0:0 -> y
    1:1:void stopNestedScroll(android.view.View):0:0 -> z
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.Q$l$a:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    androidx.core.view.WindowInsetsCompat mLastInsets -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    android.view.View val$v -> b
    androidx.core.view.OnApplyWindowInsetsListener val$listener -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/J;"}
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.Q$m:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/j0;"}
    1:1:int getScrollIndicators(android.view.View):0:0 -> b
    1:1:void setScrollIndicators(android.view.View,int):0:0 -> c
    1:1:void setScrollIndicators(android.view.View,int,int):0:0 -> d
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.Q$n:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/Q$s;)V"}
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> b
    1:1:boolean isAccessibilityHeading(android.view.View):0:0 -> c
    1:1:boolean isScreenReaderFocusable(android.view.View):0:0 -> d
    1:1:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/Q$s;)V"}
    1:1:java.lang.Object requireViewById(android.view.View,int):0:0 -> f
    1:1:void setAccessibilityHeading(android.view.View,boolean):0:0 -> g
    1:1:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence):0:0 -> h
    1:1:void setScreenReaderFocusable(android.view.View,boolean):0:0 -> i
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.S:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void <init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/Q$s;)V"}
    1:1:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent):0:0 -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.Q$o:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View):0:0 -> a
    1:1:java.util.List getSystemGestureExclusionRects(android.view.View):0:0 -> b
    1:1:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> c
    1:1:void setSystemGestureExclusionRects(android.view.View,java.util.List):0:0 -> d
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.Q$p:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:java.lang.CharSequence getStateDescription(android.view.View):0:0 -> a
    1:1:void setStateDescription(android.view.View,java.lang.CharSequence):0:0 -> b
androidx.core.view.ViewCompat$Api31Impl -> androidx.core.view.Q$q:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:java.lang.String[] getReceiveContentMimeTypes(android.view.View):0:0 -> a
    1:1:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/c;)Landroidx/core/view/c;"}
    1:1:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;[Ljava/lang/String;Landroidx/core/view/K;)V"}
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter -> androidx.core.view.Q$r:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    androidx.core.view.OnReceiveContentListener mJetpackListener -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/K;"}
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> androidx.core.view.Q$s:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.Q$t:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    java.util.WeakHashMap mViewsContainingListeners -> a
    android.util.SparseArray mCapturedKeys -> b
    java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent -> c
    java.util.ArrayList sViewsWithListeners -> d
    1:1:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/Q$t;"}
    1:1:boolean dispatch(android.view.View,android.view.KeyEvent):0:0 -> b
    1:1:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent):0:0 -> c
    1:1:android.util.SparseArray getCapturedKeys():0:0 -> d
    1:1:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent):0:0 -> e
    1:1:boolean preDispatch(android.view.KeyEvent):0:0 -> f
    1:1:void recalcViewsWithUnhandled():0:0 -> g
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.V:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> a
    1:1:int getScaledHoverSlop(android.view.ViewConfiguration):0:0 -> a
    1:1:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context):0:0 -> b
androidx.core.view.ViewConfigurationCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.T:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewConfigurationCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.U:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewParentCompat -> androidx.core.view.d0:
# {"id":"sourceFile","fileName":"ViewParentCompat.java"}
    1:1:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean):0:0 -> a
    1:1:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float):0:0 -> b
    1:1:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int):0:0 -> c
    1:1:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]):0:0 -> d
    1:1:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> e
    1:1:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> f
    1:1:void onStopNestedScroll(android.view.ViewParent,android.view.View,int):0:0 -> g
androidx.core.view.ViewParentCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.W:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.view.ViewParent,android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewParentCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.X:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.view.ViewParent,android.view.View,float,float,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewParentCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.Y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.view.ViewParent,android.view.View,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewParentCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.Z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.view.ViewParent,android.view.View,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewParentCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.view.ViewParent,android.view.View,float,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewParentCompat$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.view.ViewParent,android.view.View,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewParentCompat$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.view.ViewParent,android.view.View,int,int,int[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.e0:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    java.lang.ref.WeakReference mView -> a
    java.lang.Runnable mStartAction -> b
    java.lang.Runnable mEndAction -> c
    int mOldLayerType -> d
    1:1:androidx.core.view.ViewPropertyAnimatorCompat alpha(float):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Landroidx/core/view/e0;"}
    1:1:void cancel():0:0 -> b
    1:1:long getDuration():0:0 -> c
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Landroidx/core/view/e0;"}
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/animation/Interpolator;)Landroidx/core/view/e0;"}
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/f0;)Landroidx/core/view/e0;"}
    1:1:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/f0;)V"}
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Landroidx/core/view/e0;"}
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/h0;)Landroidx/core/view/e0;"}
    1:1:void start():0:0 -> j
    1:1:androidx.core.view.ViewPropertyAnimatorCompat translationY(float):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Landroidx/core/view/e0;"}
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.e0$a:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    androidx.core.view.ViewPropertyAnimatorListener val$listener -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/f0;"}
    android.view.View val$view -> b
    androidx.core.view.ViewPropertyAnimatorCompat this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/e0;"}
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.e0$b:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/h0;"}
    android.view.View val$view -> b
    androidx.core.view.ViewPropertyAnimatorCompat this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/e0;"}
androidx.core.view.ViewPropertyAnimatorListener -> androidx.core.view.f0:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorListener.java"}
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.g0:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorListenerAdapter.java"}
    1:1:void onAnimationStart(android.view.View):0:0 -> b
    1:1:void onAnimationCancel(android.view.View):0:0 -> c
androidx.core.view.ViewPropertyAnimatorUpdateListener -> androidx.core.view.h0:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorUpdateListener.java"}
    void onAnimationUpdate(android.view.View) -> a
androidx.core.view.WindowInsetsCompat -> androidx.core.view.j0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.view.WindowInsetsCompat$Impl mImpl -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0$l;"}
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    1:1:void <init>(android.view.WindowInsets):0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/q;"}
    1:7:androidx.core.graphics.Insets getInsets(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ls/g;"}
    1:7:androidx.core.graphics.Insets getStableInsets():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:1:int getSystemWindowInsetBottom():0:0 -> h
    1:1:int getSystemWindowInsetLeft():0:0 -> i
    1:1:int getSystemWindowInsetRight():0:0 -> j
    1:1:int getSystemWindowInsetTop():0:0 -> k
    1:1:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/view/j0;"}
    1:43:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;IIII)Ls/g;"}
    1:1:boolean isConsumed():0:0 -> n
    1:1:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/view/j0;"}
    1:6:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/g;)V"}
    1:6:void setRootViewData(androidx.core.graphics.Insets):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:6:void setStableInsets(androidx.core.graphics.Insets):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:android.view.WindowInsets toWindowInsets():0:0 -> t
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;)Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;Landroid/view/View;)Landroidx/core/view/j0;"}
androidx.core.view.WindowInsetsCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.j0$a:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    java.lang.reflect.Field sViewAttachInfoField -> a
    java.lang.reflect.Field sStableInsets -> b
    java.lang.reflect.Field sContentInsets -> c
    boolean sReflectionSucceeded -> d
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/j0;"}
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.j0$b:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0$f;"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:6:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)Landroidx/core/view/j0$b;"}
    1:6:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)Landroidx/core/view/j0$b;"}
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.j0$f:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.view.WindowInsetsCompat mInsets -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    androidx.core.graphics.Insets[] mInsetsTypeMask -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ls/g;"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:1:void applyInsetTypes():0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.j0$c:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets mStableInsets -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    java.lang.reflect.Field sConsumedField -> e
    boolean sConsumedFieldFetched -> f
    java.lang.reflect.Constructor sConstructor -> g
    boolean sConstructorFetched -> h
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:3:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:19:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:android.view.WindowInsets createWindowInsetsInstance():0:0 -> h
androidx.core.view.WindowInsetsCompat$BuilderImpl20$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(android.view.WindowInsets,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl20$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Class m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.j0$d:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    android.view.WindowInsets$Builder mPlatBuilder -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:10:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:10:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:10:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:10:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:10:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.o0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.p0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(android.view.WindowInsets$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.j0$e:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.j0$l:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.view.WindowInsetsCompat mHost -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/q;"}
    1:3:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ls/g;"}
    1:5:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:3:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:5:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:3:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:5:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:1:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/view/j0;"}
    1:1:boolean isConsumed():0:0 -> n
    1:1:boolean isRound():0:0 -> o
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/g;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.j0$g:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets[] mOverriddenInsets -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ls/g;"}
    androidx.core.graphics.Insets mSystemWindowInsets -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    androidx.core.view.WindowInsetsCompat mRootWindowInsets -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    androidx.core.graphics.Insets mRootViewVisibleInsets -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    boolean sVisibleRectReflectionFetched -> h
    java.lang.reflect.Method sGetViewRootImplMethod -> i
    java.lang.Class sAttachInfoClass -> j
    java.lang.reflect.Field sVisibleInsetsField -> k
    java.lang.reflect.Field sAttachInfoField -> l
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroidx/core/view/j0$g;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    2:6:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ls/g;"}
    1:37:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:1:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/view/j0;"}
    1:1:boolean isRound():0:0 -> o
    1:3:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/g;)V"}
    1:3:void setRootViewData(androidx.core.graphics.Insets):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;)V"}
    1:24:androidx.core.graphics.Insets getInsets(int,boolean):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Ls/g;"}
    29:249:androidx.core.graphics.Insets getInsetsForType(int,boolean):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Ls/g;"}
    1:12:androidx.core.graphics.Insets getRootStableInsets():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:102:androidx.core.graphics.Insets getVisibleInsets(android.view.View):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Ls/g;"}
    1:1:void loadReflectionField():0:0 -> x
androidx.core.view.WindowInsetsCompat$Impl20$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.s0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl20$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.t0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl20$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.u0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl20$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.v0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl20$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.w0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.j0$h:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.graphics.Insets mStableInsets -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroidx/core/view/j0$h;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:37:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:1:boolean isConsumed():0:0 -> n
    1:3:void setStableInsets(androidx.core.graphics.Insets):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
androidx.core.view.WindowInsetsCompat$Impl21$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.x0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl21$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.y0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl21$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.z0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl21$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.A0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl21$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.B0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl21$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.C0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl21$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.D0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.j0$i:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroidx/core/view/j0$i;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/j0;"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/q;"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.E0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.F0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.G0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.j0$j:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.graphics.Insets mSystemGestureInsets -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    androidx.core.graphics.Insets mMandatorySystemGestureInsets -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    androidx.core.graphics.Insets mTappableElementInsets -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/g;"}
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroidx/core/view/j0$j;)V"}
    1:19:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:19:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:19:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/g;"}
    1:1:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/view/j0;"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/g;)V"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.H0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.I0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(android.view.WindowInsets,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.J0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.K0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.j0$k:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.view.WindowInsetsCompat CONSUMED -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/j0;"}
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/j0;Landroidx/core/view/j0$k;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:15:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ls/g;"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.L0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets m(android.view.WindowInsets,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.M0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.j0$m:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:int indexOf(int):0:0 -> a
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.j0$n:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:int toPlatformType(int):0:0 -> a
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.N0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.O0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.P0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.Q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.R0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.S0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.T0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.U0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> A.a:
# {"id":"sourceFile","fileName":"AccessibilityClickableSpanCompat.java"}
    int mOriginalClickableSpanId -> a
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B;"}
    int mClickableSpanActionId -> c
    1:10:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILA/B;I)V"}
    1:20:void onClick(android.view.View):0:0 -> onClick
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> A.B:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    int mParentVirtualDescendantId -> b
    int mVirtualDescendantId -> c
    int sClickableSpanId -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:11:void <init>(android.view.accessibility.AccessibilityNodeInfo):0:0 -> <init>
    1:7:boolean isFocused():0:0 -> A
    1:7:boolean isLongClickable():0:0 -> B
    1:7:boolean isPassword():0:0 -> C
    1:7:boolean isScrollable():0:0 -> D
    1:7:boolean isSelected():0:0 -> E
    1:7:boolean performAction(int,android.os.Bundle):0:0 -> F
    1:64:void removeCollectedSpans(android.view.View):0:0 -> G
    1:25:void setBooleanProperty(int,boolean):0:0 -> H
    1:6:void setClassName(java.lang.CharSequence):0:0 -> I
    1:17:void setHeading(boolean):0:0 -> J
    1:24:void setPaneTitle(java.lang.CharSequence):0:0 -> K
    1:17:void setScreenReaderFocusable(boolean):0:0 -> L
    1:6:void setScrollable(boolean):0:0 -> M
    1:24:void setStateDescription(java.lang.CharSequence):0:0 -> N
    1:3:android.view.accessibility.AccessibilityNodeInfo unwrap():0:0 -> O
    1:6:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/accessibility/AccessibilityNodeInfo;)LA/B;"}
    1:18:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LA/B$a;)V"}
    1:65:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int):0:0 -> b
    1:68:void addSpansToExtras(java.lang.CharSequence,android.view.View):0:0 -> c
    1:45:void clearExtrasSpans():0:0 -> d
    1:27:java.util.List extrasIntList(java.lang.String):0:0 -> e
    9:48:boolean equals(java.lang.Object):0:0 -> equals
    1:49:java.util.List getActionList():0:0 -> f
    16:132:java.lang.String getActionSymbolicName(int):0:0 -> g
    1:7:int getActions():0:0 -> h
    1:11:int hashCode():0:0 -> hashCode
    1:6:void getBoundsInParent(android.graphics.Rect):0:0 -> i
    1:6:void getBoundsInScreen(android.graphics.Rect):0:0 -> j
    1:7:java.lang.CharSequence getClassName():0:0 -> k
    1:23:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence):0:0 -> l
    1:7:java.lang.CharSequence getContentDescription():0:0 -> m
    1:7:android.os.Bundle getExtras():0:0 -> n
    1:17:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View):0:0 -> o
    1:7:java.lang.CharSequence getPackageName():0:0 -> p
    1:9:android.util.SparseArray getSpansFromViewTags(android.view.View):0:0 -> q
    1:131:java.lang.CharSequence getText():0:0 -> r
    1:7:java.lang.String getViewIdResourceName():0:0 -> s
    1:13:boolean hasSpans():0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
    4:42:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray):0:0 -> u
    1:7:boolean isCheckable():0:0 -> v
    1:7:boolean isChecked():0:0 -> w
    1:7:boolean isClickable():0:0 -> x
    1:7:boolean isEnabled():0:0 -> y
    1:7:boolean isFocusable():0:0 -> z
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0 -> A.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void A.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1 -> A.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void A.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2 -> A.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void A.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3 -> A.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List A.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4 -> A.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline5 -> A.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void A.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline5.m(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline6 -> A.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void A.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline6.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> A.B$a:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PRESS_AND_HOLD -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_IME_ENTER -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    java.lang.Object mAction -> a
    int mId -> b
    java.lang.Class mViewCommandArgumentClass -> c
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"LA/B$a;"}
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,java.lang.CharSequence):0:0 -> <init>
    2:2:void <init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <init>
    3:3:void <init>(java.lang.Object):0:0 -> <init>
    4:4:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILjava/lang/CharSequence;LA/E;Ljava/lang/Class;)V"}
    1:19:int getId():0:0 -> a
    1:19:java.lang.CharSequence getLabel():0:0 -> b
    1:2:boolean perform(android.view.View,android.os.Bundle):0:0 -> c
    5:29:boolean equals(java.lang.Object):0:0 -> equals
    1:11:int hashCode():0:0 -> hashCode
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline0 -> A.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline1 -> A.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline10 -> A.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline10.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline11 -> A.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline11.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline12 -> A.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline12.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline13 -> A.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline13.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline14 -> A.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline14.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline15 -> A.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline15.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline16 -> A.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline16.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline17 -> A.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline17.m(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline18 -> A.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline18.m(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline2 -> A.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline2.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline3 -> A.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline3.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline4 -> A.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline4.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline5 -> A.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline5.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline6 -> A.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline6.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline7 -> A.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline7.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline8 -> A.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline8.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline9 -> A.A:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction A.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline9.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> A.C:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    java.lang.Object mProvider -> a
    1:6:void <init>(java.lang.Object):0:0 -> <init>
    1:3:java.lang.Object getProvider():0:0 -> a
androidx.core.view.accessibility.AccessibilityRecordCompat -> A.D:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
    1:4:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int):0:0 -> a
    1:4:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int):0:0 -> b
androidx.core.view.accessibility.AccessibilityViewCommand -> A.E:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> A.E$a:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> A.E$b:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> A.E$c:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> A.E$d:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> A.E$e:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> A.E$f:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> A.E$g:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> A.E$h:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.inputmethod.EditorInfoCompat -> B.c:
# {"id":"sourceFile","fileName":"EditorInfoCompat.java"}
    java.lang.String[] EMPTY_STRING_ARRAY -> a
    2:6:void <clinit>():0:0 -> <clinit>
    1:45:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo):0:0 -> a
    8:25:boolean isCutOnSurrogate(java.lang.CharSequence,int,int):0:0 -> b
    1:19:boolean isPasswordInputType(int):0:0 -> c
    1:36:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> d
    1:71:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int):0:0 -> e
    1:15:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence):0:0 -> f
    1:42:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int):0:0 -> g
    12:102:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int):0:0 -> h
androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline0 -> B.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void B.EditorInfoCompat$$ExternalSyntheticApiModelOutline0.m(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline1 -> B.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String[] B.EditorInfoCompat$$ExternalSyntheticApiModelOutline1.m(android.view.inputmethod.EditorInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl -> B.c$a:
# {"id":"sourceFile","fileName":"EditorInfoCompat.java"}
    1:4:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int):0:0 -> a
androidx.core.view.inputmethod.InputConnectionCompat -> B.d:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    1:9:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListenerUsingPerformReceiveContent(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)LB/d$d;"}
    1:9:android.view.inputmethod.InputConnection createWrapper(android.view.View,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> b
    1:42:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;LB/d$d;)Landroid/view/inputmethod/InputConnection;"}
    5:131:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/os/Bundle;LB/d$d;)Z"}
androidx.core.view.inputmethod.InputConnectionCompat$1 -> B.d$a:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LB/d$d;"}
    1:6:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/inputmethod/InputConnection;ZLB/d$d;)V"}
    1:19:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle):0:0 -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> B.d$b:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LB/d$d;"}
    1:6:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/inputmethod/InputConnection;ZLB/d$d;)V"}
    1:15:boolean performPrivateCommand(java.lang.String,android.os.Bundle):0:0 -> performPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$3 -> B.d$c:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    android.view.View val$view -> a
    1:6:void <init>(android.view.View):0:0 -> <init>
    1:101:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LB/f;ILandroid/os/Bundle;)Z"}
androidx.core.view.inputmethod.InputConnectionCompat$3$$ExternalSyntheticApiModelOutline0 -> B.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.inputmethod.InputContentInfo B.InputConnectionCompat$3$$ExternalSyntheticApiModelOutline0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener -> B.d$d:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LB/f;ILandroid/os/Bundle;)Z"}
androidx.core.view.inputmethod.InputContentInfoCompat -> B.f:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LB/f$c;"}
    1:1:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LB/f$c;)V"}
    2:2:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri):0:0 -> <init>
    1:7:android.net.Uri getContentUri():0:0 -> a
    1:7:android.content.ClipDescription getDescription():0:0 -> b
    1:7:android.net.Uri getLinkUri():0:0 -> c
    1:6:void requestPermission():0:0 -> d
    1:7:java.lang.Object unwrap():0:0 -> e
    5:22:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)LB/f;"}
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> B.f$a:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    android.view.inputmethod.InputContentInfo mObject -> a
    1:1:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri):0:0 -> <init>
    2:2:void <init>(java.lang.Object):0:0 -> <init>
    1:7:android.content.ClipDescription getDescription():0:0 -> a
    1:6:void requestPermission():0:0 -> b
    1:7:android.net.Uri getLinkUri():0:0 -> c
    1:3:java.lang.Object getInputContentInfo():0:0 -> d
    1:7:android.net.Uri getContentUri():0:0 -> e
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> B.f$b:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    android.net.Uri mContentUri -> a
    android.content.ClipDescription mDescription -> b
    android.net.Uri mLinkUri -> c
    1:10:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri):0:0 -> <init>
    1:3:android.content.ClipDescription getDescription():0:0 -> a
    1:1:void requestPermission():0:0 -> b
    1:3:android.net.Uri getLinkUri():0:0 -> c
    1:2:java.lang.Object getInputContentInfo():0:0 -> d
    1:3:android.net.Uri getContentUri():0:0 -> e
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl -> B.f$c:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    android.content.ClipDescription getDescription() -> a
    void requestPermission() -> b
    android.net.Uri getLinkUri() -> c
    java.lang.Object getInputContentInfo() -> d
    android.net.Uri getContentUri() -> e
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.a:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/widget/a$a;"}
    android.view.animation.Interpolator mEdgeInterpolator -> c
    android.view.View mTarget -> d
    java.lang.Runnable mRunnable -> e
    float[] mRelativeEdges -> f
    float[] mMaximumEdges -> g
    int mEdgeType -> h
    int mActivationDelay -> i
    float[] mRelativeVelocity -> j
    float[] mMinimumVelocity -> k
    float[] mMaximumVelocity -> l
    boolean mAlreadyDelayed -> m
    boolean mNeedsReset -> n
    boolean mNeedsCancel -> o
    boolean mAnimating -> p
    boolean mEnabled -> q
    boolean mExclusive -> r
    int DEFAULT_ACTIVATION_DELAY -> s
    boolean canTargetScrollHorizontally(int) -> a
    boolean canTargetScrollVertically(int) -> b
    1:1:void cancelTargetTouch():0:0 -> c
    1:1:float computeTargetVelocity(int,float,float,float):0:0 -> d
    1:1:float constrain(float,float,float):0:0 -> e
    1:1:int constrain(int,int,int):0:0 -> f
    1:1:float constrainEdgeValue(float,float):0:0 -> g
    1:1:float getEdgeValue(float,float,float,float):0:0 -> h
    1:1:void requestStop():0:0 -> i
    void scrollTargetBy(int,int) -> j
    1:1:androidx.core.widget.AutoScrollHelper setActivationDelay(int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setEdgeType(int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setEnabled(boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FF)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FF)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FF)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setRampDownDuration(int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setRampUpDuration(int):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FF)Landroidx/core/widget/a;"}
    1:1:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FF)Landroidx/core/widget/a;"}
    1:1:boolean shouldAnimate():0:0 -> u
    1:1:void startAnimating():0:0 -> v
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.a$a:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    1:1:void computeScrollDelta():0:0 -> a
    1:1:int getDeltaX():0:0 -> b
    1:1:int getDeltaY():0:0 -> c
    1:1:int getHorizontalDirection():0:0 -> d
    1:1:float getValueAt(long):0:0 -> e
    1:1:int getVerticalDirection():0:0 -> f
    1:1:float interpolateValue(float):0:0 -> g
    1:1:boolean isFinished():0:0 -> h
    1:1:void requestStop():0:0 -> i
    1:1:void setRampDownDuration(int):0:0 -> j
    1:1:void setRampUpDuration(int):0:0 -> k
    1:1:void setTargetVelocity(float,float):0:0 -> l
    1:1:void start():0:0 -> m
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.a$b:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    androidx.core.widget.AutoScrollHelper this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/widget/a;"}
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.b:
# {"id":"sourceFile","fileName":"AutoSizeableTextView.java"}
    boolean PLATFORM_SUPPORTS_AUTOSIZE -> a
androidx.core.widget.CheckedTextViewCompat -> androidx.core.widget.c:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    1:1:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView):0:0 -> a
    1:1:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList):0:0 -> b
    1:1:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode):0:0 -> c
androidx.core.widget.CheckedTextViewCompat$Api16Impl -> androidx.core.widget.c$a:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    1:1:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView):0:0 -> a
androidx.core.widget.CheckedTextViewCompat$Api21Impl -> androidx.core.widget.c$b:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    1:1:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList):0:0 -> a
    1:1:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode):0:0 -> b
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.g:
# {"id":"sourceFile","fileName":"CompoundButtonCompat.java"}
    java.lang.reflect.Field sButtonDrawableField -> a
    boolean sButtonDrawableFieldFetched -> b
    1:1:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton):0:0 -> a
    1:1:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList):0:0 -> b
    1:1:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode):0:0 -> c
androidx.core.widget.CompoundButtonCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.Drawable m(android.widget.CompoundButton):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.CompoundButtonCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.widget.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.CompoundButton,android.graphics.PorterDuff$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.CompoundButtonCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.widget.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.CompoundButton,android.content.res.ColorStateList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.i:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    1:1:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet):0:0 -> a
    1:1:float getDistance(android.widget.EdgeEffect):0:0 -> b
    1:1:void onPull(android.widget.EdgeEffect,float,float):0:0 -> c
    1:1:float onPullDistance(android.widget.EdgeEffect,float,float):0:0 -> d
androidx.core.widget.EdgeEffectCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.EdgeEffect,float,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.i$a:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    1:1:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet):0:0 -> a
    1:1:float getDistance(android.widget.EdgeEffect):0:0 -> b
    1:1:float onPullDistance(android.widget.EdgeEffect,float,float):0:0 -> c
androidx.core.widget.ImageViewCompat -> androidx.core.widget.n:
# {"id":"sourceFile","fileName":"ImageViewCompat.java"}
    1:1:android.content.res.ColorStateList getImageTintList(android.widget.ImageView):0:0 -> a
    1:1:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView):0:0 -> b
    1:1:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList):0:0 -> c
    1:1:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode):0:0 -> d
androidx.core.widget.ImageViewCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.PorterDuff$Mode m(android.widget.ImageView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ImageViewCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.widget.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.ImageView,android.graphics.PorterDuff$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ImageViewCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.widget.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.res.ColorStateList m(android.widget.ImageView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ImageViewCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.widget.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.ImageView,android.content.res.ColorStateList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.o:
# {"id":"sourceFile","fileName":"ListViewAutoScrollHelper.java"}
    android.widget.ListView mTarget -> t
    1:1:boolean canTargetScrollHorizontally(int):0:0 -> a
    1:1:boolean canTargetScrollVertically(int):0:0 -> b
    1:1:void scrollTargetBy(int,int):0:0 -> j
androidx.core.widget.ListViewCompat -> androidx.core.widget.p:
# {"id":"sourceFile","fileName":"ListViewCompat.java"}
    1:1:void scrollListBy(android.widget.ListView,int):0:0 -> a
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/widget/NestedScrollView$b;"}
    androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/widget/NestedScrollView$a;"}
    int[] SCROLLVIEW_STYLEABLE -> C
    long mLastScroll -> b
    android.graphics.Rect mTempRect -> c
    android.widget.OverScroller mScroller -> d
    android.widget.EdgeEffect mEdgeGlowTop -> e
    android.widget.EdgeEffect mEdgeGlowBottom -> f
    int mLastMotionY -> g
    boolean mIsLayoutDirty -> h
    boolean mIsLaidOut -> i
    android.view.View mChildToScrollTo -> j
    boolean mIsBeingDragged -> k
    android.view.VelocityTracker mVelocityTracker -> l
    boolean mFillViewport -> m
    boolean mSmoothScrollingEnabled -> n
    int mTouchSlop -> o
    int mMinimumVelocity -> p
    int mMaximumVelocity -> q
    int mActivePointerId -> r
    int[] mScrollOffset -> s
    int[] mScrollConsumed -> t
    int mNestedYOffset -> u
    int mLastScrollerY -> v
    androidx.core.widget.NestedScrollView$SavedState mSavedState -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/widget/NestedScrollView$c;"}
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/I;"}
    androidx.core.view.NestedScrollingChildHelper mChildHelper -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/core/view/E;"}
    float mVerticalScrollFactor -> z
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:boolean isViewDescendantOf(android.view.View,android.view.View):0:0 -> A
    1:1:boolean isWithinDeltaOfScreen(android.view.View,int,int):0:0 -> B
    1:1:void onNestedScrollInternal(int,int,int[]):0:0 -> C
    1:1:void onSecondaryPointerUp(android.view.MotionEvent):0:0 -> D
    1:1:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean):0:0 -> E
    1:1:boolean pageScroll(int):0:0 -> F
    1:1:void recycleVelocityTracker():0:0 -> G
    1:1:int releaseVerticalGlow(int,float):0:0 -> H
    1:1:void runAnimatedScroll(boolean):0:0 -> I
    1:1:boolean scrollAndFocus(int,int,int):0:0 -> J
    1:1:void scrollToChild(android.view.View):0:0 -> K
    1:1:boolean scrollToChildRect(android.graphics.Rect,boolean):0:0 -> L
    1:1:void smoothScrollBy(int,int):0:0 -> M
    1:1:void smoothScrollBy(int,int,int,boolean):0:0 -> N
    1:1:void smoothScrollTo(int,int,int,boolean):0:0 -> O
    1:1:void smoothScrollTo(int,int,boolean):0:0 -> P
    1:1:boolean startNestedScroll(int,int):0:0 -> Q
    1:1:boolean stopGlowAnimations(android.view.MotionEvent):0:0 -> R
    1:1:void stopNestedScroll(int):0:0 -> S
    1:1:void abortAnimatedScroll():0:0 -> a
    1:1:void addView(android.view.View):0:0 -> addView
    2:2:void addView(android.view.View,int):0:0 -> addView
    3:3:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> addView
    4:4:void addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addView
    1:1:boolean arrowScroll(int):0:0 -> b
    1:1:boolean canScroll():0:0 -> c
    1:1:int clamp(int,int,int):0:0 -> d
    1:1:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect):0:0 -> e
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> f
    1:1:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> g
    1:1:void doScrollY(int):0:0 -> h
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> i
    1:1:boolean edgeEffectFling(int):0:0 -> j
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int,int[]):0:0 -> k
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int):0:0 -> l
    1:1:void onStopNestedScroll(android.view.View,int):0:0 -> m
    1:1:void onNestedPreScroll(android.view.View,int,int,int[],int):0:0 -> n
    1:1:boolean onStartNestedScroll(android.view.View,android.view.View,int,int):0:0 -> o
    1:1:void endDrag():0:0 -> p
    1:1:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> q
    1:1:android.view.View findFocusableViewInBounds(boolean,int,int):0:0 -> r
    1:1:void fling(int):0:0 -> s
    1:1:boolean fullScroll(int):0:0 -> t
    1:1:boolean hasNestedScrollingParent(int):0:0 -> u
    1:1:boolean inChild(int,int):0:0 -> v
    1:1:void initOrResetVelocityTracker():0:0 -> w
    1:1:void initScrollView():0:0 -> x
    1:1:void initVelocityTrackerIfNotExists():0:0 -> y
    1:1:boolean isOffScreen(android.view.View):0:0 -> z
androidx.core.widget.NestedScrollView$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(androidx.core.widget.NestedScrollView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$a:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> f
    1:63:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;LA/B;)V"}
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> j
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> androidx.core.widget.NestedScrollView$b:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> a
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$c:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    int scrollPosition -> a
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcelable):0:0 -> <init>
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$c$a:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    1:1:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/core/widget/NestedScrollView$c;"}
    1:1:androidx.core.widget.NestedScrollView$SavedState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/core/widget/NestedScrollView$c;"}
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.r:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> a
    boolean sSetWindowLayoutTypeMethodAttempted -> b
    java.lang.reflect.Field sOverlapAnchorField -> c
    boolean sOverlapAnchorFieldAttempted -> d
    1:1:void setOverlapAnchor(android.widget.PopupWindow,boolean):0:0 -> a
    1:1:void setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> b
    1:1:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int):0:0 -> c
androidx.core.widget.PopupWindowCompat$Api19Impl -> androidx.core.widget.r$a:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    1:1:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int):0:0 -> a
androidx.core.widget.PopupWindowCompat$Api23Impl -> androidx.core.widget.r$b:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    1:1:boolean getOverlapAnchor(android.widget.PopupWindow):0:0 -> a
    1:1:int getWindowLayoutType(android.widget.PopupWindow):0:0 -> b
    1:1:void setOverlapAnchor(android.widget.PopupWindow,boolean):0:0 -> c
    1:1:void setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> d
androidx.core.widget.TextViewCompat -> androidx.core.widget.B:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1:1:int getFirstBaselineToTopHeight(android.widget.TextView):0:0 -> a
    1:1:int getLastBaselineToBottomHeight(android.widget.TextView):0:0 -> b
    1:1:int getTextDirection(android.text.TextDirectionHeuristic):0:0 -> c
    1:1:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView):0:0 -> d
    1:60:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;)Ly/n$a;"}
    1:1:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList):0:0 -> f
    1:1:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode):0:0 -> g
    1:1:void setFirstBaselineToTopHeight(android.widget.TextView,int):0:0 -> h
    1:1:void setLastBaselineToBottomHeight(android.widget.TextView,int):0:0 -> i
    1:1:void setLineHeight(android.widget.TextView,int):0:0 -> j
    1:12:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;Ly/n;)V"}
    1:84:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;Ly/n$a;)V"}
    1:1:android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback):0:0 -> m
    1:1:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback):0:0 -> n
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params m(android.widget.TextView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.widget.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.widget.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.widget.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.widget.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,android.graphics.PorterDuff$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline5 -> androidx.core.widget.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.icu.text.DecimalFormatSymbols m(java.util.Locale):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline6 -> androidx.core.widget.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String[] m(android.icu.text.DecimalFormatSymbols):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline7 -> androidx.core.widget.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.widget.TextView,android.content.res.ColorStateList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.B$a:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    android.view.ActionMode$Callback mCallback -> a
    android.widget.TextView mTextView -> b
    java.lang.Class mMenuBuilderClass -> c
    java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod -> d
    boolean mCanUseMenuBuilderReferences -> e
    boolean mInitializedMenuBuilderReferences -> f
    1:1:android.content.Intent createProcessTextIntent():0:0 -> a
    1:1:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0:0 -> b
    1:1:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> c
    1:1:android.view.ActionMode$Callback getWrappedCallback():0:0 -> d
    1:1:boolean isEditable(android.widget.TextView):0:0 -> e
    1:1:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context):0:0 -> f
    1:1:void recomputeProcessTextMenuItems(android.view.Menu):0:0 -> g
androidx.core.widget.TextViewCompat$OreoCallback$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.A:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.content.Context,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.C:
# {"id":"sourceFile","fileName":"TextViewOnReceiveContentListener.java"}
    1:1:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/c;)Landroidx/core/view/c;"}
    1:1:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int):0:0 -> b
    1:1:void replaceSelection(android.text.Editable,java.lang.CharSequence):0:0 -> c
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.C$a:
# {"id":"sourceFile","fileName":"TextViewOnReceiveContentListener.java"}
    1:1:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int):0:0 -> a
androidx.core.widget.TintableCheckedTextView -> androidx.core.widget.D:
# {"id":"sourceFile","fileName":"TintableCheckedTextView.java"}
androidx.core.widget.TintableCompoundButton -> androidx.core.widget.E:
# {"id":"sourceFile","fileName":"TintableCompoundButton.java"}
androidx.core.widget.TintableCompoundDrawablesView -> androidx.core.widget.F:
# {"id":"sourceFile","fileName":"TintableCompoundDrawablesView.java"}
androidx.core.widget.TintableImageSourceView -> androidx.core.widget.G:
# {"id":"sourceFile","fileName":"TintableImageSourceView.java"}
androidx.cursoradapter.widget.CursorAdapter -> C.a:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    boolean mDataValid -> b
    boolean mAutoRequery -> c
    android.database.Cursor mCursor -> d
    android.content.Context mContext -> e
    int mRowIDColumn -> f
    androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"LC/a$a;"}
    android.database.DataSetObserver mDataSetObserver -> h
    androidx.cursoradapter.widget.CursorFilter mCursorFilter -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"LC/b;"}
    1:12:void <init>(android.content.Context,android.database.Cursor,boolean):0:0 -> <init>
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
    1:3:android.database.Cursor getCursor():0:0 -> b
    1:10:void changeCursor(android.database.Cursor):0:0 -> c
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> e
    9:74:void init(android.content.Context,android.database.Cursor,int):0:0 -> f
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> g
    1:15:int getCount():0:0 -> getCount
    1:29:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
    1:14:android.widget.Filter getFilter():0:0 -> getFilter
    1:16:java.lang.Object getItem(int):0:0 -> getItem
    1:26:long getItemId(int):0:0 -> getItemId
    1:61:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> h
    1:23:void onContentChanged():0:0 -> i
    1:65:android.database.Cursor swapCursor(android.database.Cursor):0:0 -> j
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> C.a$a:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LC/a;"}
    1:11:void <init>(androidx.cursoradapter.widget.CursorAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LC/a;)V"}
    1:2:boolean deliverSelfNotifications():0:0 -> deliverSelfNotifications
    1:6:void onChange(boolean):0:0 -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> C.a$b:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LC/a;"}
    1:6:void <init>(androidx.cursoradapter.widget.CursorAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LC/a;)V"}
    1:9:void onChanged():0:0 -> onChanged
    1:9:void onInvalidated():0:0 -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> C.b:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
    androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LC/b$a;"}
    1:6:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LC/b$a;)V"}
    1:9:java.lang.CharSequence convertResultToString(java.lang.Object):0:0 -> convertResultToString
    1:28:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0:0 -> performFiltering
    1:20:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0:0 -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> C.b$a:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
    android.database.Cursor getCursor() -> b
    void changeCursor(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> d
androidx.cursoradapter.widget.ResourceCursorAdapter -> C.c:
# {"id":"sourceFile","fileName":"ResourceCursorAdapter.java"}
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    1:18:void <init>(android.content.Context,int,android.database.Cursor,boolean):0:0 -> <init>
    1:10:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> g
    1:10:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> h
androidx.customview.view.AbsSavedState -> D.a:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    android.os.Parcelable mSuperState -> a
    androidx.customview.view.AbsSavedState EMPTY_STATE -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LD/a;"}
    1:15:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.customview.view.AbsSavedState$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LD/a$a;)V"}
    3:3:void <init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    4:4:void <init>(android.os.Parcelable):0:0 -> <init>
    1:3:android.os.Parcelable getSuperState():0:0 -> a
    1:2:int describeContents():0:0 -> describeContents
    1:6:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> D.a$a:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    2:5:void <init>():0:0 -> <init>
androidx.customview.view.AbsSavedState$2 -> D.a$b:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    1:4:void <init>():0:0 -> <init>
    2:6:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)LD/a;"}
    1:17:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ljava/lang/ClassLoader;)LD/a;"}
    1:3:androidx.customview.view.AbsSavedState[] newArray(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[LD/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    1:5:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.emoji2.text.ConcurrencyHelpers -> androidx.emoji2.text.b:
# {"id":"sourceFile","fileName":"ConcurrencyHelpers.java"}
    1:1:java.lang.Thread $r8$lambda$hDWNjMgTS47ccxPkL8ebwFGVHg4(java.lang.String,java.lang.Runnable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String):0:0 -> b
    1:1:java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable):0:0 -> c
    1:1:android.os.Handler mainHandlerAsync():0:0 -> d
androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0 -> androidx.emoji2.text.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$6911ab90d10771b02f67c9b1efe5aba4ce1256e4777a5bfb53ea4622c282640f$0.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void <init>(java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl -> androidx.emoji2.text.b$a:
# {"id":"sourceFile","fileName":"ConcurrencyHelpers.java"}
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.emoji2.text.DefaultEmojiCompatConfig -> androidx.emoji2.text.c:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    1:1:androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/emoji2/text/i;"}
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory -> androidx.emoji2.text.c$a:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper mHelper -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/c$b;"}
    5:10:androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;)Landroidx/emoji2/text/d$c;"}
    1:1:java.util.List convertToByteArray(android.content.pm.Signature[]):0:0 -> b
    1:1:androidx.emoji2.text.EmojiCompat$Config create(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/emoji2/text/d$c;"}
    1:22:androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/pm/ProviderInfo;Landroid/content/pm/PackageManager;)Lx/d;"}
    1:1:androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/c$b;"}
    1:1:boolean hasFlagSystem(android.content.pm.ProviderInfo):0:0 -> f
    1:1:android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager):0:0 -> g
    1:29:androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lx/d;"}
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper -> androidx.emoji2.text.c$b:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo) -> a
    1:1:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String):0:0 -> b
    java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int) -> c
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19 -> androidx.emoji2.text.c$c:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    1:1:android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo):0:0 -> a
    1:1:java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int):0:0 -> c
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 -> androidx.emoji2.text.c$d:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    1:1:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String):0:0 -> b
androidx.emoji2.text.EmojiCompat -> androidx.emoji2.text.d:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    java.util.concurrent.locks.ReadWriteLock mInitLock -> a
    java.util.Set mInitCallbacks -> b
    int mLoadState -> c
    android.os.Handler mMainHandler -> d
    androidx.emoji2.text.EmojiCompat$CompatInternal mHelper -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$b;"}
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoader mMetadataLoader -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$g;"}
    boolean mReplaceAll -> g
    boolean mUseEmojiAsDefaultStyle -> h
    int[] mEmojiAsDefaultStyleExceptions -> i
    boolean mEmojiSpanIndicatorEnabled -> j
    int mEmojiSpanIndicatorColor -> k
    int mMetadataLoadStrategy -> l
    androidx.emoji2.text.EmojiCompat$GlyphChecker mGlyphChecker -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$d;"}
    java.lang.Object INSTANCE_LOCK -> n
    java.lang.Object CONFIG_LOCK -> o
    androidx.emoji2.text.EmojiCompat sInstance -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d;"}
    1:1:androidx.emoji2.text.EmojiCompat$GlyphChecker access$000(androidx.emoji2.text.EmojiCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d;)Landroidx/emoji2/text/d$d;"}
    1:1:androidx.emoji2.text.EmojiCompat get():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/d;"}
    1:1:int getEmojiSpanIndicatorColor():0:0 -> c
    1:1:int getLoadState():0:0 -> d
    1:1:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean):0:0 -> e
    1:1:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent):0:0 -> f
    1:1:androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$c;)Landroidx/emoji2/text/d;"}
    1:1:boolean isConfigured():0:0 -> h
    1:1:boolean isEmojiSpanIndicatorEnabled():0:0 -> i
    1:1:boolean isInitialized():0:0 -> j
    1:1:void load():0:0 -> k
    1:1:void loadMetadata():0:0 -> l
    1:1:void onMetadataLoadFailed(java.lang.Throwable):0:0 -> m
    1:1:void onMetadataLoadSuccess():0:0 -> n
    1:1:java.lang.CharSequence process(java.lang.CharSequence):0:0 -> o
    1:1:java.lang.CharSequence process(java.lang.CharSequence,int,int):0:0 -> p
    1:1:java.lang.CharSequence process(java.lang.CharSequence,int,int,int):0:0 -> q
    1:1:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int):0:0 -> r
    1:1:void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$e;)V"}
    1:1:void unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$e;)V"}
    1:1:void updateEditorInfo(android.view.inputmethod.EditorInfo):0:0 -> u
androidx.emoji2.text.EmojiCompat$CompatInternal -> androidx.emoji2.text.d$b:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    androidx.emoji2.text.EmojiCompat mEmojiCompat -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d;"}
    void loadMetadata() -> a
    java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> b
    void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> c
androidx.emoji2.text.EmojiCompat$CompatInternal19 -> androidx.emoji2.text.d$a:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    androidx.emoji2.text.EmojiProcessor mProcessor -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/g;"}
    androidx.emoji2.text.MetadataRepo mMetadataRepo -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/l;"}
    1:1:void loadMetadata():0:0 -> a
    1:1:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean):0:0 -> b
    1:1:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo):0:0 -> c
    1:1:void onMetadataLoadSuccess(androidx.emoji2.text.MetadataRepo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/l;)V"}
androidx.emoji2.text.EmojiCompat$CompatInternal19$1 -> androidx.emoji2.text.d$a$a:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    androidx.emoji2.text.EmojiCompat$CompatInternal19 this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$a;"}
    1:1:void onFailed(java.lang.Throwable):0:0 -> a
    1:1:void onLoaded(androidx.emoji2.text.MetadataRepo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/l;)V"}
androidx.emoji2.text.EmojiCompat$Config -> androidx.emoji2.text.d$c:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoader mMetadataLoader -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$g;"}
    boolean mReplaceAll -> b
    boolean mUseEmojiAsDefaultStyle -> c
    int[] mEmojiAsDefaultStyleExceptions -> d
    java.util.Set mInitCallbacks -> e
    boolean mEmojiSpanIndicatorEnabled -> f
    int mEmojiSpanIndicatorColor -> g
    int mMetadataLoadStrategy -> h
    androidx.emoji2.text.EmojiCompat$GlyphChecker mGlyphChecker -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$d;"}
    1:1:androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/d$g;"}
    1:1:androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/emoji2/text/d$c;"}
androidx.emoji2.text.EmojiCompat$GlyphChecker -> androidx.emoji2.text.d$d:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    boolean hasGlyph(java.lang.CharSequence,int,int,int) -> a
androidx.emoji2.text.EmojiCompat$InitCallback -> androidx.emoji2.text.d$e:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1:1:void onFailed(java.lang.Throwable):0:0 -> a
    1:1:void onInitialized():0:0 -> b
androidx.emoji2.text.EmojiCompat$ListenerDispatcher -> androidx.emoji2.text.d$f:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    java.util.List mInitCallbacks -> a
    java.lang.Throwable mThrowable -> b
    int mLoadState -> c
    1:1:void <init>(androidx.emoji2.text.EmojiCompat$InitCallback,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$e;I)V"}
    2:2:void <init>(java.util.Collection,int):0:0 -> <init>
    3:3:void <init>(java.util.Collection,int,java.lang.Throwable):0:0 -> <init>
androidx.emoji2.text.EmojiCompat$MetadataRepoLoader -> androidx.emoji2.text.d$g:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$h;)V"}
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback -> androidx.emoji2.text.d$h:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    void onFailed(java.lang.Throwable) -> a
    void onLoaded(androidx.emoji2.text.MetadataRepo) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/l;)V"}
androidx.emoji2.text.EmojiCompat$SpanFactory -> androidx.emoji2.text.d$i:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1:1:androidx.emoji2.text.EmojiSpan createSpan(androidx.emoji2.text.EmojiMetadata):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/f;)Landroidx/emoji2/text/h;"}
androidx.emoji2.text.EmojiCompatInitializer -> androidx.emoji2.text.EmojiCompatInitializer:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:java.lang.Boolean create(android.content.Context):0:0 -> c
    1:1:void delayUntilFirstResume(android.content.Context):0:0 -> d
    1:1:void loadEmojiCompatAfterDelay():0:0 -> e
androidx.emoji2.text.EmojiCompatInitializer$1 -> androidx.emoji2.text.EmojiCompatInitializer$1:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    androidx.lifecycle.Lifecycle val$lifecycle -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g;"}
    androidx.emoji2.text.EmojiCompatInitializer this$0 -> b
    1:1:void onResume(androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void onPause(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void onStop(androidx.lifecycle.LifecycleOwner):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void onStart(androidx.lifecycle.LifecycleOwner):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig -> androidx.emoji2.text.EmojiCompatInitializer$a:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader -> androidx.emoji2.text.EmojiCompatInitializer$b:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    android.content.Context mContext -> a
    1:1:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$h;)V"}
    1:1:void $r8$lambda$55Ivg7v_3m1eazHc6HmoU-ZdULY(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/EmojiCompatInitializer$b;Landroidx/emoji2/text/d$h;Ljava/util/concurrent/ThreadPoolExecutor;)V"}
    1:1:void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$h;Ljava/util/concurrent/ThreadPoolExecutor;)V"}
    1:1:void lambda$load$0(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$h;Ljava/util/concurrent/ThreadPoolExecutor;)V"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$83ef162cf15a75706bd895fe11df94aef5b8d9f597a3a36659ad7f122724d57f$0.f$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/EmojiCompatInitializer$b;"}
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$83ef162cf15a75706bd895fe11df94aef5b8d9f597a3a36659ad7f122724d57f$0.f$1 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$h;"}
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.ThreadPoolExecutor androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$83ef162cf15a75706bd895fe11df94aef5b8d9f597a3a36659ad7f122724d57f$0.f$2 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void <init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/EmojiCompatInitializer$b;Landroidx/emoji2/text/d$h;Ljava/util/concurrent/ThreadPoolExecutor;)V"}
    1:1:void run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1 -> androidx.emoji2.text.EmojiCompatInitializer$b$a:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback val$loaderCallback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$h;"}
    java.util.concurrent.ThreadPoolExecutor val$executor -> b
    androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/EmojiCompatInitializer$b;"}
    1:1:void onFailed(java.lang.Throwable):0:0 -> a
    1:1:void onLoaded(androidx.emoji2.text.MetadataRepo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/l;)V"}
androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable -> androidx.emoji2.text.EmojiCompatInitializer$c:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
androidx.emoji2.text.EmojiMetadata -> androidx.emoji2.text.f:
# {"id":"sourceFile","fileName":"EmojiMetadata.java"}
    int mIndex -> a
    androidx.emoji2.text.MetadataRepo mMetadataRepo -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/l;"}
    int mHasGlyph -> c
    java.lang.ThreadLocal sMetadataItem -> d
    1:1:void draw(android.graphics.Canvas,float,float,android.graphics.Paint):0:0 -> a
    1:1:int getCodepointAt(int):0:0 -> b
    1:1:int getCodepointsLength():0:0 -> c
    1:1:int getHasGlyph():0:0 -> d
    1:1:short getHeight():0:0 -> e
    1:1:int getId():0:0 -> f
    1:30:androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LE/a;"}
    1:1:short getSdkAdded():0:0 -> h
    1:1:short getWidth():0:0 -> i
    1:1:boolean isDefaultEmoji():0:0 -> j
    1:1:void setHasGlyph(boolean):0:0 -> k
androidx.emoji2.text.EmojiProcessor -> androidx.emoji2.text.g:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    androidx.emoji2.text.EmojiCompat$SpanFactory mSpanFactory -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$i;"}
    androidx.emoji2.text.MetadataRepo mMetadataRepo -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/l;"}
    androidx.emoji2.text.EmojiCompat$GlyphChecker mGlyphChecker -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$d;"}
    boolean mUseEmojiAsDefaultStyle -> d
    int[] mEmojiAsDefaultStyleExceptions -> e
    1:1:void addEmoji(android.text.Spannable,androidx.emoji2.text.EmojiMetadata,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/Spannable;Landroidx/emoji2/text/f;II)V"}
    1:1:boolean delete(android.text.Editable,android.view.KeyEvent,boolean):0:0 -> b
    1:1:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean):0:0 -> c
    1:1:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent):0:0 -> d
    1:1:boolean hasGlyph(java.lang.CharSequence,int,int,androidx.emoji2.text.EmojiMetadata):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;IILandroidx/emoji2/text/f;)Z"}
    1:1:boolean hasInvalidSelection(int,int):0:0 -> f
    1:1:boolean hasModifiers(android.view.KeyEvent):0:0 -> g
    1:1:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean):0:0 -> h
androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder -> androidx.emoji2.text.g$a:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    1:1:int findIndexBackward(java.lang.CharSequence,int,int):0:0 -> a
    1:1:int findIndexForward(java.lang.CharSequence,int,int):0:0 -> b
androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker -> androidx.emoji2.text.g$b:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    android.text.TextPaint mTextPaint -> a
    java.lang.ThreadLocal sStringBuilder -> b
    1:1:boolean hasGlyph(java.lang.CharSequence,int,int,int):0:0 -> a
    1:1:java.lang.StringBuilder getStringBuilder():0:0 -> b
androidx.emoji2.text.EmojiProcessor$ProcessorSm -> androidx.emoji2.text.g$c:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    int mState -> a
    androidx.emoji2.text.MetadataRepo$Node mRootNode -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/l$a;"}
    androidx.emoji2.text.MetadataRepo$Node mCurrentNode -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/l$a;"}
    androidx.emoji2.text.MetadataRepo$Node mFlushNode -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/l$a;"}
    int mLastCodepoint -> e
    int mCurrentDepth -> f
    boolean mUseEmojiAsDefaultStyle -> g
    int[] mEmojiAsDefaultStyleExceptions -> h
    1:1:int check(int):0:0 -> a
    1:1:androidx.emoji2.text.EmojiMetadata getCurrentMetadata():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/f;"}
    1:1:androidx.emoji2.text.EmojiMetadata getFlushMetadata():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/f;"}
    1:1:boolean isEmojiStyle(int):0:0 -> d
    1:1:boolean isInFlushableState():0:0 -> e
    1:1:boolean isTextStyle(int):0:0 -> f
    1:1:int reset():0:0 -> g
    1:1:boolean shouldUseEmojiPresentationStyleForSingleCodepoint():0:0 -> h
androidx.emoji2.text.EmojiSpan -> androidx.emoji2.text.h:
# {"id":"sourceFile","fileName":"EmojiSpan.java"}
    android.graphics.Paint$FontMetricsInt mTmpFontMetrics -> a
    androidx.emoji2.text.EmojiMetadata mMetadata -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/f;"}
    short mWidth -> c
    short mHeight -> d
    float mRatio -> e
    1:1:androidx.emoji2.text.EmojiMetadata getMetadata():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/f;"}
    1:1:int getWidth():0:0 -> b
androidx.emoji2.text.FontRequestEmojiCompatConfig -> androidx.emoji2.text.i:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper DEFAULT_FONTS_CONTRACT -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/i$a;"}
    1:11:void <init>(android.content.Context,androidx.core.provider.FontRequest):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;)V"}
    1:1:androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;)Landroidx/emoji2/text/i;"}
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper -> androidx.emoji2.text.i$a:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    3:12:android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/f$b;)Landroid/graphics/Typeface;"}
    2:6:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;)Lx/f$a;"}
    1:1:void unregisterObserver(android.content.Context,android.database.ContentObserver):0:0 -> c
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader -> androidx.emoji2.text.i$b:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    android.content.Context mContext -> a
    androidx.core.provider.FontRequest mRequest -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/d;"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper mFontProviderHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/i$a;"}
    java.lang.Object mLock -> d
    android.os.Handler mMainHandler -> e
    java.util.concurrent.Executor mExecutor -> f
    java.util.concurrent.ThreadPoolExecutor mMyThreadPoolExecutor -> g
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback mCallback -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$h;"}
    android.database.ContentObserver mObserver -> i
    java.lang.Runnable mMainHandlerLoadCallback -> j
    1:31:void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lx/d;Landroidx/emoji2/text/i$a;)V"}
    1:1:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/d$h;)V"}
    1:1:void cleanUp():0:0 -> b
    1:1:void createMetadata():0:0 -> c
    1:1:void loadInternal():0:0 -> d
    1:78:androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/f$b;"}
    1:1:void setExecutor(java.util.concurrent.Executor):0:0 -> f
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4a254d9e94ecf4e41bfd9256a9edea29875602a12a6e8c8444b08cdc70d0dca7$0.f$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/i$b;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void <init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/i$b;)V"}
    1:1:void run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.MetadataListReader -> androidx.emoji2.text.k:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    1:1:androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/k$c;)Landroidx/emoji2/text/k$b;"}
    1:26:androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)LE/b;"}
    1:1:long toUnsignedInt(int):0:0 -> c
    1:1:int toUnsignedShort(short):0:0 -> d
androidx.emoji2.text.MetadataListReader$ByteBufferReader -> androidx.emoji2.text.k$a:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    java.nio.ByteBuffer mByteBuffer -> a
    1:1:int readUnsignedShort():0:0 -> a
    1:1:long readUnsignedInt():0:0 -> b
    1:1:int readTag():0:0 -> c
    1:1:void skip(int):0:0 -> d
    1:1:long getPosition():0:0 -> e
androidx.emoji2.text.MetadataListReader$OffsetInfo -> androidx.emoji2.text.k$b:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    long mStartOffset -> a
    long mLength -> b
    1:1:long getStartOffset():0:0 -> a
androidx.emoji2.text.MetadataListReader$OpenTypeReader -> androidx.emoji2.text.k$c:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    int readUnsignedShort() -> a
    long readUnsignedInt() -> b
    int readTag() -> c
    void skip(int) -> d
    long getPosition() -> e
androidx.emoji2.text.MetadataRepo -> androidx.emoji2.text.l:
# {"id":"sourceFile","fileName":"MetadataRepo.java"}
    androidx.emoji2.text.flatbuffer.MetadataList mMetadataList -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LE/b;"}
    char[] mEmojiCharArray -> b
    androidx.emoji2.text.MetadataRepo$Node mRootNode -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/l$a;"}
    android.graphics.Typeface mTypeface -> d
    1:30:void <init>(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Typeface;LE/b;)V"}
    1:30:void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LE/b;)V"}
    1:1:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Typeface;Ljava/nio/ByteBuffer;)Landroidx/emoji2/text/l;"}
    1:1:char[] getEmojiCharArray():0:0 -> c
    1:3:androidx.emoji2.text.flatbuffer.MetadataList getMetadataList():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LE/b;"}
    1:1:int getMetadataVersion():0:0 -> e
    1:1:androidx.emoji2.text.MetadataRepo$Node getRootNode():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/l$a;"}
    1:1:android.graphics.Typeface getTypeface():0:0 -> g
    1:1:void put(androidx.emoji2.text.EmojiMetadata):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/f;)V"}
androidx.emoji2.text.MetadataRepo$Node -> androidx.emoji2.text.l$a:
# {"id":"sourceFile","fileName":"MetadataRepo.java"}
    android.util.SparseArray mChildren -> a
    androidx.emoji2.text.EmojiMetadata mData -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/f;"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:androidx.emoji2.text.MetadataRepo$Node get(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/emoji2/text/l$a;"}
    1:1:androidx.emoji2.text.EmojiMetadata getData():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/f;"}
    1:1:void put(androidx.emoji2.text.EmojiMetadata,int,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/emoji2/text/f;II)V"}
androidx.emoji2.text.SpannableBuilder -> androidx.emoji2.text.m:
# {"id":"sourceFile","fileName":"SpannableBuilder.java"}
    java.lang.Class mWatcherClass -> a
    java.util.List mWatchers -> b
    1:1:void <init>(java.lang.Class,java.lang.CharSequence):0:0 -> <init>
    2:2:void <init>(java.lang.Class,java.lang.CharSequence,int,int):0:0 -> <init>
    1:1:void beginBatchEdit():0:0 -> a
    1:1:android.text.Editable append(char):0:0 -> append
    2:2:android.text.Editable append(java.lang.CharSequence):0:0 -> append
    3:3:android.text.Editable append(java.lang.CharSequence,int,int):0:0 -> append
    4:4:android.text.SpannableStringBuilder append(char):0:0 -> append
    5:5:android.text.SpannableStringBuilder append(java.lang.CharSequence):0:0 -> append
    6:6:android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int):0:0 -> append
    7:7:android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int):0:0 -> append
    8:8:java.lang.Appendable append(char):0:0 -> append
    9:9:java.lang.Appendable append(java.lang.CharSequence):0:0 -> append
    10:10:java.lang.Appendable append(java.lang.CharSequence,int,int):0:0 -> append
    1:1:void blockWatchers():0:0 -> b
    1:1:androidx.emoji2.text.SpannableBuilder create(java.lang.Class,java.lang.CharSequence):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/CharSequence;)Landroidx/emoji2/text/m;"}
    1:1:void endBatchEdit():0:0 -> d
    1:1:android.text.Editable delete(int,int):0:0 -> delete
    2:2:android.text.SpannableStringBuilder delete(int,int):0:0 -> delete
    1:1:void fireWatchers():0:0 -> e
    1:1:androidx.emoji2.text.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Landroidx/emoji2/text/m$a;"}
    1:1:boolean isWatcher(java.lang.Class):0:0 -> g
    1:1:boolean isWatcher(java.lang.Object):0:0 -> h
    1:1:void unblockwatchers():0:0 -> i
    1:1:android.text.Editable insert(int,java.lang.CharSequence):0:0 -> insert
    2:2:android.text.Editable insert(int,java.lang.CharSequence,int,int):0:0 -> insert
    3:3:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence):0:0 -> insert
    4:4:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int):0:0 -> insert
    1:1:android.text.Editable replace(int,int,java.lang.CharSequence):0:0 -> replace
    2:2:android.text.Editable replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
    3:3:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence):0:0 -> replace
    4:4:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
androidx.emoji2.text.SpannableBuilder$WatcherWrapper -> androidx.emoji2.text.m$a:
# {"id":"sourceFile","fileName":"SpannableBuilder.java"}
    java.lang.Object mObject -> b
    java.util.concurrent.atomic.AtomicInteger mBlockCalls -> c
    1:1:void blockCalls():0:0 -> a
    1:1:boolean isEmojiSpan(java.lang.Object):0:0 -> b
    1:1:void unblockCalls():0:0 -> c
androidx.emoji2.text.TypefaceEmojiSpan -> androidx.emoji2.text.n:
# {"id":"sourceFile","fileName":"TypefaceEmojiSpan.java"}
    android.graphics.Paint sDebugPaint -> f
    1:1:android.graphics.Paint getDebugPaint():0:0 -> c
androidx.emoji2.text.flatbuffer.MetadataItem -> E.a:
# {"id":"sourceFile","fileName":"MetadataItem.java"}
    1:4:void <init>():0:0 -> <init>
    1:4:androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/nio/ByteBuffer;)LE/a;"}
    1:4:void __init(int,java.nio.ByteBuffer):0:0 -> g
    3:24:int codepoints(int):0:0 -> h
    3:15:int codepointsLength():0:0 -> i
    2:21:boolean emojiStyle():0:0 -> j
    3:20:short height():0:0 -> k
    2:19:int id():0:0 -> l
    3:20:short sdkAdded():0:0 -> m
    3:20:short width():0:0 -> n
androidx.emoji2.text.flatbuffer.MetadataList -> E.b:
# {"id":"sourceFile","fileName":"MetadataList.java"}
    1:4:void <init>():0:0 -> <init>
    1:4:androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/nio/ByteBuffer;)LE/b;"}
    1:4:void __init(int,java.nio.ByteBuffer):0:0 -> g
    1:10:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)LE/b;"}
    1:23:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;LE/b;)LE/b;"}
    2:27:androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LE/a;I)LE/a;"}
    2:14:int listLength():0:0 -> k
    2:19:int version():0:0 -> l
androidx.emoji2.text.flatbuffer.Table -> E.c:
# {"id":"sourceFile","fileName":"Table.java"}
    int bb_pos -> a
    java.nio.ByteBuffer bb -> b
    int vtable_start -> c
    int vtable_size -> d
    androidx.emoji2.text.flatbuffer.Utf8 utf8 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"LE/d;"}
    1:10:void <init>():0:0 -> <init>
    1:8:int __indirect(int):0:0 -> a
    1:16:int __offset(int):0:0 -> b
    1:29:void __reset(int,java.nio.ByteBuffer):0:0 -> c
    1:13:int __vector(int):0:0 -> d
    1:17:int __vector_len(int):0:0 -> e
androidx.emoji2.text.flatbuffer.Utf8 -> E.d:
# {"id":"sourceFile","fileName":"Utf8.java"}
    androidx.emoji2.text.flatbuffer.Utf8 DEFAULT -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LE/d;"}
    1:4:void <init>():0:0 -> <init>
    1:14:androidx.emoji2.text.flatbuffer.Utf8 getDefault():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LE/d;"}
androidx.emoji2.text.flatbuffer.Utf8Safe -> E.e:
# {"id":"sourceFile","fileName":"Utf8Safe.java"}
    1:4:void <init>():0:0 -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper -> F.a:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal mHelper -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/a$b;"}
    int mMaxEmojiCount -> b
    int mEmojiReplaceStrategy -> c
    1:24:void <init>(android.widget.EditText,boolean):0:0 -> <init>
    1:7:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener):0:0 -> a
    5:11:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> b
    1:6:void setEnabled(boolean):0:0 -> c
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal -> F.a$b:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    1:4:void <init>():0:0 -> <init>
    android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> a
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> b
    void setEnabled(boolean) -> c
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19 -> F.a$a:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    android.widget.EditText mEditText -> a
    androidx.emoji2.viewsintegration.EmojiTextWatcher mTextWatcher -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/g;"}
    1:23:void <init>(android.widget.EditText,boolean):0:0 -> <init>
    1:15:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener):0:0 -> a
    1:13:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> b
    1:6:void setEnabled(boolean):0:0 -> c
androidx.emoji2.viewsintegration.EmojiEditableFactory -> F.b:
# {"id":"sourceFile","fileName":"EmojiEditableFactory.java"}
    java.lang.Object INSTANCE_LOCK -> a
    android.text.Editable$Factory sInstance -> b
    java.lang.Class sWatcherClass -> c
    1:8:void <clinit>():0:0 -> <clinit>
    1:19:void <init>():0:0 -> <init>
    1:28:android.text.Editable$Factory getInstance():0:0 -> getInstance
    1:14:android.text.Editable newEditable(java.lang.CharSequence):0:0 -> newEditable
androidx.emoji2.viewsintegration.EmojiInputConnection -> F.c:
# {"id":"sourceFile","fileName":"EmojiInputConnection.java"}
    android.widget.TextView mTextView -> a
    androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper mEmojiCompatDeleteHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/c$a;"}
    1:1:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> <init>
    2:2:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;LF/c$a;)V"}
    1:7:android.text.Editable getEditable():0:0 -> a
    1:27:boolean deleteSurroundingText(int,int):0:0 -> deleteSurroundingText
    1:27:boolean deleteSurroundingTextInCodePoints(int,int):0:0 -> deleteSurroundingTextInCodePoints
androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper -> F.c$a:
# {"id":"sourceFile","fileName":"EmojiInputConnection.java"}
    1:4:void <init>():0:0 -> <init>
    1:5:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean):0:0 -> a
    1:14:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo):0:0 -> b
androidx.emoji2.viewsintegration.EmojiInputFilter -> F.d:
# {"id":"sourceFile","fileName":"EmojiInputFilter.java"}
    android.widget.TextView mTextView -> a
    androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$e;"}
    1:6:void <init>(android.widget.TextView):0:0 -> <init>
    1:16:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/d$e;"}
    5:20:void updateSelection(android.text.Spannable,int,int):0:0 -> b
    1:1:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int):0:0 -> filter
androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl -> F.d$a:
# {"id":"sourceFile","fileName":"EmojiInputFilter.java"}
    java.lang.ref.Reference mViewRef -> a
    java.lang.ref.Reference mEmojiInputFilterReference -> b
    1:18:void <init>(android.widget.TextView,androidx.emoji2.viewsintegration.EmojiInputFilter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;LF/d;)V"}
    1:65:void onInitialized():0:0 -> b
    7:27:boolean isInputFilterCurrentlyRegisteredOnTextView(android.widget.TextView,android.text.InputFilter):0:0 -> c
androidx.emoji2.viewsintegration.EmojiKeyListener -> F.e:
# {"id":"sourceFile","fileName":"EmojiKeyListener.java"}
    android.text.method.KeyListener mKeyListener -> a
    androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper mEmojiCompatHandleKeyDownHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/e$a;"}
    1:1:void <init>(android.text.method.KeyListener):0:0 -> <init>
    2:2:void <init>(android.text.method.KeyListener,androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/method/KeyListener;LF/e$a;)V"}
    1:6:void clearMetaKeyState(android.view.View,android.text.Editable,int):0:0 -> clearMetaKeyState
    1:7:int getInputType():0:0 -> getInputType
    1:21:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent):0:0 -> onKeyDown
    1:7:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent):0:0 -> onKeyOther
    1:7:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent):0:0 -> onKeyUp
androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper -> F.e$a:
# {"id":"sourceFile","fileName":"EmojiKeyListener.java"}
    1:4:void <init>():0:0 -> <init>
    1:5:boolean handleKeyDown(android.text.Editable,int,android.view.KeyEvent):0:0 -> a
androidx.emoji2.viewsintegration.EmojiTextViewHelper -> F.f:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal mHelper -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/f$b;"}
    1:25:void <init>(android.widget.TextView,boolean):0:0 -> <init>
    1:7:android.text.InputFilter[] getFilters(android.text.InputFilter[]):0:0 -> a
    1:6:void setAllCaps(boolean):0:0 -> b
    1:6:void setEnabled(boolean):0:0 -> c
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal -> F.f$b:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    1:4:void <init>():0:0 -> <init>
    android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> a
    void setAllCaps(boolean) -> b
    void setEnabled(boolean) -> c
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 -> F.f$a:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    android.widget.TextView mTextView -> a
    androidx.emoji2.viewsintegration.EmojiInputFilter mEmojiInputFilter -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/d;"}
    boolean mEnabled -> c
    1:16:void <init>(android.widget.TextView):0:0 -> <init>
    1:14:android.text.InputFilter[] getFilters(android.text.InputFilter[]):0:0 -> a
    3:6:void setAllCaps(boolean):0:0 -> b
    1:9:void setEnabled(boolean):0:0 -> c
    1:28:android.text.InputFilter[] addEmojiInputFilterIfMissing(android.text.InputFilter[]):0:0 -> d
    1:23:android.util.SparseArray getEmojiInputFilterPositionArray(android.text.InputFilter[]):0:0 -> e
    1:40:android.text.InputFilter[] removeEmojiInputFilterIfPresent(android.text.InputFilter[]):0:0 -> f
    1:3:void setEnabledUnsafe(boolean):0:0 -> g
    1:11:android.text.method.TransformationMethod unwrapForDisabled(android.text.method.TransformationMethod):0:0 -> h
    1:16:void updateFilters():0:0 -> i
    1:16:void updateTransformationMethod():0:0 -> j
    1:16:android.text.method.TransformationMethod wrapForEnabled(android.text.method.TransformationMethod):0:0 -> k
    1:14:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod):0:0 -> l
androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19 -> F.f$c:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 mHelperDelegate -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LF/f$a;"}
    1:11:void <init>(android.widget.TextView):0:0 -> <init>
    1:14:android.text.InputFilter[] getFilters(android.text.InputFilter[]):0:0 -> a
    1:13:void setAllCaps(boolean):0:0 -> b
    1:18:void setEnabled(boolean):0:0 -> c
    1:7:boolean skipBecauseEmojiCompatNotInitialized():0:0 -> d
androidx.emoji2.viewsintegration.EmojiTextWatcher -> F.g:
# {"id":"sourceFile","fileName":"EmojiTextWatcher.java"}
    android.widget.EditText mEditText -> b
    boolean mExpectInitializedEmojiCompat -> c
    androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/emoji2/text/d$e;"}
    int mMaxEmojiCount -> e
    int mEmojiReplaceStrategy -> f
    boolean mEnabled -> g
    1:19:void <init>(android.widget.EditText,boolean):0:0 -> <init>
    1:16:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/emoji2/text/d$e;"}
    1:1:void afterTextChanged(android.text.Editable):0:0 -> afterTextChanged
    6:34:void processTextOnEnablingEvent(android.widget.EditText,int):0:0 -> b
    1:1:void beforeTextChanged(java.lang.CharSequence,int,int,int):0:0 -> beforeTextChanged
    1:35:void setEnabled(boolean):0:0 -> c
    1:19:boolean shouldSkipForDisabledOrNotConfigured():0:0 -> d
    1:68:void onTextChanged(java.lang.CharSequence,int,int,int):0:0 -> onTextChanged
androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl -> F.g$a:
# {"id":"sourceFile","fileName":"EmojiTextWatcher.java"}
    java.lang.ref.Reference mViewRef -> a
    1:11:void <init>(android.widget.EditText):0:0 -> <init>
    1:16:void onInitialized():0:0 -> b
androidx.emoji2.viewsintegration.EmojiTransformationMethod -> F.h:
# {"id":"sourceFile","fileName":"EmojiTransformationMethod.java"}
    android.text.method.TransformationMethod mTransformationMethod -> a
    1:6:void <init>(android.text.method.TransformationMethod):0:0 -> <init>
    1:3:android.text.method.TransformationMethod getOriginalTransformationMethod():0:0 -> a
    1:38:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View):0:0 -> getTransformation
    1:13:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect):0:0 -> onFocusChanged
androidx.fragment.R$id -> G.a:
    int fragment_container_view_tag -> a
androidx.fragment.R$styleable -> G.b:
    int[] ColorStateListItem -> a
    int[] FontFamily -> b
    int[] FontFamilyFont -> c
    int[] Fragment -> d
    int Fragment_android_name -> e
    int Fragment_android_id -> f
    int Fragment_android_tag -> g
    int[] FragmentContainerView -> h
    int FragmentContainerView_android_name -> i
    int FragmentContainerView_android_tag -> j
    int[] GradientColor -> k
    int[] GradientColorItem -> l
    16:78:void <clinit>():0:0 -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.a:
# {"id":"sourceFile","fileName":"BackStackRecord.java"}
    androidx.fragment.app.FragmentManager mManager -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    boolean mCommitted -> u
    int mIndex -> v
    1:1:boolean generateOps(java.util.ArrayList,java.util.ArrayList):0:0 -> a
    1:1:void bumpBackStackNesting(int):0:0 -> c
    1:1:void dump(java.lang.String,java.io.PrintWriter):0:0 -> d
    1:1:void dump(java.lang.String,java.io.PrintWriter,boolean):0:0 -> e
    1:1:void executeOps():0:0 -> f
    1:1:void executePopOps(boolean):0:0 -> g
    1:1:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Landroidx/fragment/app/c;)Landroidx/fragment/app/c;"}
    1:1:java.lang.String getName():0:0 -> i
    1:1:boolean interactsWith(int):0:0 -> j
    1:1:boolean interactsWith(java.util.ArrayList,int,int):0:0 -> k
    1:1:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/u$a;)Z"}
    1:1:boolean isPostponed():0:0 -> m
    1:1:void runOnCommitRunnables():0:0 -> n
    1:1:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c$b;)V"}
    1:1:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Landroidx/fragment/app/c;)Landroidx/fragment/app/c;"}
androidx.fragment.app.BackStackState -> androidx.fragment.app.b:
# {"id":"sourceFile","fileName":"BackStackState.java"}
    int[] mOps -> a
    java.util.ArrayList mFragmentWhos -> b
    int[] mOldMaxLifecycleStates -> c
    int[] mCurrentMaxLifecycleStates -> d
    int mTransition -> e
    java.lang.String mName -> f
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    java.util.ArrayList mSharedElementSourceNames -> l
    java.util.ArrayList mSharedElementTargetNames -> m
    boolean mReorderingAllowed -> n
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.BackStackRecord):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/a;)V"}
    1:1:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/m;)Landroidx/fragment/app/a;"}
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.b$a:
# {"id":"sourceFile","fileName":"BackStackState.java"}
    1:1:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/fragment/app/b;"}
    1:1:androidx.fragment.app.BackStackState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/fragment/app/b;"}
androidx.fragment.app.Fragment -> androidx.fragment.app.c:
# {"id":"sourceFile","fileName":"Fragment.java"}
    java.lang.Object USE_DEFAULT_TRANSITION -> b
    1:1:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;)Landroidx/fragment/app/c;"}
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
# {"id":"sourceFile","fileName":"Fragment.java"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.c$a:
# {"id":"sourceFile","fileName":"Fragment.java"}
androidx.fragment.app.Fragment$OnStartEnterTransitionListener -> androidx.fragment.app.c$b:
# {"id":"sourceFile","fileName":"Fragment.java"}
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.d:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    androidx.fragment.app.FragmentController mFragments -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/h;"}
    androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/l;"}
    boolean mCreated -> n
    boolean mResumed -> o
    boolean mStopped -> p
    1:1:void validateRequestPermissionsRequestCode(int):0:0 -> a
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    2:2:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> r
    1:1:androidx.fragment.app.FragmentManager getSupportFragmentManager():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/m;"}
    1:1:void init():0:0 -> t
    1:1:void markFragmentsCreated():0:0 -> u
    1:1:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/m;Landroidx/lifecycle/g$c;)Z"}
    1:1:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu):0:0 -> w
    1:1:void onResumeFragments():0:0 -> x
    void supportInvalidateOptionsMenu() -> y
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.d$a:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    androidx.fragment.app.FragmentActivity this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/d;"}
    1:1:android.os.Bundle saveState():0:0 -> a
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.d$b:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    androidx.fragment.app.FragmentActivity this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/d;"}
    1:1:void onContextAvailable(android.content.Context):0:0 -> a
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.d$c:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    androidx.fragment.app.FragmentActivity this$0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/d;"}
    1:1:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher():0:0 -> b
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/v;"}
    1:1:android.view.View onFindViewById(int):0:0 -> e
    1:1:boolean onHasView():0:0 -> f
    1:1:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/activity/result/e;"}
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/g;"}
    1:1:void onSupportInvalidateOptionsMenu():0:0 -> k
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.e:
# {"id":"sourceFile","fileName":"FragmentContainer.java"}
    1:1:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;)Landroidx/fragment/app/c;"}
    android.view.View onFindViewById(int) -> e
    boolean onHasView() -> f
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.g:
# {"id":"sourceFile","fileName":"FragmentContainerView.java"}
    java.util.ArrayList mDisappearingFragmentChildren -> b
    java.util.ArrayList mTransitioningFragmentViews -> c
    android.view.View$OnApplyWindowInsetsListener mApplyWindowInsetsListener -> d
    boolean mDrawDisappearingViewsFirst -> e
    1:1:void addDisappearingFragmentView(android.view.View):0:0 -> a
androidx.fragment.app.FragmentContainerView$$ExternalSyntheticApiModelOutline0 -> androidx.fragment.app.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets m(android.view.View$OnApplyWindowInsetsListener,android.view.View,android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentController -> androidx.fragment.app.h:
# {"id":"sourceFile","fileName":"FragmentController.java"}
    androidx.fragment.app.FragmentHostCallback mHost -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/j;"}
    1:1:void attachHost(androidx.fragment.app.Fragment):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
    1:1:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/j;)Landroidx/fragment/app/h;"}
    1:1:void dispatchActivityCreated():0:0 -> c
    1:1:void dispatchConfigurationChanged(android.content.res.Configuration):0:0 -> d
    1:1:boolean dispatchContextItemSelected(android.view.MenuItem):0:0 -> e
    1:1:void dispatchCreate():0:0 -> f
    1:1:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> g
    1:1:void dispatchDestroy():0:0 -> h
    1:1:void dispatchLowMemory():0:0 -> i
    1:1:void dispatchMultiWindowModeChanged(boolean):0:0 -> j
    1:1:boolean dispatchOptionsItemSelected(android.view.MenuItem):0:0 -> k
    1:1:void dispatchOptionsMenuClosed(android.view.Menu):0:0 -> l
    1:1:void dispatchPause():0:0 -> m
    1:1:void dispatchPictureInPictureModeChanged(boolean):0:0 -> n
    1:1:boolean dispatchPrepareOptionsMenu(android.view.Menu):0:0 -> o
    1:1:void dispatchResume():0:0 -> p
    1:1:void dispatchStart():0:0 -> q
    1:1:void dispatchStop():0:0 -> r
    1:1:boolean execPendingActions():0:0 -> s
    1:1:androidx.fragment.app.FragmentManager getSupportFragmentManager():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/m;"}
    1:1:void noteStateNotSaved():0:0 -> u
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> v
    1:1:void restoreSaveState(android.os.Parcelable):0:0 -> w
    1:1:android.os.Parcelable saveAllState():0:0 -> x
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.i:
# {"id":"sourceFile","fileName":"FragmentFactory.java"}
    androidx.collection.SimpleArrayMap sClassCacheMap -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/g;"}
    androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroidx/fragment/app/c;"}
    1:1:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String):0:0 -> b
    1:1:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0:0 -> c
    1:1:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String):0:0 -> d
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.j:
# {"id":"sourceFile","fileName":"FragmentHostCallback.java"}
    android.app.Activity mActivity -> b
    android.content.Context mContext -> c
    android.os.Handler mHandler -> d
    int mWindowAnimations -> e
    androidx.fragment.app.FragmentManager mFragmentManager -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int):0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.FragmentActivity):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/d;)V"}
    1:1:android.content.Context getContext():0:0 -> i
    1:1:android.os.Handler getHandler():0:0 -> j
    void onSupportInvalidateOptionsMenu() -> k
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.k:
# {"id":"sourceFile","fileName":"FragmentLayoutInflaterFactory.java"}
    androidx.fragment.app.FragmentManager mFragmentManager -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    2:2:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.l:
# {"id":"sourceFile","fileName":"FragmentLifecycleCallbacksDispatcher.java"}
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> a
    androidx.fragment.app.FragmentManager mFragmentManager -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
androidx.fragment.app.FragmentManager -> androidx.fragment.app.m:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    java.util.ArrayDeque mLaunchedFragments -> A
    boolean mNeedMenuInvalidate -> B
    boolean mStateSaved -> C
    boolean mStopped -> D
    boolean mDestroyed -> E
    boolean mHavePendingDeferredStart -> F
    java.util.ArrayList mTmpRecords -> G
    java.util.ArrayList mTmpIsPop -> H
    java.util.ArrayList mTmpAddedFragments -> I
    java.util.ArrayList mPostponedTransactions -> J
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/p;"}
    java.lang.Runnable mExecCommit -> L
    boolean DEBUG -> M
    boolean USE_STATE_MANAGER -> N
    java.util.ArrayList mPendingActions -> a
    boolean mExecutingActions -> b
    androidx.fragment.app.FragmentStore mFragmentStore -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/t;"}
    java.util.ArrayList mBackStack -> d
    java.util.ArrayList mCreatedMenus -> e
    androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/k;"}
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> g
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/b;"}
    java.util.concurrent.atomic.AtomicInteger mBackStackIndex -> i
    java.util.Map mResults -> j
    java.util.Map mResultListeners -> k
    java.util.ArrayList mBackStackChangeListeners -> l
    java.util.Map mExitAnimationCancellationSignals -> m
    androidx.fragment.app.FragmentTransition$Callback mFragmentTransitionCallback -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/v$b;"}
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/l;"}
    java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners -> p
    int mCurState -> q
    androidx.fragment.app.FragmentHostCallback mHost -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/j;"}
    androidx.fragment.app.FragmentContainer mContainer -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/e;"}
    androidx.fragment.app.FragmentFactory mFragmentFactory -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/i;"}
    androidx.fragment.app.FragmentFactory mHostFragmentFactory -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/i;"}
    androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/E;"}
    androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/E;"}
    androidx.activity.result.ActivityResultLauncher mStartActivityForResult -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/c;"}
    androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/c;"}
    androidx.activity.result.ActivityResultLauncher mRequestPermissions -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/activity/result/c;"}
    1:1:void dispatchPictureInPictureModeChanged(boolean):0:0 -> A
    1:1:boolean dispatchPrepareOptionsMenu(android.view.Menu):0:0 -> B
    1:1:void dispatchResume():0:0 -> C
    1:1:void dispatchStart():0:0 -> D
    1:1:void dispatchStateChange(int):0:0 -> E
    1:1:void dispatchStop():0:0 -> F
    1:1:void doPendingDeferredStart():0:0 -> G
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> H
    1:1:void endAnimatingAwayFragments():0:0 -> I
    1:1:void ensureExecReady(boolean):0:0 -> J
    1:1:boolean execPendingActions(boolean):0:0 -> K
    1:1:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> L
    1:1:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> M
    1:1:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0:0 -> N
    1:1:androidx.fragment.app.Fragment findActiveFragment(java.lang.String):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/fragment/app/c;"}
    1:1:androidx.fragment.app.Fragment findFragmentById(int):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/fragment/app/c;"}
    1:1:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/fragment/app/c;"}
    1:1:void forcePostponedTransactions():0:0 -> R
    1:1:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> S
    1:1:int getBackStackEntryCount():0:0 -> T
    1:1:androidx.fragment.app.FragmentContainer getContainer():0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/e;"}
    1:1:androidx.fragment.app.FragmentFactory getFragmentFactory():0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/i;"}
    1:1:java.util.List getFragments():0:0 -> W
    1:1:androidx.fragment.app.FragmentHostCallback getHost():0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/j;"}
    1:1:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory():0:0 -> Y
    1:1:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/c;"}
    1:1:java.util.Map access$000(androidx.fragment.app.FragmentManager):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/m;)Ljava/util/Map;"}
    1:1:androidx.fragment.app.Fragment getViewFragment(android.view.View):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/fragment/app/c;"}
    1:1:java.util.Map access$100(androidx.fragment.app.FragmentManager):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/m;)Ljava/util/Map;"}
    1:1:void handleOnBackPressed():0:0 -> b0
    1:1:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/m;)Landroidx/fragment/app/t;"}
    1:1:boolean isLoggingEnabled(int):0:0 -> c0
    1:36:void addAddedFragments(androidx.collection.ArraySet):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/b;)V"}
    1:1:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)Z"}
    1:1:void addBackStackState(androidx.fragment.app.BackStackRecord):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/a;)V"}
    1:1:boolean isStateSaved():0:0 -> e0
    1:1:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/q;)V"}
    1:17:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/b;)V"}
    1:1:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/j;Landroidx/fragment/app/e;Landroidx/fragment/app/c;)V"}
    1:1:void moveFragmentToExpectedState(androidx.fragment.app.Fragment):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
    1:1:void cancelExitAnimation(androidx.fragment.app.Fragment):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
    1:1:void moveToState(int,boolean):0:0 -> h0
    1:1:void checkStateLoss():0:0 -> i
    1:1:void moveToState(androidx.fragment.app.Fragment):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
    1:1:void cleanupExec():0:0 -> j
    1:1:void moveToState(androidx.fragment.app.Fragment,int):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;I)V"}
    1:1:java.util.Set collectAllSpecialEffectsController():0:0 -> k
    1:1:void noteStateNotSaved():0:0 -> k0
    1:1:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0:0 -> l
    1:1:void onContainerAvailable(androidx.fragment.app.FragmentContainerView):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/g;)V"}
    1:1:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/a;ZZZ)V"}
    1:1:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/s;)V"}
    1:1:void destroyFragmentView(androidx.fragment.app.Fragment):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
    1:1:boolean popBackStackImmediate():0:0 -> n0
    1:1:void dispatchActivityCreated():0:0 -> o
    1:1:boolean popBackStackImmediate(java.lang.String,int,int):0:0 -> o0
    1:1:void dispatchConfigurationChanged(android.content.res.Configuration):0:0 -> p
    1:1:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0:0 -> p0
    1:1:boolean dispatchContextItemSelected(android.view.MenuItem):0:0 -> q
    6:86:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Ljava/util/ArrayList;IILp/b;)I"}
    1:1:void dispatchCreate():0:0 -> r
    1:1:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList):0:0 -> r0
    1:1:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> s
    1:1:void reportBackStackChanged():0:0 -> s0
    1:1:void dispatchDestroy():0:0 -> t
    1:1:void restoreSaveState(android.os.Parcelable):0:0 -> t0
    1:1:void dispatchLowMemory():0:0 -> u
    1:1:android.os.Parcelable saveAllState():0:0 -> u0
    1:1:void dispatchMultiWindowModeChanged(boolean):0:0 -> v
    1:1:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;Landroidx/lifecycle/g$c;)V"}
    1:1:boolean dispatchOptionsItemSelected(android.view.MenuItem):0:0 -> w
    1:1:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
    1:1:void dispatchOptionsMenuClosed(android.view.Menu):0:0 -> x
    1:1:void startPendingDeferredFragments():0:0 -> x0
    1:1:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
    1:1:void updateOnBackPressedCallbackEnabled():0:0 -> y0
    1:1:void dispatchPause():0:0 -> z
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.m$c:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:void handleOnBackPressed():0:0 -> b
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.m$a:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:void onActivityResult(java.lang.Object):0:0 -> a
    1:1:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/result/a;)V"}
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.m$b:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:void onActivityResult(java.lang.Object):0:0 -> a
    1:1:void onActivityResult(java.util.Map):0:0 -> b
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.m$d:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.m$e:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroidx/fragment/app/c;"}
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.m$f:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.m$g:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    java.lang.String val$requestKey -> a
    androidx.lifecycle.Lifecycle val$lifecycle -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g;"}
    androidx.fragment.app.FragmentManager this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.m$h:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    androidx.fragment.app.FragmentManager this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/m;"}
    1:1:void onActivityResult(java.lang.Object):0:0 -> a
    1:1:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/activity/result/a;)V"}
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.m$i:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1:1:java.lang.Object parseResult(int,android.content.Intent):0:0 -> a
    1:1:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/content/Intent;)Landroidx/activity/result/a;"}
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.m$j:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    java.lang.String mWho -> a
    int mRequestCode -> b
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.m$j$a:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1:1:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/fragment/app/m$j;"}
    1:1:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/fragment/app/m$j;"}
androidx.fragment.app.FragmentManager$OpGenerator -> androidx.fragment.app.m$k:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.m$l:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    boolean mIsBack -> a
    androidx.fragment.app.BackStackRecord mRecord -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/a;"}
    int mNumPostponed -> c
    1:1:void cancelTransaction():0:0 -> a
    1:1:void completeTransaction():0:0 -> b
    1:1:boolean isReady():0:0 -> c
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.n:
# {"id":"sourceFile","fileName":"FragmentManagerImpl.java"}
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.o:
# {"id":"sourceFile","fileName":"FragmentManagerState.java"}
    java.util.ArrayList mActive -> a
    java.util.ArrayList mAdded -> b
    androidx.fragment.app.BackStackState[] mBackStack -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/fragment/app/b;"}
    int mBackStackIndex -> d
    java.lang.String mPrimaryNavActiveWho -> e
    java.util.ArrayList mResultKeys -> f
    java.util.ArrayList mResults -> g
    java.util.ArrayList mLaunchedFragments -> h
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.o$a:
# {"id":"sourceFile","fileName":"FragmentManagerState.java"}
    1:1:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/fragment/app/o;"}
    1:1:androidx.fragment.app.FragmentManagerState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/fragment/app/o;"}
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.p:
# {"id":"sourceFile","fileName":"FragmentManagerViewModel.java"}
    java.util.HashMap mRetainedFragments -> c
    java.util.HashMap mChildNonConfigs -> d
    java.util.HashMap mViewModelStores -> e
    boolean mStateAutomaticallySaved -> f
    boolean mHasBeenCleared -> g
    boolean mHasSavedSnapshot -> h
    boolean mIsStateSaved -> i
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/u$a;"}
    1:1:void onCleared():0:0 -> d
    1:1:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/fragment/app/c;"}
    1:1:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/v;)Landroidx/fragment/app/p;"}
    1:1:java.util.Collection getRetainedFragments():0:0 -> g
    1:1:void setIsStateSaved(boolean):0:0 -> h
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.p$a:
# {"id":"sourceFile","fileName":"FragmentManagerViewModel.java"}
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/t;"}
androidx.fragment.app.FragmentOnAttachListener -> androidx.fragment.app.q:
# {"id":"sourceFile","fileName":"FragmentOnAttachListener.java"}
androidx.fragment.app.FragmentState -> androidx.fragment.app.r:
# {"id":"sourceFile","fileName":"FragmentState.java"}
    java.lang.String mClassName -> a
    java.lang.String mWho -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mRemoving -> h
    boolean mDetached -> i
    android.os.Bundle mArguments -> j
    boolean mHidden -> k
    int mMaxLifecycleState -> l
    android.os.Bundle mSavedFragmentState -> m
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;)V"}
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.r$a:
# {"id":"sourceFile","fileName":"FragmentState.java"}
    1:1:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Landroidx/fragment/app/r;"}
    1:1:androidx.fragment.app.FragmentState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Landroidx/fragment/app/r;"}
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.s:
# {"id":"sourceFile","fileName":"FragmentStateManager.java"}
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/l;"}
    androidx.fragment.app.FragmentStore mFragmentStore -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/t;"}
    boolean mMovingToState -> c
    int mFragmentManagerState -> d
    1:1:int computeExpectedState():0:0 -> a
    1:1:androidx.fragment.app.Fragment getFragment():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/c;"}
    1:1:void moveToExpectedState():0:0 -> c
    1:1:androidx.fragment.app.FragmentState saveState():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/r;"}
    1:1:void setFragmentManagerState(int):0:0 -> e
androidx.fragment.app.FragmentStore -> androidx.fragment.app.t:
# {"id":"sourceFile","fileName":"FragmentStore.java"}
    java.util.ArrayList mAdded -> a
    java.util.HashMap mActive -> b
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/p;"}
    1:1:void burpActive():0:0 -> a
    1:1:void dispatchStateChange(int):0:0 -> b
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> c
    1:1:androidx.fragment.app.Fragment findActiveFragment(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/fragment/app/c;"}
    1:1:androidx.fragment.app.Fragment findFragmentById(int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/fragment/app/c;"}
    1:1:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/fragment/app/c;"}
    1:1:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/fragment/app/c;"}
    1:1:java.util.List getActiveFragmentStateManagers():0:0 -> h
    1:1:java.util.List getActiveFragments():0:0 -> i
    1:1:java.util.List getFragments():0:0 -> j
    1:1:void moveToExpectedState():0:0 -> k
    1:1:void resetActiveFragments():0:0 -> l
    1:1:void restoreAddedFragments(java.util.List):0:0 -> m
    1:1:java.util.ArrayList saveActiveFragments():0:0 -> n
    1:1:java.util.ArrayList saveAddedFragments():0:0 -> o
    1:1:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/p;)V"}
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.u:
# {"id":"sourceFile","fileName":"FragmentTransaction.java"}
    androidx.fragment.app.FragmentFactory mFragmentFactory -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/i;"}
    java.lang.ClassLoader mClassLoader -> b
    java.util.ArrayList mOps -> c
    int mEnterAnim -> d
    int mExitAnim -> e
    int mPopEnterAnim -> f
    int mPopExitAnim -> g
    int mTransition -> h
    boolean mAddToBackStack -> i
    boolean mAllowAddToBackStack -> j
    java.lang.String mName -> k
    int mBreadCrumbTitleRes -> l
    java.lang.CharSequence mBreadCrumbTitleText -> m
    int mBreadCrumbShortTitleRes -> n
    java.lang.CharSequence mBreadCrumbShortTitleText -> o
    java.util.ArrayList mSharedElementSourceNames -> p
    java.util.ArrayList mSharedElementTargetNames -> q
    boolean mReorderingAllowed -> r
    java.util.ArrayList mCommitRunnables -> s
    1:1:void addOp(androidx.fragment.app.FragmentTransaction$Op):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/u$a;)V"}
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.u$a:
# {"id":"sourceFile","fileName":"FragmentTransaction.java"}
    int mCmd -> a
    int mEnterAnim -> b
    int mExitAnim -> c
    int mPopEnterAnim -> d
    int mPopExitAnim -> e
    androidx.lifecycle.Lifecycle$State mOldMaxState -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int,androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/fragment/app/c;)V"}
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.v:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    int[] INVERSE_OPS -> a
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/B;"}
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/B;"}
    1:1:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/a;Landroidx/fragment/app/u$a;Landroid/util/SparseArray;ZZ)V"}
    1:1:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/a;Landroid/util/SparseArray;Z)V"}
    1:91:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/util/ArrayList;Ljava/util/ArrayList;II)Lp/a;"}
    1:1:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/a;Landroid/util/SparseArray;Z)V"}
    1:1:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Ljava/util/List;)Z"}
    1:1:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/c;Landroidx/fragment/app/c;)Landroidx/fragment/app/B;"}
    1:1:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Ljava/lang/Object;Landroidx/fragment/app/c;Ljava/util/ArrayList;Landroid/view/View;)Ljava/util/ArrayList;"}
    1:5:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Landroid/view/ViewGroup;Landroid/view/View;Lp/a;Landroidx/fragment/app/v$c;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:5:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Landroid/view/ViewGroup;Landroid/view/View;Lp/a;Landroidx/fragment/app/v$c;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"}
    9:157:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Landroidx/fragment/app/v$c;Landroid/view/View;Lp/a;Landroidx/fragment/app/v$b;)V"}
    5:133:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Landroidx/fragment/app/v$c;Landroid/view/View;Lp/a;Landroidx/fragment/app/v$b;)V"}
    1:1:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Landroidx/fragment/app/c;Z)Ljava/lang/Object;"}
    1:1:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Landroidx/fragment/app/c;Z)Ljava/lang/Object;"}
    1:1:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Landroidx/fragment/app/c;Z)Ljava/lang/Object;"}
    1:1:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Ljava/lang/Object;Landroidx/fragment/app/c;Ljava/util/ArrayList;)V"}
    1:1:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/fragment/app/B;"}
    1:1:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/fragment/app/B;Landroid/view/ViewGroup;Landroidx/fragment/app/c;Landroid/view/View;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/util/ArrayList;)V"}
    1:1:void setViewVisibility(java.util.ArrayList,int):0:0 -> r
    1:1:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/fragment/app/e;Ljava/util/ArrayList;Ljava/util/ArrayList;IIZLandroidx/fragment/app/v$b;)V"}
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.v$a:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    java.lang.Object val$enterTransition -> a
    androidx.fragment.app.FragmentTransitionImpl val$impl -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/B;"}
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$sharedElementsIn -> d
    java.util.ArrayList val$enteringViews -> e
    java.util.ArrayList val$exitingViews -> f
    java.lang.Object val$exitTransition -> g
androidx.fragment.app.FragmentTransition$Callback -> androidx.fragment.app.v$b:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.v$c:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    boolean lastInIsPop -> a
    boolean firstOutIsPop -> b
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.A:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    1:1:void addTarget(java.lang.Object,android.view.View):0:0 -> a
    1:1:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0:0 -> b
    1:1:boolean canHandle(java.lang.Object):0:0 -> c
    1:1:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> f
    1:1:void removeTarget(java.lang.Object,android.view.View):0:0 -> h
    1:1:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> i
    1:1:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList):0:0 -> k
    1:1:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> n
    1:1:boolean hasSimpleTarget(android.transition.Transition):0:0 -> o
androidx.fragment.app.FragmentTransitionCompat21$$ExternalSyntheticApiModelOutline0 -> androidx.fragment.app.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int m(android.transition.TransitionSet):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentTransitionCompat21$$ExternalSyntheticApiModelOutline1 -> androidx.fragment.app.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.transition.Transition m(android.transition.TransitionSet,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentTransitionCompat21$$ExternalSyntheticApiModelOutline2 -> androidx.fragment.app.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List m(android.transition.Transition):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentTransitionCompat21$$ExternalSyntheticApiModelOutline3 -> androidx.fragment.app.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List m(android.transition.Transition):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.A$a:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$enteringViews -> b
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$exitingViews -> d
    java.lang.Object val$sharedElementTransition -> e
    java.util.ArrayList val$sharedElementsIn -> f
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/A;"}
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.B:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    void addTarget(java.lang.Object,android.view.View) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> b
    boolean canHandle(java.lang.Object) -> c
    1:1:java.lang.String findKeyForValue(java.util.Map,java.lang.String):0:0 -> d
    1:1:boolean isNullOrEmpty(java.util.List):0:0 -> e
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> f
    1:1:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0:0 -> g
    void removeTarget(java.lang.Object,android.view.View) -> h
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> i
    1:1:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map):0:0 -> j
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> k
    1:1:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map):0:0 -> l
    1:1:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> m
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> n
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.B$a:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    int val$numSharedElements -> a
    java.util.ArrayList val$sharedElementsIn -> b
    java.util.ArrayList val$inNames -> c
    java.util.ArrayList val$sharedElementsOut -> d
    java.util.ArrayList val$outNames -> e
    androidx.fragment.app.FragmentTransitionImpl this$0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/B;"}
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.B$b:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    java.util.ArrayList val$sharedElementsIn -> a
    java.util.Map val$nameOverrides -> b
    androidx.fragment.app.FragmentTransitionImpl this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/B;"}
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.B$c:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    java.util.ArrayList val$sharedElementsIn -> a
    java.util.Map val$nameOverrides -> b
    androidx.fragment.app.FragmentTransitionImpl this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/fragment/app/B;"}
androidx.fragment.app.LogWriter -> androidx.fragment.app.C:
# {"id":"sourceFile","fileName":"LogWriter.java"}
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    1:1:void flushBuilder():0:0 -> a
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.D:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    void executePendingOperations() -> a
    void forceCompleteAllOperations() -> b
    void forcePostponedExecutePendingOperations() -> c
    void markPostponedState() -> d
    void updateOperationDirection(boolean) -> e
androidx.fragment.app.SpecialEffectsControllerFactory -> androidx.fragment.app.E:
# {"id":"sourceFile","fileName":"SpecialEffectsControllerFactory.java"}
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> H.a:
# {"id":"sourceFile","fileName":"FastOutLinearInInterpolator.java"}
    float[] VALUES -> c
    3:10:void <clinit>():0:0 -> <clinit>
    1:6:void <init>():0:0 -> <init>
    1:5:float getInterpolation(float):0:0 -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> H.b:
# {"id":"sourceFile","fileName":"FastOutSlowInInterpolator.java"}
    float[] VALUES -> c
    3:10:void <clinit>():0:0 -> <clinit>
    1:6:void <init>():0:0 -> <init>
    1:5:float getInterpolation(float):0:0 -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> H.c:
# {"id":"sourceFile","fileName":"LinearOutSlowInInterpolator.java"}
    float[] VALUES -> c
    3:10:void <clinit>():0:0 -> <clinit>
    1:6:void <init>():0:0 -> <init>
    1:5:float getInterpolation(float):0:0 -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> H.d:
# {"id":"sourceFile","fileName":"LookupTableInterpolator.java"}
    float[] mValues -> a
    float mStepSize -> b
    1:15:void <init>(float[]):0:0 -> <init>
    14:49:float getInterpolation(float):0:0 -> getInterpolation
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.a:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/a;"}
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Landroidx/lifecycle/a$a;"}
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> b
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/a$a;"}
    1:1:boolean hasLifecycleMethods(java.lang.Class):0:0 -> d
    1:1:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Landroidx/lifecycle/a$b;Landroidx/lifecycle/g$b;Ljava/lang/Class;)V"}
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.a$a:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    1:1:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;Ljava/lang/Object;)V"}
    1:1:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;Ljava/lang/Object;)V"}
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.a$b:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    1:1:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;Ljava/lang/Object;)V"}
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
# {"id":"sourceFile","fileName":"CompositeGeneratedAdaptersObserver.java"}
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/lifecycle/f;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.c:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserver.java"}
androidx.lifecycle.DefaultLifecycleObserver$-CC -> androidx.lifecycle.b:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserver.java"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.DefaultLifecycleObserver.onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/c;Landroidx/lifecycle/k;)V"}
    1:1:void androidx.lifecycle.DefaultLifecycleObserver.onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/c;Landroidx/lifecycle/k;)V"}
    1:1:void androidx.lifecycle.DefaultLifecycleObserver.onPause(androidx.lifecycle.LifecycleOwner):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/c;Landroidx/lifecycle/k;)V"}
    1:1:void androidx.lifecycle.DefaultLifecycleObserver.onStart(androidx.lifecycle.LifecycleOwner):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/c;Landroidx/lifecycle/k;)V"}
    1:1:void androidx.lifecycle.DefaultLifecycleObserver.onStop(androidx.lifecycle.LifecycleOwner):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/c;Landroidx/lifecycle/k;)V"}
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.d:
# {"id":"sourceFile","fileName":"EmptyActivityLifecycleCallbacks.java"}
androidx.lifecycle.FullLifecycleObserver -> androidx.lifecycle.e:
# {"id":"sourceFile","fileName":"FullLifecycleObserver.java"}
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    void onPause(androidx.lifecycle.LifecycleOwner) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    void onStop(androidx.lifecycle.LifecycleOwner) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    void onCreate(androidx.lifecycle.LifecycleOwner) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    void onStart(androidx.lifecycle.LifecycleOwner) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
# {"id":"sourceFile","fileName":"FullLifecycleObserverAdapter.java"}
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/i;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$a:
# {"id":"sourceFile","fileName":"FullLifecycleObserverAdapter.java"}
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.f:
# {"id":"sourceFile","fileName":"GeneratedAdapter.java"}
androidx.lifecycle.Lifecycle -> androidx.lifecycle.g:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    java.util.concurrent.atomic.AtomicReference mInternalScopeRef -> a
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/j;)V"}
    androidx.lifecycle.Lifecycle$State getCurrentState() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/g$c;"}
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/j;)V"}
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.g$a:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$State -> a
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> b
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.g$b:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    androidx.lifecycle.Lifecycle$Event[] $VALUES -> $VALUES
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/lifecycle/g$b;"}
    androidx.lifecycle.Lifecycle$Event ON_ANY -> ON_ANY
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$b;"}
    androidx.lifecycle.Lifecycle$Event ON_CREATE -> ON_CREATE
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$b;"}
    androidx.lifecycle.Lifecycle$Event ON_DESTROY -> ON_DESTROY
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$b;"}
    androidx.lifecycle.Lifecycle$Event ON_PAUSE -> ON_PAUSE
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$b;"}
    androidx.lifecycle.Lifecycle$Event ON_RESUME -> ON_RESUME
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$b;"}
    androidx.lifecycle.Lifecycle$Event ON_START -> ON_START
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$b;"}
    androidx.lifecycle.Lifecycle$Event ON_STOP -> ON_STOP
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$b;"}
    1:1:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;)Landroidx/lifecycle/g$b;"}
    1:1:androidx.lifecycle.Lifecycle$State getTargetState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/g$c;"}
    1:1:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;)Landroidx/lifecycle/g$b;"}
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.g$c:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    androidx.lifecycle.Lifecycle$State DESTROYED -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    androidx.lifecycle.Lifecycle$State INITIALIZED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    androidx.lifecycle.Lifecycle$State CREATED -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    androidx.lifecycle.Lifecycle$State STARTED -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    androidx.lifecycle.Lifecycle$State RESUMED -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    androidx.lifecycle.Lifecycle$State[] $VALUES -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/lifecycle/g$c;"}
    1:1:boolean isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;)Z"}
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.h:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.java"}
    java.util.concurrent.atomic.AtomicBoolean sInitialized -> a
    1:1:void init(android.content.Context):0:0 -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.h$a:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.java"}
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.i:
# {"id":"sourceFile","fileName":"LifecycleEventObserver.java"}
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.j:
# {"id":"sourceFile","fileName":"LifecycleObserver.java"}
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.k:
# {"id":"sourceFile","fileName":"LifecycleOwner.java"}
    androidx.lifecycle.Lifecycle getLifecycle() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/g;"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.l:
# {"id":"sourceFile","fileName":"LifecycleRegistry.java"}
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/a;"}
    androidx.lifecycle.Lifecycle$State mState -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    java.lang.ref.WeakReference mLifecycleOwner -> d
    int mAddingObserverCounter -> e
    boolean mHandlingEvent -> f
    boolean mNewEventOccurred -> g
    java.util.ArrayList mParentStates -> h
    boolean mEnforceMainThread -> i
    1:1:void <init>(androidx.lifecycle.LifecycleOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    2:2:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Z)V"}
    1:1:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/j;)V"}
    1:1:androidx.lifecycle.Lifecycle$State getCurrentState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/g$c;"}
    1:1:void removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/j;)V"}
    1:1:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/j;)Landroidx/lifecycle/g$c;"}
    1:1:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> f
    1:1:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$b;)V"}
    1:1:boolean isSynced():0:0 -> i
    1:1:void markState(androidx.lifecycle.Lifecycle$State):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;)V"}
    1:1:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;Landroidx/lifecycle/g$c;)Landroidx/lifecycle/g$c;"}
    1:1:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;)V"}
    1:1:void popParentState():0:0 -> m
    1:1:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;)V"}
    1:1:void setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$c;)V"}
    1:1:void sync():0:0 -> p
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.l$a:
# {"id":"sourceFile","fileName":"LifecycleRegistry.java"}
    androidx.lifecycle.Lifecycle$State mState -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g$c;"}
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/i;"}
    1:1:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.Lifecycling -> androidx.lifecycle.m:
# {"id":"sourceFile","fileName":"Lifecycling.java"}
    java.util.Map sCallbackCache -> a
    java.util.Map sClassToAdapters -> b
    1:1:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/reflect/Constructor;Ljava/lang/Object;)Landroidx/lifecycle/f;"}
    1:1:java.lang.reflect.Constructor generatedConstructor(java.lang.Class):0:0 -> b
    1:1:java.lang.String getAdapterName(java.lang.String):0:0 -> c
    1:1:int getObserverConstructorType(java.lang.Class):0:0 -> d
    1:1:boolean isLifecycleParent(java.lang.Class):0:0 -> e
    1:1:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Landroidx/lifecycle/i;"}
    1:1:int resolveObserverCallbackType(java.lang.Class):0:0 -> g
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
# {"id":"sourceFile","fileName":"Lifecycling.java"}
    androidx.lifecycle.LifecycleEventObserver val$observer -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/i;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
# {"id":"sourceFile","fileName":"LiveData.java"}
    androidx.lifecycle.LifecycleOwner mOwner -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/k;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
    1:1:boolean shouldBeActive():0:0 -> i
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.n:
# {"id":"sourceFile","fileName":"LiveData.java"}
    boolean mActive -> a
    1:1:void activeStateChanged(boolean):0:0 -> h
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.o:
# {"id":"sourceFile","fileName":"MethodCallsLogger.java"}
    java.util.Map mCalledMethods -> a
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.p:
# {"id":"sourceFile","fileName":"OnLifecycleEvent.java"}
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
# {"id":"sourceFile","fileName":"ProcessLifecycleInitializer.java"}
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/lifecycle/k;"}
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.q:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    int mStartedCounter -> b
    int mResumedCounter -> c
    boolean mPauseSent -> d
    boolean mStopSent -> e
    android.os.Handler mHandler -> f
    androidx.lifecycle.LifecycleRegistry mRegistry -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/l;"}
    java.lang.Runnable mDelayedPauseRunnable -> h
    androidx.lifecycle.ReportFragment$ActivityInitializationListener mInitializationListener -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/s$a;"}
    androidx.lifecycle.ProcessLifecycleOwner sInstance -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/q;"}
    1:1:void activityPaused():0:0 -> a
    1:1:void activityResumed():0:0 -> d
    1:1:void activityStarted():0:0 -> e
    1:1:void activityStopped():0:0 -> f
    1:1:void attach(android.content.Context):0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/g;"}
    1:1:void dispatchPauseIfNeeded():0:0 -> i
    1:1:void dispatchStopIfNeeded():0:0 -> j
    1:1:androidx.lifecycle.LifecycleOwner get():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/k;"}
    1:1:void init(android.content.Context):0:0 -> l
androidx.lifecycle.ProcessLifecycleOwner$1 -> androidx.lifecycle.q$a:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/q;"}
androidx.lifecycle.ProcessLifecycleOwner$2 -> androidx.lifecycle.q$b:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/q;"}
    1:1:void onCreate():0:0 -> a
    1:1:void onResume():0:0 -> b
    1:1:void onStart():0:0 -> c
androidx.lifecycle.ProcessLifecycleOwner$3 -> androidx.lifecycle.q$c:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/q;"}
androidx.lifecycle.ProcessLifecycleOwner$3$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$3$1 -> androidx.lifecycle.q$c$a:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    androidx.lifecycle.ProcessLifecycleOwner$3 this$1 -> this$1
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/q$c;"}
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
# {"id":"sourceFile","fileName":"ReflectiveGenericLifecycleObserver.java"}
    java.lang.Object mWrapped -> a
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/a$a;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.ReportFragment -> androidx.lifecycle.s:
# {"id":"sourceFile","fileName":"ReportFragment.java"}
    androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/s$a;"}
    1:1:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/g$b;)V"}
    1:1:void dispatch(androidx.lifecycle.Lifecycle$Event):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g$b;)V"}
    1:1:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s$a;)V"}
    1:1:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s$a;)V"}
    1:1:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s$a;)V"}
    1:1:androidx.lifecycle.ReportFragment get(android.app.Activity):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Landroidx/lifecycle/s;"}
    1:1:void injectIfNeededIn(android.app.Activity):0:0 -> g
    1:1:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s$a;)V"}
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.s$a:
# {"id":"sourceFile","fileName":"ReportFragment.java"}
    void onCreate() -> a
    void onResume() -> b
    void onStart() -> c
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.s$b:
# {"id":"sourceFile","fileName":"ReportFragment.java"}
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
# {"id":"sourceFile","fileName":"SavedStateHandleController.java"}
    boolean mIsAttached -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
    1:1:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/t;Landroidx/savedstate/SavedStateRegistry;Landroidx/lifecycle/g;)V"}
    1:1:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/savedstate/SavedStateRegistry;Landroidx/lifecycle/g;)V"}
    1:1:boolean isAttached():0:0 -> j
    1:1:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/savedstate/SavedStateRegistry;Landroidx/lifecycle/g;)V"}
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
# {"id":"sourceFile","fileName":"SavedStateHandleController.java"}
    androidx.lifecycle.Lifecycle val$lifecycle -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/g;"}
    androidx.savedstate.SavedStateRegistry val$registry -> b
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$a:
# {"id":"sourceFile","fileName":"SavedStateHandleController.java"}
    1:1:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/savedstate/c;)V"}
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
# {"id":"sourceFile","fileName":"SingleGeneratedAdapterObserver.java"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.lifecycle.ViewModel -> androidx.lifecycle.t:
# {"id":"sourceFile","fileName":"ViewModel.java"}
    java.util.Map mBagOfTags -> a
    boolean mCleared -> b
    1:1:void clear():0:0 -> a
    1:1:void closeWithRuntimeException(java.lang.Object):0:0 -> b
    1:1:java.lang.Object getTag(java.lang.String):0:0 -> c
    1:1:void onCleared():0:0 -> d
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.u:
# {"id":"sourceFile","fileName":"ViewModelProvider.java"}
    androidx.lifecycle.ViewModelProvider$Factory mFactory -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/u$a;"}
    androidx.lifecycle.ViewModelStore mViewModelStore -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/v;"}
    1:1:androidx.lifecycle.ViewModel get(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/t;"}
    1:1:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Class;)Landroidx/lifecycle/t;"}
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.u$a:
# {"id":"sourceFile","fileName":"ViewModelProvider.java"}
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/t;"}
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.v:
# {"id":"sourceFile","fileName":"ViewModelStore.java"}
    java.util.HashMap mMap -> a
    1:1:void clear():0:0 -> a
    1:1:androidx.lifecycle.ViewModel get(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/lifecycle/t;"}
    1:1:java.util.Set keys():0:0 -> c
    1:1:void put(java.lang.String,androidx.lifecycle.ViewModel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/lifecycle/t;)V"}
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.w:
# {"id":"sourceFile","fileName":"ViewModelStoreOwner.java"}
    androidx.lifecycle.ViewModelStore getViewModelStore() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/v;"}
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.x:
# {"id":"sourceFile","fileName":"ViewTreeLifecycleOwner.java"}
    1:1:void set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/lifecycle/k;)V"}
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.y:
# {"id":"sourceFile","fileName":"ViewTreeViewModelStoreOwner.java"}
    1:1:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/lifecycle/w;)V"}
androidx.lifecycle.runtime.R$id -> I.a:
    int view_tree_lifecycle_owner -> a
androidx.lifecycle.viewmodel.R$id -> J.a:
    int view_tree_view_model_store_owner -> a
androidx.loader.app.LoaderManager -> androidx.loader.app.a:
# {"id":"sourceFile","fileName":"LoaderManager.java"}
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    1:1:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)Landroidx/loader/app/a;"}
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.b:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/k;"}
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/loader/app/b$a;"}
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.b$a:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    androidx.collection.SparseArrayCompat mLoaders -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/h;"}
    boolean mCreatingLoader -> d
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/u$a;"}
    1:1:void onCleared():0:0 -> d
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> e
    1:1:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/v;)Landroidx/loader/app/b$a;"}
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.b$a$a:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/t;"}
androidx.savedstate.R$id -> androidx.savedstate.a:
    int view_tree_saved_state_registry_owner -> a
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
# {"id":"sourceFile","fileName":"Recreator.java"}
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/savedstate/c;"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
    1:1:void reflectiveNew(java.lang.String):0:0 -> h
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$a:
# {"id":"sourceFile","fileName":"Recreator.java"}
    java.util.Set mClasses -> a
    1:1:android.os.Bundle saveState():0:0 -> a
    1:1:void add(java.lang.String):0:0 -> b
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
# {"id":"sourceFile","fileName":"SavedStateRegistry.java"}
    androidx.arch.core.internal.SafeIterableMap mComponents -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b;"}
    android.os.Bundle mRestoredState -> b
    boolean mRestored -> c
    androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/savedstate/Recreator$a;"}
    boolean mAllowingSavingState -> e
    1:1:android.os.Bundle consumeRestoredStateForKey(java.lang.String):0:0 -> a
    1:1:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/g;Landroid/os/Bundle;)V"}
    1:1:void performSave(android.os.Bundle):0:0 -> c
    1:1:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/savedstate/SavedStateRegistry$b;)V"}
    1:1:void runOnNextRecreation(java.lang.Class):0:0 -> e
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
# {"id":"sourceFile","fileName":"SavedStateRegistry.java"}
    androidx.savedstate.SavedStateRegistry this$0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;Landroidx/lifecycle/g$b;)V"}
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.SavedStateRegistry$a:
# {"id":"sourceFile","fileName":"SavedStateRegistry.java"}
    void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/savedstate/c;)V"}
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.SavedStateRegistry$b:
# {"id":"sourceFile","fileName":"SavedStateRegistry.java"}
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.b:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.java"}
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/savedstate/c;"}
    androidx.savedstate.SavedStateRegistry mRegistry -> b
    1:1:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/savedstate/c;)Landroidx/savedstate/b;"}
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0:0 -> b
    1:1:void performRestore(android.os.Bundle):0:0 -> c
    1:1:void performSave(android.os.Bundle):0:0 -> d
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.c:
# {"id":"sourceFile","fileName":"SavedStateRegistryOwner.java"}
    androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> c
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.d:
# {"id":"sourceFile","fileName":"ViewTreeSavedStateRegistryOwner.java"}
    1:1:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/savedstate/c;)V"}
androidx.startup.AppInitializer -> androidx.startup.a:
# {"id":"sourceFile","fileName":"AppInitializer.java"}
    java.util.Map mInitialized -> a
    java.util.Set mDiscovered -> b
    android.content.Context mContext -> c
    androidx.startup.AppInitializer sInstance -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/startup/a;"}
    java.lang.Object sLock -> e
    1:1:void discoverAndInitialize():0:0 -> a
    1:1:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    1:1:androidx.startup.AppInitializer getInstance(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/startup/a;"}
    1:1:java.lang.Object initializeComponent(java.lang.Class):0:0 -> d
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
# {"id":"sourceFile","fileName":"InitializationProvider.java"}
androidx.startup.Initializer -> K.a:
# {"id":"sourceFile","fileName":"Initializer.java"}
    java.util.List dependencies() -> a
    java.lang.Object create(android.content.Context) -> b
androidx.startup.R$string -> K.b:
    int androidx_startup -> a
androidx.startup.StartupException -> K.c:
# {"id":"sourceFile","fileName":"StartupException.java"}
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.tracing.Trace -> L.b:
# {"id":"sourceFile","fileName":"Trace.java"}
    long sTraceTagApp -> a
    java.lang.reflect.Method sIsTagEnabledMethod -> b
    1:4:void beginSection(java.lang.String):0:0 -> a
    1:4:void endSection():0:0 -> b
    1:49:void handleException(java.lang.String,java.lang.Exception):0:0 -> c
    1:14:boolean isEnabled():0:0 -> d
    3:65:boolean isEnabledFallback():0:0 -> e
androidx.tracing.Trace$$ExternalSyntheticApiModelOutline0 -> L.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean L.Trace$$ExternalSyntheticApiModelOutline0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.tracing.TraceApi18Impl -> L.c:
# {"id":"sourceFile","fileName":"TraceApi18Impl.java"}
    1:4:void beginSection(java.lang.String):0:0 -> a
    1:4:void endSection():0:0 -> b
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.a:
# {"id":"sourceFile","fileName":"AndroidResources.java"}
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> a
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> b
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> c
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> d
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> e
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> f
    int[] STYLEABLE_ANIMATOR -> g
    int[] STYLEABLE_ANIMATOR_SET -> h
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> i
    int[] STYLEABLE_KEYFRAME -> j
    int[] STYLEABLE_PROPERTY_ANIMATOR -> k
    int[] STYLEABLE_PATH_INTERPOLATOR -> l
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.f:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/f$b;"}
    android.content.Context mContext -> d
    android.animation.ArgbEvaluator mArgbEvaluator -> e
    android.animation.Animator$AnimatorListener mAnimatorListener -> f
    java.util.ArrayList mAnimationCallbacks -> g
    android.graphics.drawable.Drawable$Callback mCallback -> h
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.content.Context):0:0 -> <init>
    3:3:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/vectordrawable/graphics/drawable/f$b;Landroid/content/res/Resources;)V"}
    1:1:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroidx/vectordrawable/graphics/drawable/f;"}
    1:1:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0:0 -> b
    1:1:void setupColorAnimator(android.animation.Animator):0:0 -> c
    1:1:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> inflate
    2:2:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    1:1:void setColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> setColorFilter
    2:2:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline0 -> androidx.vectordrawable.graphics.drawable.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.AnimatedVectorDrawable m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline1 -> androidx.vectordrawable.graphics.drawable.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.graphics.drawable.AnimatedVectorDrawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline2 -> androidx.vectordrawable.graphics.drawable.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.graphics.drawable.AnimatedVectorDrawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline3 -> androidx.vectordrawable.graphics.drawable.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void m(android.graphics.drawable.AnimatedVectorDrawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.f$a:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/f;"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.f$b:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    int mChangingConfigurations -> a
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/n;"}
    android.animation.AnimatorSet mAnimatorSet -> c
    java.util.ArrayList mAnimators -> d
    androidx.collection.ArrayMap mTargetNameMap -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    1:1:void setupAnimatorSet():0:0 -> a
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.f$c:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
    3:3:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState$$ExternalSyntheticApiModelOutline0 -> androidx.vectordrawable.graphics.drawable.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean m(android.graphics.drawable.Drawable$ConstantState):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState$$ExternalSyntheticApiModelOutline1 -> androidx.vectordrawable.graphics.drawable.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.Drawable m(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.i:
# {"id":"sourceFile","fileName":"AnimationUtilsCompat.java"}
    1:1:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> a
    1:1:android.view.animation.Interpolator loadInterpolator(android.content.Context,int):0:0 -> b
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.j:
# {"id":"sourceFile","fileName":"AnimatorInflaterCompat.java"}
    1:1:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float):0:0 -> a
    1:1:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0:0 -> b
    1:1:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float):0:0 -> c
    1:1:void distributeKeyframes(android.animation.Keyframe[],float,int,int):0:0 -> d
    1:1:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String):0:0 -> e
    1:1:int inferValueTypeFromValues(android.content.res.TypedArray,int,int):0:0 -> f
    1:1:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0:0 -> g
    1:1:boolean isColorType(int):0:0 -> h
    1:1:android.animation.Animator loadAnimator(android.content.Context,int):0:0 -> i
    1:1:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0:0 -> j
    1:1:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0:0 -> k
    1:1:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0:0 -> l
    1:1:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> m
    1:1:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser):0:0 -> n
    1:1:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> o
    1:1:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> p
    1:1:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> q
    1:1:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0:0 -> r
    1:1:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String):0:0 -> s
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.j$a:
# {"id":"sourceFile","fileName":"AnimatorInflaterCompat.java"}
    androidx.core.graphics.PathParser$PathDataNode[] mNodeArray -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ls/j$b;"}
    1:51:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F[Ls/j$b;[Ls/j$b;)[Ls/j$b;"}
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.k:
# {"id":"sourceFile","fileName":"ArgbEvaluator.java"}
    androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/k;"}
    1:1:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/vectordrawable/graphics/drawable/k;"}
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.l:
# {"id":"sourceFile","fileName":"PathInterpolatorCompat.java"}
    float[] mX -> a
    float[] mY -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0:0 -> <init>
    2:2:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0:0 -> <init>
    1:1:void initCubic(float,float,float,float):0:0 -> a
    1:1:void initPath(android.graphics.Path):0:0 -> b
    1:1:void initQuad(float,float):0:0 -> c
    1:1:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> d
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.m:
# {"id":"sourceFile","fileName":"VectorDrawableCommon.java"}
    android.graphics.drawable.Drawable mDelegateDrawable -> b
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.n:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/n$h;"}
    android.graphics.PorterDuffColorFilter mTintFilter -> d
    android.graphics.ColorFilter mColorFilter -> e
    boolean mMutated -> f
    boolean mAllowCaching -> g
    android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate -> h
    float[] mTmpFloats -> i
    android.graphics.Matrix mTmpMatrix -> j
    android.graphics.Rect mTmpBounds -> k
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> l
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$h;)V"}
    1:1:int applyAlpha(int,float):0:0 -> a
    1:1:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroidx/vectordrawable/graphics/drawable/n;"}
    1:1:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroidx/vectordrawable/graphics/drawable/n;"}
    1:1:java.lang.Object getTargetByName(java.lang.String):0:0 -> d
    1:1:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    1:1:boolean needMirroring():0:0 -> f
    1:1:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode):0:0 -> g
    1:1:void setAllowCaching(boolean):0:0 -> h
    1:1:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> i
    1:1:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> inflate
    2:2:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    1:1:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode):0:0 -> j
    1:1:void setColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> setColorFilter
    2:2:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.n$a:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.n$b:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$b;)V"}
    1:1:boolean isClipPath():0:0 -> c
    1:1:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> e
    1:1:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> f
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.n$c:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    int[] mThemeAttrs -> e
    androidx.core.content.res.ComplexColorCompat mStrokeColor -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/d;"}
    float mStrokeWidth -> g
    androidx.core.content.res.ComplexColorCompat mFillColor -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/d;"}
    float mStrokeAlpha -> i
    float mFillAlpha -> j
    float mTrimPathStart -> k
    float mTrimPathEnd -> l
    float mTrimPathOffset -> m
    android.graphics.Paint$Cap mStrokeLineCap -> n
    android.graphics.Paint$Join mStrokeLineJoin -> o
    float mStrokeMiterlimit -> p
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$c;)V"}
    1:1:boolean isStateful():0:0 -> a
    1:1:boolean onStateChanged(int[]):0:0 -> b
    1:1:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap):0:0 -> e
    1:1:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join):0:0 -> f
    1:1:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> g
    1:1:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> h
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.n$d:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    android.graphics.Matrix mStackedMatrix -> a
    java.util.ArrayList mChildren -> b
    float mRotate -> c
    float mPivotX -> d
    float mPivotY -> e
    float mScaleX -> f
    float mScaleY -> g
    float mTranslateX -> h
    float mTranslateY -> i
    android.graphics.Matrix mLocalMatrix -> j
    int mChangingConfigurations -> k
    int[] mThemeAttrs -> l
    java.lang.String mGroupName -> m
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$d;Lp/a;)V"}
    1:1:boolean isStateful():0:0 -> a
    1:1:boolean onStateChanged(int[]):0:0 -> b
    1:1:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> c
    1:1:void updateLocalMatrix():0:0 -> d
    1:1:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> e
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.n$e:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$a;)V"}
    1:1:boolean isStateful():0:0 -> a
    1:1:boolean onStateChanged(int[]):0:0 -> b
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.n$f:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    androidx.core.graphics.PathParser$PathDataNode[] mNodes -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ls/j$b;"}
    java.lang.String mPathName -> b
    int mFillRule -> c
    int mChangingConfigurations -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$f;)V"}
    1:1:boolean isClipPath():0:0 -> c
    1:1:void toPath(android.graphics.Path):0:0 -> d
    1:3:androidx.core.graphics.PathParser$PathDataNode[] getPathData():0:0 -> getPathData
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ls/j$b;"}
    1:21:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> setPathData
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ls/j$b;)V"}
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.n$g:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    android.graphics.Path mPath -> a
    android.graphics.Path mRenderPath -> b
    android.graphics.Matrix mFinalPathMatrix -> c
    android.graphics.Paint mStrokePaint -> d
    android.graphics.Paint mFillPaint -> e
    android.graphics.PathMeasure mPathMeasure -> f
    int mChangingConfigurations -> g
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/n$d;"}
    float mBaseWidth -> i
    float mBaseHeight -> j
    float mViewportWidth -> k
    float mViewportHeight -> l
    int mRootAlpha -> m
    java.lang.String mRootName -> n
    java.lang.Boolean mIsStateful -> o
    androidx.collection.ArrayMap mVGTargetsMap -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    android.graphics.Matrix IDENTITY_MATRIX -> q
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$g;)V"}
    1:1:float cross(float,float,float,float):0:0 -> a
    1:1:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> b
    1:1:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$d;Landroid/graphics/Matrix;Landroid/graphics/Canvas;IILandroid/graphics/ColorFilter;)V"}
    1:1:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$d;Landroidx/vectordrawable/graphics/drawable/n$f;Landroid/graphics/Canvas;IILandroid/graphics/ColorFilter;)V"}
    1:1:float getMatrixScale(android.graphics.Matrix):0:0 -> e
    1:1:boolean isStateful():0:0 -> f
    1:1:boolean onStateChanged(int[]):0:0 -> g
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.n$h:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    int mChangingConfigurations -> a
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/vectordrawable/graphics/drawable/n$g;"}
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    boolean mAutoMirrored -> e
    android.graphics.Bitmap mCachedBitmap -> f
    android.content.res.ColorStateList mCachedTint -> g
    android.graphics.PorterDuff$Mode mCachedTintMode -> h
    int mCachedRootAlpha -> i
    boolean mCachedAutoMirrored -> j
    boolean mCacheDirty -> k
    android.graphics.Paint mTempPaint -> l
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/vectordrawable/graphics/drawable/n$h;)V"}
    1:1:boolean canReuseBitmap(int,int):0:0 -> a
    1:1:boolean canReuseCache():0:0 -> b
    1:1:void createCachedBitmapIfNeeded(int,int):0:0 -> c
    1:1:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0:0 -> d
    1:1:android.graphics.Paint getPaint(android.graphics.ColorFilter):0:0 -> e
    1:1:boolean hasTranslucentRoot():0:0 -> f
    1:1:boolean isStateful():0:0 -> g
    1:1:boolean onStateChanged(int[]):0:0 -> h
    1:1:void updateCacheStates():0:0 -> i
    1:1:void updateCachedBitmap(int,int):0:0 -> j
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.n$i:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
    3:3:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> newDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState$$ExternalSyntheticApiModelOutline0 -> androidx.vectordrawable.graphics.drawable.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.VectorDrawable m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
# {"id":"sourceFile","fileName":"CustomVersionedParcelable.java"}
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LM/a;"}
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    1:1:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> a
    1:1:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> b
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.a:
# {"id":"sourceFile","fileName":"VersionedParcel.java"}
    androidx.collection.ArrayMap mReadCache -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    androidx.collection.ArrayMap mWriteCache -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    androidx.collection.ArrayMap mParcelizerCache -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    1:10:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/a;Lp/a;Lp/a;)V"}
    void writeByteArray(byte[]) -> A
    1:1:void writeByteArray(byte[],int):0:0 -> B
    void writeCharSequence(java.lang.CharSequence) -> C
    1:1:void writeCharSequence(java.lang.CharSequence,int):0:0 -> D
    void writeInt(int) -> E
    1:1:void writeInt(int,int):0:0 -> F
    void writeParcelable(android.os.Parcelable) -> G
    1:1:void writeParcelable(android.os.Parcelable,int):0:0 -> H
    void writeString(java.lang.String) -> I
    1:1:void writeString(java.lang.String,int):0:0 -> J
    1:77:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LM/a;Landroidx/versionedparcelable/a;)V"}
    4:21:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LM/a;)V"}
    1:7:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LM/a;I)V"}
    1:48:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LM/a;)V"}
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:java.lang.Class findParcelClass(java.lang.Class):0:0 -> c
    1:1:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> d
    1:1:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> e
    1:1:boolean isStream():0:0 -> f
    boolean readBoolean() -> g
    1:1:boolean readBoolean(boolean,int):0:0 -> h
    byte[] readByteArray() -> i
    1:1:byte[] readByteArray(byte[],int):0:0 -> j
    java.lang.CharSequence readCharSequence() -> k
    1:1:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int):0:0 -> l
    boolean readField(int) -> m
    1:73:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/versionedparcelable/a;)LM/a;"}
    int readInt() -> o
    1:1:int readInt(int,int):0:0 -> p
    android.os.Parcelable readParcelable() -> q
    1:1:android.os.Parcelable readParcelable(android.os.Parcelable,int):0:0 -> r
    java.lang.String readString() -> s
    1:1:java.lang.String readString(java.lang.String,int):0:0 -> t
    1:17:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LM/a;"}
    1:12:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LM/a;I)LM/a;"}
    void setOutputField(int) -> w
    1:1:void setSerializationFlags(boolean,boolean):0:0 -> x
    void writeBoolean(boolean) -> y
    1:1:void writeBoolean(boolean,int):0:0 -> z
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.b:
# {"id":"sourceFile","fileName":"VersionedParcelParcel.java"}
    android.util.SparseIntArray mPositionLookup -> d
    android.os.Parcel mParcel -> e
    int mOffset -> f
    int mEnd -> g
    java.lang.String mPrefix -> h
    int mCurrentField -> i
    int mNextRead -> j
    int mFieldId -> k
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;IILjava/lang/String;Lp/a;Lp/a;Lp/a;)V"}
    1:1:void writeByteArray(byte[]):0:0 -> A
    1:1:void writeCharSequence(java.lang.CharSequence):0:0 -> C
    1:1:void writeInt(int):0:0 -> E
    1:1:void writeParcelable(android.os.Parcelable):0:0 -> G
    1:1:void writeString(java.lang.String):0:0 -> I
    1:1:void closeField():0:0 -> a
    1:1:androidx.versionedparcelable.VersionedParcel createSubParcel():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:boolean readBoolean():0:0 -> g
    1:1:byte[] readByteArray():0:0 -> i
    1:1:java.lang.CharSequence readCharSequence():0:0 -> k
    1:1:boolean readField(int):0:0 -> m
    1:1:int readInt():0:0 -> o
    1:1:android.os.Parcelable readParcelable():0:0 -> q
    1:1:java.lang.String readString():0:0 -> s
    1:1:void setOutputField(int):0:0 -> w
    1:1:void writeBoolean(boolean):0:0 -> y
androidx.versionedparcelable.VersionedParcelable -> M.a:
# {"id":"sourceFile","fileName":"VersionedParcelable.java"}
com.google.android.gms.ads.identifier.AdvertisingIdClient -> N.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    com.google.android.gms.common.BlockingServiceConnection zza -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LO/a;"}
    com.google.android.gms.internal.ads_identifier.zzf zzb -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LV/f;"}
    boolean zzc -> c
    java.lang.Object zzd -> d
    com.google.android.gms.ads.identifier.zzb zze -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"LN/c;"}
    android.content.Context zzg -> f
    long zzf -> g
    1:30:void <init>(android.content.Context,long,boolean,boolean):0:0 -> <init>
    1:63:com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)LN/a$a;"}
    1:55:void zza():0:0 -> b
    1:147:void zzb(boolean):0:0 -> c
    1:1:boolean zzc(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LN/a$a;ZFJLjava/lang/String;Ljava/lang/Throwable;)Z"}
    1:113:com.google.android.gms.ads.identifier.AdvertisingIdClient$Info zzd(int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)LN/a$a;"}
    1:39:void zze():0:0 -> f
    1:7:void finalize():0:0 -> finalize
com.google.android.gms.ads.identifier.AdvertisingIdClient$Info -> N.a$a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    java.lang.String zza -> a
    boolean zzb -> b
    1:8:void <init>(java.lang.String,boolean):0:0 -> <init>
    1:3:java.lang.String getId():0:0 -> a
    1:3:boolean isLimitAdTrackingEnabled():0:0 -> b
    1:40:java.lang.String toString():0:0 -> toString
com.google.android.gms.ads.identifier.zza -> N.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    java.util.Map zza -> a
    1:6:void <init>(com.google.android.gms.ads.identifier.AdvertisingIdClient,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LN/a;Ljava/util/Map;)V"}
    1:54:void run():0:0 -> run
com.google.android.gms.ads.identifier.zzb -> N.c:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    java.lang.ref.WeakReference zzc -> a
    long zzd -> b
    java.util.concurrent.CountDownLatch zza -> c
    boolean zzb -> d
    1:27:void <init>(com.google.android.gms.ads.identifier.AdvertisingIdClient,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LN/a;J)V"}
    1:17:void zza():0:0 -> a
    1:20:void run():0:0 -> run
com.google.android.gms.ads.identifier.zzc -> N.d:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    1:200:void zza(java.lang.String):0:0 -> a
com.google.android.gms.common.BlockingServiceConnection -> O.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    boolean zza -> a
    java.util.concurrent.BlockingQueue zzb -> b
    1:14:void <init>():0:0 -> <init>
    1:39:android.os.IBinder getServiceWithTimeout(long,java.util.concurrent.TimeUnit):0:0 -> a
    1:6:void onServiceConnected(android.content.ComponentName,android.os.IBinder):0:0 -> onServiceConnected
    1:1:void onServiceDisconnected(android.content.ComponentName):0:0 -> onServiceDisconnected
com.google.android.gms.common.GoogleApiAvailabilityLight -> O.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    int GOOGLE_PLAY_SERVICES_VERSION_CODE -> a
    com.google.android.gms.common.GoogleApiAvailabilityLight zza -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LO/b;"}
    1:12:void <clinit>():0:0 -> <clinit>
    1:4:void <init>():0:0 -> <init>
    1:3:com.google.android.gms.common.GoogleApiAvailabilityLight getInstance():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LO/b;"}
    1:14:int isGooglePlayServicesAvailable(android.content.Context,int):0:0 -> b
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException -> com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.common.GooglePlayServicesManifestException -> com.google.android.gms.common.GooglePlayServicesManifestException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    int zza -> a
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException -> com.google.android.gms.common.GooglePlayServicesMissingManifestValueException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.common.GooglePlayServicesNotAvailableException -> O.c:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    int errorCode -> a
    1:6:void <init>(int):0:0 -> <init>
com.google.android.gms.common.GooglePlayServicesUtilLight -> O.h:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    int GOOGLE_PLAY_SERVICES_VERSION_CODE -> a
    java.util.concurrent.atomic.AtomicBoolean sCanceledAvailabilityNotification -> b
    java.util.concurrent.atomic.AtomicBoolean zzc -> c
    1:15:void <clinit>():0:0 -> <clinit>
    1:297:int isGooglePlayServicesAvailable(android.content.Context,int):0:0 -> a
    9:17:boolean isPlayServicesPossiblyUpdating(android.content.Context,int):0:0 -> b
    1:45:boolean isRestrictedUserProfile(android.content.Context):0:0 -> c
    1:83:boolean zza(android.content.Context,java.lang.String):0:0 -> d
com.google.android.gms.common.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline0 -> O.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageInstaller O.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline0.m(android.content.pm.PackageManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.gms.common.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline1 -> O.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List O.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline1.m(android.content.pm.PackageInstaller):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.gms.common.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline2 -> O.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageInstaller$SessionInfo O.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline2.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.gms.common.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline3 -> O.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String O.GooglePlayServicesUtilLight$$ExternalSyntheticApiModelOutline3.m(android.content.pm.PackageInstaller$SessionInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.gms.common.GoogleSignatureVerifier -> O.i:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    android.content.Context zzb -> a
    com.google.android.gms.common.GoogleSignatureVerifier zza -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LO/i;"}
    1:10:void <init>(android.content.Context):0:0 -> <init>
    1:29:com.google.android.gms.common.GoogleSignatureVerifier getInstance(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)LO/i;"}
    1:50:com.google.android.gms.common.zzi zza(android.content.pm.PackageInfo,com.google.android.gms.common.zzi[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/pm/PackageInfo;[LO/o;)LO/o;"}
    5:33:boolean zzb(android.content.pm.PackageInfo,boolean):0:0 -> c
com.google.android.gms.common.R$string -> O.j:
    int common_google_play_services_unknown_issue -> a
com.google.android.gms.common.annotation.KeepName -> com.google.android.gms.common.annotation.KeepName:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.common.api.internal.LifecycleActivity -> P.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.common.api.internal.LifecycleCallback -> com.google.android.gms.common.api.internal.LifecycleCallback:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:8:com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity):0:0 -> getChimeraLifecycleFragmentImpl
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LP/a;)LP/b;"}
com.google.android.gms.common.api.internal.LifecycleFragment -> P.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.common.internal.Preconditions -> Q.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    4:9:void checkArgument(boolean):0:0 -> a
    1:13:void checkNotMainThread(java.lang.String):0:0 -> b
    4:11:java.lang.Object checkNotNull(java.lang.Object):0:0 -> c
com.google.android.gms.common.internal.ReflectedParcelable -> com.google.android.gms.common.internal.ReflectedParcelable:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.common.internal.zzag -> Q.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    java.lang.Object zza -> a
    boolean zzb -> b
    java.lang.String zzc -> c
    int zzd -> d
    1:8:void <clinit>():0:0 -> <clinit>
    1:6:int zza(android.content.Context):0:0 -> a
    1:63:void zzc(android.content.Context):0:0 -> b
com.google.android.gms.common.internal.zzy -> Q.c:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:6:void <init>():0:0 -> <init>
    9:30:boolean zza(int,android.os.Parcel,android.os.Parcel,int):0:0 -> v
com.google.android.gms.common.internal.zzz -> Q.d:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    int zzc() -> a
    com.google.android.gms.dynamic.IObjectWrapper zzd() -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LU/a;"}
com.google.android.gms.common.stats.ConnectionTracker -> R.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    java.util.concurrent.ConcurrentHashMap zza -> a
    java.lang.Object zzb -> b
    com.google.android.gms.common.stats.ConnectionTracker zzc -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"LR/b;"}
    1:8:void <clinit>():0:0 -> <clinit>
    1:11:void <init>():0:0 -> <init>
    1:20:boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int):0:0 -> a
    1:31:com.google.android.gms.common.stats.ConnectionTracker getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LR/b;"}
    1:42:void unbindService(android.content.Context,android.content.ServiceConnection):0:0 -> c
    1:4:void zzb(android.content.Context,android.content.ServiceConnection):0:0 -> d
    1:1:boolean zzc(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,boolean,java.util.concurrent.Executor):0:0 -> e
    1:2:boolean zzd(android.content.ServiceConnection):0:0 -> f
    1:18:boolean zze(android.content.Context,android.content.Intent,android.content.ServiceConnection,int,java.util.concurrent.Executor):0:0 -> g
com.google.android.gms.common.stats.ConnectionTracker$$ExternalSyntheticApiModelOutline0 -> R.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean R.ConnectionTracker$$ExternalSyntheticApiModelOutline0.m(android.content.Context,android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.gms.common.util.DeviceProperties -> S.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    java.lang.Boolean zzd -> a
    java.lang.Boolean zze -> b
    java.lang.Boolean zzg -> c
    1:37:boolean isWearable(android.content.Context):0:0 -> a
    1:30:boolean isWearableWithoutPlayStore(android.content.Context):0:0 -> b
    1:37:boolean zza(android.content.Context):0:0 -> c
    1:44:boolean zzb(android.content.Context):0:0 -> d
com.google.android.gms.common.util.DynamiteApi -> com.google.android.gms.common.util.DynamiteApi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.common.util.PlatformVersion -> S.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:2:boolean isAtLeastJellyBeanMR2():0:0 -> a
    1:10:boolean isAtLeastKitKatWatch():0:0 -> b
    1:10:boolean isAtLeastLollipop():0:0 -> c
    1:10:boolean isAtLeastN():0:0 -> d
    1:10:boolean isAtLeastO():0:0 -> e
    1:10:boolean isAtLeastQ():0:0 -> f
com.google.android.gms.common.util.zza -> S.c:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    5:7:int zza(int):0:0 -> a
com.google.android.gms.common.util.zzb -> S.d:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:14:boolean zza():0:0 -> a
com.google.android.gms.common.wrappers.PackageManagerWrapper -> T.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    android.content.Context zza -> a
    1:6:void <init>(android.content.Context):0:0 -> <init>
    1:11:android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int):0:0 -> a
com.google.android.gms.common.wrappers.Wrappers -> T.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    com.google.android.gms.common.wrappers.PackageManagerWrapper zzb -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LT/a;"}
    com.google.android.gms.common.wrappers.Wrappers zza -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LT/b;"}
    1:8:void <clinit>():0:0 -> <clinit>
    1:7:void <init>():0:0 -> <init>
    1:7:com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)LT/a;"}
    1:31:com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)LT/a;"}
com.google.android.gms.common.zze -> O.k:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:4:void <init>(byte[]):0:0 -> <init>
    1:7:byte[] zzb():0:0 -> y
com.google.android.gms.common.zzf -> O.l:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:4:void <init>(byte[]):0:0 -> <init>
    1:7:byte[] zzb():0:0 -> y
com.google.android.gms.common.zzg -> O.m:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:4:void <init>(byte[]):0:0 -> <init>
    1:7:byte[] zzb():0:0 -> y
com.google.android.gms.common.zzh -> O.n:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:4:void <init>(byte[]):0:0 -> <init>
    1:7:byte[] zzb():0:0 -> y
com.google.android.gms.common.zzi -> O.o:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    int zza -> a
    1:21:void <init>(byte[]):0:0 -> <init>
    1:3:int zzc():0:0 -> a
    4:50:boolean equals(java.lang.Object):0:0 -> equals
    1:3:int hashCode():0:0 -> hashCode
    1:9:com.google.android.gms.dynamic.IObjectWrapper zzd():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()LU/a;"}
    1:14:byte[] zze(java.lang.String):0:0 -> w
    byte[] zzf() -> x
com.google.android.gms.common.zzj -> O.p:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    byte[] zza -> b
    4:13:void <init>(byte[]):0:0 -> <init>
    1:3:byte[] zzf():0:0 -> x
com.google.android.gms.common.zzk -> O.q:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    java.lang.ref.WeakReference zzb -> b
    java.lang.ref.WeakReference zza -> c
    1:9:void <clinit>():0:0 -> <clinit>
    1:8:void <init>(byte[]):0:0 -> <init>
    1:29:byte[] zzf():0:0 -> x
    byte[] zzb() -> y
com.google.android.gms.common.zzl -> O.r:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    com.google.android.gms.common.zzi[] zza -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[LO/o;"}
    2:16:void <clinit>():0:0 -> <clinit>
com.google.android.gms.common.zzm -> O.s:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    com.google.android.gms.common.zzk zza -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LO/q;"}
    com.google.android.gms.common.zzk zzb -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"LO/q;"}
    com.google.android.gms.common.zzk zzc -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"LO/q;"}
    com.google.android.gms.common.zzk zzd -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"LO/q;"}
    java.lang.Object zzf -> e
    android.content.Context zzg -> f
    1:60:void <clinit>():0:0 -> <clinit>
    1:32:void zzd(android.content.Context):0:0 -> a
com.google.android.gms.dynamic.IObjectWrapper -> U.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.dynamic.IObjectWrapper$Stub -> U.a$a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:6:void <init>():0:0 -> <init>
com.google.android.gms.dynamic.ObjectWrapper -> U.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    java.lang.Object zza -> a
    1:6:void <init>(java.lang.Object):0:0 -> <init>
    1:116:java.lang.Object unwrap(com.google.android.gms.dynamic.IObjectWrapper):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LU/a;)Ljava/lang/Object;"}
    1:6:com.google.android.gms.dynamic.IObjectWrapper wrap(java.lang.Object):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)LU/a;"}
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader -> com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
com.google.android.gms.internal.ads_identifier.zza -> V.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    android.os.IBinder zza -> a
    java.lang.String zzb -> b
    1:10:void <init>(android.os.IBinder,java.lang.String):0:0 -> <init>
    1:3:android.os.IBinder asBinder():0:0 -> asBinder
    1:10:android.os.Parcel zza():0:0 -> v
    1:28:android.os.Parcel zzb(int,android.os.Parcel):0:0 -> w
com.google.android.gms.internal.ads_identifier.zzb -> V.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
com.google.android.gms.internal.ads_identifier.zzc -> V.c:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    java.lang.ClassLoader zza -> a
    1:9:void <clinit>():0:0 -> <clinit>
    2:5:void zza(android.os.Parcel,boolean):0:0 -> a
    1:10:boolean zzb(android.os.Parcel):0:0 -> b
com.google.android.gms.internal.ads_identifier.zzd -> V.d:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    1:6:void <init>(android.os.IBinder):0:0 -> <init>
    2:17:java.lang.String zzc():0:0 -> a
    1:21:boolean zze(boolean):0:0 -> k
com.google.android.gms.internal.ads_identifier.zze -> V.e:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    5:23:com.google.android.gms.internal.ads_identifier.zzf zza(android.os.IBinder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)LV/f;"}
com.google.android.gms.internal.ads_identifier.zzf -> V.f:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    java.lang.String zzc() -> a
    boolean zze(boolean) -> k
com.google.android.gms.internal.ads_identifier.zzg -> V.g:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    1:4:void <init>():0:0 -> <init>
com.google.android.gms.internal.ads_identifier.zzh -> V.h:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
com.google.android.gms.internal.ads_identifier.zzi -> V.i:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.1.0"}
    com.google.android.gms.internal.ads_identifier.zzh zza -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"LV/h;"}
    1:8:void <clinit>():0:0 -> <clinit>
    1:1:void zza():0:0 -> a
    1:1:void zzb(int):0:0 -> b
com.google.android.gms.internal.common.zzb -> W.a:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    1:7:void <init>(java.lang.String):0:0 -> <init>
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
    6:25:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
    1:2:boolean zza(int,android.os.Parcel,android.os.Parcel,int):0:0 -> v
com.google.android.gms.internal.common.zzc -> W.b:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@18.0.0"}
    java.lang.ClassLoader zza -> a
    1:9:void <clinit>():0:0 -> <clinit>
    4:12:void zze(android.os.Parcel,android.os.IInterface):0:0 -> a
com.google.androidbrowserhelper.R$string -> X.a:
    int manage_space_no_data_toast -> a
    int manage_space_not_supported_toast -> b
com.google.androidbrowserhelper.trusted.ChromeLegacyUtils -> Y.b:
# {"id":"sourceFile","fileName":"ChromeLegacyUtils.java"}
    java.util.List SUPPORTED_CHROME_PACKAGES -> a
    java.util.List VERSION_CHECK_CHROME_PACKAGES -> b
    java.util.List LOCAL_BUILD_PACKAGES -> c
    1:51:void <clinit>():0:0 -> <clinit>
    1:19:boolean checkChromeVersion(android.content.pm.PackageManager,java.lang.String,int):0:0 -> a
    2:25:int getVersionCode(android.content.pm.PackageManager,java.lang.String):0:0 -> b
    1:18:boolean supportsManageSpaceWithoutWarmupAndValidation(android.content.pm.PackageManager,java.lang.String):0:0 -> c
    1:18:boolean supportsTrustedWebActivities(android.content.pm.PackageManager,java.lang.String):0:0 -> d
com.google.androidbrowserhelper.trusted.ChromeLegacyUtils$$ExternalSyntheticApiModelOutline0 -> Y.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:long Y.ChromeLegacyUtils$$ExternalSyntheticApiModelOutline0.m(android.content.pm.PackageInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidbrowserhelper.trusted.ChromeOsSupport -> Y.c:
# {"id":"sourceFile","fileName":"ChromeOsSupport.java"}
    1:7:boolean isRunningOnArc(android.content.pm.PackageManager):0:0 -> a
com.google.androidbrowserhelper.trusted.DelegationService -> Y.d:
# {"id":"sourceFile","fileName":"DelegationService.java"}
    java.util.List mExtraCommandHandlers -> e
    com.google.androidbrowserhelper.trusted.SharedPreferencesTokenStore mTokenStore -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"LY/i;"}
    1:19:void <init>():0:0 -> <init>
    1:35:androidx.browser.trusted.TokenStore getTokenStore():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/m;"}
    1:34:android.os.Bundle onExtraCommand(java.lang.String,android.os.Bundle,androidx.browser.trusted.TrustedWebActivityCallbackRemote):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/os/Bundle;Lo/n;)Landroid/os/Bundle;"}
    1:6:void registerExtraCommandHandler(com.google.androidbrowserhelper.trusted.ExtraCommandHandler):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(LY/e;)V"}
com.google.androidbrowserhelper.trusted.ExtraCommandHandler -> Y.e:
# {"id":"sourceFile","fileName":"ExtraCommandHandler.java"}
    android.os.Bundle handleExtraCommand(android.content.Context,java.lang.String,android.os.Bundle,androidx.browser.trusted.TrustedWebActivityCallbackRemote) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;Lo/n;)Landroid/os/Bundle;"}
com.google.androidbrowserhelper.trusted.FocusActivity -> com.google.androidbrowserhelper.trusted.FocusActivity:
# {"id":"sourceFile","fileName":"FocusActivity.java"}
com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity -> com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity:
# {"id":"sourceFile","fileName":"ManageDataLauncherActivity.java"}
    java.lang.String mProviderPackage -> b
    androidx.browser.customtabs.CustomTabsServiceConnection mConnection -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/e;"}
    1:1:void access$200(com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity,androidx.browser.customtabs.CustomTabsSession):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/google/androidbrowserhelper/trusted/ManageDataLauncherActivity;Landroidx/browser/customtabs/f;)V"}
    1:1:android.view.View createLoadingView():0:0 -> b
    1:1:android.net.Uri getDefaultUrlForManagingSpace():0:0 -> c
    1:1:void handleNoSupportForManageSpace():0:0 -> d
    1:1:void handleTwaNeverLaunched():0:0 -> e
    1:1:boolean launchBrowserSiteSettings(android.app.Activity,androidx.browser.customtabs.CustomTabsSession,java.lang.String,android.net.Uri):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/browser/customtabs/f;Ljava/lang/String;Landroid/net/Uri;)Z"}
    1:1:void launchSettings(androidx.browser.customtabs.CustomTabsSession):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/browser/customtabs/f;)V"}
    1:1:void onError(java.lang.RuntimeException):0:0 -> h
    1:1:boolean supportsTrustedWebActivities(java.lang.String):0:0 -> i
com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$1 -> com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$a:
# {"id":"sourceFile","fileName":"ManageDataLauncherActivity.java"}
com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$Connection -> com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$b:
# {"id":"sourceFile","fileName":"ManageDataLauncherActivity.java"}
    com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity this$0 -> b
    1:1:void <init>(com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity):0:0 -> <init>
    2:2:void <init>(com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity,com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/google/androidbrowserhelper/trusted/ManageDataLauncherActivity;Lcom/google/androidbrowserhelper/trusted/ManageDataLauncherActivity$a;)V"}
    1:1:void onCustomTabsServiceConnected(android.content.ComponentName,androidx.browser.customtabs.CustomTabsClient):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/ComponentName;Landroidx/browser/customtabs/c;)V"}
com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$LegacyChromeConnection -> com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$c:
# {"id":"sourceFile","fileName":"ManageDataLauncherActivity.java"}
    androidx.browser.customtabs.CustomTabsSession mSession -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/f;"}
    androidx.browser.customtabs.CustomTabsCallback mCustomTabsCallback -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/b;"}
    com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity this$0 -> d
    1:1:void <init>(com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity):0:0 -> <init>
    2:2:void <init>(com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity,com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/google/androidbrowserhelper/trusted/ManageDataLauncherActivity;Lcom/google/androidbrowserhelper/trusted/ManageDataLauncherActivity$a;)V"}
    1:1:void onCustomTabsServiceConnected(android.content.ComponentName,androidx.browser.customtabs.CustomTabsClient):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/ComponentName;Landroidx/browser/customtabs/c;)V"}
    1:1:androidx.browser.customtabs.CustomTabsSession access$300(com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$LegacyChromeConnection):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/google/androidbrowserhelper/trusted/ManageDataLauncherActivity$c;)Landroidx/browser/customtabs/f;"}
com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$LegacyChromeConnection$1 -> com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$c$a:
# {"id":"sourceFile","fileName":"ManageDataLauncherActivity.java"}
    com.google.androidbrowserhelper.trusted.ManageDataLauncherActivity$LegacyChromeConnection this$1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/google/androidbrowserhelper/trusted/ManageDataLauncherActivity$c;"}
    1:1:void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle):0:0 -> g
com.google.androidbrowserhelper.trusted.NotificationDelegationExtraCommandHandler -> Y.f:
# {"id":"sourceFile","fileName":"NotificationDelegationExtraCommandHandler.java"}
    1:4:void <init>():0:0 -> <init>
    1:86:android.os.Bundle handleExtraCommand(android.content.Context,java.lang.String,android.os.Bundle,androidx.browser.trusted.TrustedWebActivityCallbackRemote):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;Lo/n;)Landroid/os/Bundle;"}
com.google.androidbrowserhelper.trusted.NotificationPermissionRequestActivity -> com.google.androidbrowserhelper.trusted.NotificationPermissionRequestActivity:
# {"id":"sourceFile","fileName":"NotificationPermissionRequestActivity.java"}
    java.lang.String mChannelName -> b
    android.os.Messenger mMessenger -> c
    1:1:android.app.PendingIntent createPermissionRequestPendingIntent(android.content.Context,java.lang.String):0:0 -> a
    1:1:void sendPermissionMessage(android.os.Messenger,boolean):0:0 -> b
com.google.androidbrowserhelper.trusted.NotificationUtils -> Y.g:
# {"id":"sourceFile","fileName":"NotificationUtils.java"}
    1:42:boolean areNotificationsEnabled(android.content.Context,java.lang.String):0:0 -> a
    1:32:java.lang.String channelNameToId(java.lang.String):0:0 -> b
    1:25:void createNotificationChannel(android.content.Context,java.lang.String):0:0 -> c
com.google.androidbrowserhelper.trusted.PrefUtils -> Y.h:
# {"id":"sourceFile","fileName":"PrefUtils.java"}
    1:12:android.content.SharedPreferences getAppSharedPreferences(android.content.Context):0:0 -> a
    1:12:boolean hasRequestedNotificationPermission(android.content.Context):0:0 -> b
    1:19:void setHasRequestedNotificationPermission(android.content.Context):0:0 -> c
com.google.androidbrowserhelper.trusted.SharedPreferencesTokenStore -> Y.i:
# {"id":"sourceFile","fileName":"SharedPreferencesTokenStore.java"}
    android.content.Context mContext -> a
    1:10:void <init>(android.content.Context):0:0 -> <init>
    1:26:androidx.browser.trusted.Token load():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/j;"}
    1:40:void store(androidx.browser.trusted.Token):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;)V"}
com.google.androidbrowserhelper.trusted.TwaSharedPreferencesManager -> Y.j:
# {"id":"sourceFile","fileName":"TwaSharedPreferencesManager.java"}
    android.content.SharedPreferences mSharedPreferences -> a
    1:13:void <init>(android.content.Context):0:0 -> <init>
    1:10:java.lang.String readLastLaunchedProviderPackageName():0:0 -> a
com.google.androidbrowserhelper.trusted.WebViewFallbackActivity -> com.google.androidbrowserhelper.trusted.WebViewFallbackActivity:
# {"id":"sourceFile","fileName":"WebViewFallbackActivity.java"}
    android.net.Uri mLaunchUrl -> b
    int mStatusBarColor -> c
    android.webkit.WebView mWebView -> d
    java.util.List mExtraOrigins -> e
    java.lang.String TAG -> f
    1:1:android.webkit.WebView access$000(com.google.androidbrowserhelper.trusted.WebViewFallbackActivity):0:0 -> a
    1:1:android.webkit.WebView access$002(com.google.androidbrowserhelper.trusted.WebViewFallbackActivity,android.webkit.WebView):0:0 -> b
    1:1:void access$100(android.webkit.WebSettings):0:0 -> c
    1:1:android.net.Uri access$200(com.google.androidbrowserhelper.trusted.WebViewFallbackActivity):0:0 -> d
    1:1:int access$300(com.google.androidbrowserhelper.trusted.WebViewFallbackActivity):0:0 -> e
    1:1:java.lang.String access$400():0:0 -> f
    1:1:java.util.List access$500(com.google.androidbrowserhelper.trusted.WebViewFallbackActivity):0:0 -> g
    1:1:android.webkit.WebChromeClient createWebViewChromeClient():0:0 -> h
    1:1:android.webkit.WebViewClient createWebViewClient():0:0 -> i
    1:1:void setupWebSettings(android.webkit.WebSettings):0:0 -> j
com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$$ExternalSyntheticApiModelOutline0 -> Y.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void Y.WebViewFallbackActivity$$ExternalSyntheticApiModelOutline0.m(android.view.Window,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$$ExternalSyntheticApiModelOutline1 -> Y.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void Y.WebViewFallbackActivity$$ExternalSyntheticApiModelOutline1.m(android.view.Window,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$$ExternalSyntheticApiModelOutline2 -> Y.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int Y.WebViewFallbackActivity$$ExternalSyntheticApiModelOutline2.m(android.view.Window):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$1 -> com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$a:
# {"id":"sourceFile","fileName":"WebViewFallbackActivity.java"}
    com.google.androidbrowserhelper.trusted.WebViewFallbackActivity this$0 -> a
    1:1:boolean matchExtraOrigins(android.net.Uri):0:0 -> a
    1:1:boolean shouldOverrideUrlLoading(android.net.Uri):0:0 -> b
    1:1:boolean uriOriginsMatch(android.net.Uri,android.net.Uri):0:0 -> c
    1:1:boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest):0:0 -> shouldOverrideUrlLoading
    2:2:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String):0:0 -> shouldOverrideUrlLoading
com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$1$$ExternalSyntheticApiModelOutline0 -> Y.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Uri Y.WebViewFallbackActivity$1$$ExternalSyntheticApiModelOutline0.m(android.webkit.WebResourceRequest):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$2 -> com.google.androidbrowserhelper.trusted.WebViewFallbackActivity$b:
# {"id":"sourceFile","fileName":"WebViewFallbackActivity.java"}
    android.view.View fullScreenView -> a
    int originalOrientation -> b
    com.google.androidbrowserhelper.trusted.WebViewFallbackActivity this$0 -> c
ir.technogold.twa.Application -> ir.technogold.twa.Application:
# {"id":"sourceFile","fileName":"Application.java"}
ir.technogold.twa.DelegationService -> ir.technogold.twa.DelegationService:
# {"id":"sourceFile","fileName":"DelegationService.java"}
ir.technogold.twa.LauncherActivity -> ir.technogold.twa.LauncherActivity:
# {"id":"sourceFile","fileName":"LauncherActivity.java"}
    androidx.browser.customtabs.CustomTabsClient mClient -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/browser/customtabs/c;"}
    1:1:void $r8$lambda$1eNHTji8ewPbBQTRwuypTxYzwpU(ir.technogold.twa.LauncherActivity,java.lang.String):0:0 -> K
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$5ab3I_q2evjzeiVDK3xhN9CODEo(ir.technogold.twa.LauncherActivity):0:0 -> L
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.browser.customtabs.CustomTabsClient access$000(ir.technogold.twa.LauncherActivity):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lir/technogold/twa/LauncherActivity;)Landroidx/browser/customtabs/c;"}
    1:1:androidx.browser.customtabs.CustomTabsClient access$002(ir.technogold.twa.LauncherActivity,androidx.browser.customtabs.CustomTabsClient):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lir/technogold/twa/LauncherActivity;Landroidx/browser/customtabs/c;)Landroidx/browser/customtabs/c;"}
    1:1:androidx.browser.customtabs.CustomTabsServiceConnection getConnection(java.lang.String):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/browser/customtabs/e;"}
    1:1:void lambda$onCreate$0(java.lang.String):0:0 -> P
    1:1:void lambda$onCreate$1():0:0 -> Q
    1:1:java.lang.String retrieveGAID():0:0 -> R
ir.technogold.twa.LauncherActivity$$ExternalSyntheticLambda0 -> Z.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    ir.technogold.twa.LauncherActivity ir.technogold.twa.LauncherActivity$$InternalSyntheticLambda$1$83bbff8a25b251225c24e4c2bee4f064004d3e1ecec8bb1167898fdfe294c46c$0.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void Z.LauncherActivity$$ExternalSyntheticLambda0.<init>(ir.technogold.twa.LauncherActivity):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void Z.LauncherActivity$$ExternalSyntheticLambda0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
ir.technogold.twa.LauncherActivity$$ExternalSyntheticLambda1 -> Z.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    ir.technogold.twa.LauncherActivity ir.technogold.twa.LauncherActivity$$InternalSyntheticLambda$2$543daa20773790b898ec734177440ce717e9ef2de0f6b5d9383160d93d5cb9a2$0.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String ir.technogold.twa.LauncherActivity$$InternalSyntheticLambda$2$543daa20773790b898ec734177440ce717e9ef2de0f6b5d9383160d93d5cb9a2$0.f$1 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void Z.LauncherActivity$$ExternalSyntheticLambda1.<init>(ir.technogold.twa.LauncherActivity,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void Z.LauncherActivity$$ExternalSyntheticLambda1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
ir.technogold.twa.LauncherActivity$1 -> ir.technogold.twa.LauncherActivity$a:
# {"id":"sourceFile","fileName":"LauncherActivity.java"}
    java.lang.String val$url -> b
    ir.technogold.twa.LauncherActivity this$0 -> c
    1:1:void onCustomTabsServiceConnected(android.content.ComponentName,androidx.browser.customtabs.CustomTabsClient):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/ComponentName;Landroidx/browser/customtabs/c;)V"}
